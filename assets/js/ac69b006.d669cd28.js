"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[47605],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),u=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=u(r),f=n,d=s["".concat(p,".").concat(f)]||s[f]||m[f]||i;return r?a.createElement(d,l(l({ref:t},c),{},{components:r})):a.createElement(d,l({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=f;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[s]="string"==typeof e?e:n,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},94730:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>b,default:()=>O,frontMatter:()=>d,metadata:()=>y,toc:()=>M});var a=r(3905),n=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,s=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&c(e,r,t[r]);if(o)for(var r of o(t))u.call(t,r)&&c(e,r,t[r]);return e},m=(e,t)=>i(e,l(t)),f=(e,t)=>{var r={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&u.call(e,a)&&(r[a]=e[a]);return r};const d={title:"HashBiMultiMap.Context<UK,UV>",slug:"/rimbu/bimultimap/HashBiMultiMap/Context/interface"},b="interface HashBiMultiMap.Context<UK,UV>",y={unversionedId:"rimbu_bimultimap/HashBiMultiMap/Context.interface",id:"rimbu_bimultimap/HashBiMultiMap/Context.interface",title:"HashBiMultiMap.Context<UK,UV>",description:"The HashBiMultiMap's Context instance that serves as a factory for all related immutable instances and builders.",source:"@site/api/rimbu_bimultimap/HashBiMultiMap/Context.interface.mdx",sourceDirName:"rimbu_bimultimap/HashBiMultiMap",slug:"/rimbu/bimultimap/HashBiMultiMap/Context/interface",permalink:"/api/rimbu/bimultimap/HashBiMultiMap/Context/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"HashBiMultiMap.Context<UK,UV>",slug:"/rimbu/bimultimap/HashBiMultiMap/Context/interface"},sidebar:"defaultSidebar",previous:{title:"HashBiMultiMap.Builder<K,V>",permalink:"/api/rimbu/bimultimap/HashBiMultiMap/Builder/interface"},next:{title:"HashBiMultiMap.NonEmpty<K,V>",permalink:"/api/rimbu/bimultimap/HashBiMultiMap/NonEmpty/interface"}},h={},M=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>typeTag</code>",id:"typetag",level:3},{value:"Definition",id:"definition",level:4}],v={toc:M},k="wrapper";function O(e){var t=e,{components:r}=t,n=f(t,["components"]);return(0,a.kt)(k,m(s(s({},v),n),{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",s({},{id:"interface-hashbimultimapcontextukuv"}),(0,a.kt)("inlineCode",{parentName:"h1"},"interface HashBiMultiMap.Context<UK,UV>")),(0,a.kt)("p",null,"The HashBiMultiMap's Context instance that serves as a factory for all related immutable instances and builders."),(0,a.kt)("h2",s({},{id:"type-parameters"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),"UK"),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the upper type limit for key types for which this context can create instances")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),"UV"),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the upper type limit for value types for which this context can create instances")))),(0,a.kt)("h2",s({},{id:"properties"}),"Properties"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"typetag"}),(0,a.kt)("inlineCode",{parentName:"h3"},"typeTag")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly typeTag: 'HashBiMultiMap';")))))}O.isMDXComponent=!0}}]);