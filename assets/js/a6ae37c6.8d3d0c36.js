"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[85779],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>h});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},p=Object.keys(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),m=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):d(d({},t),e)),a},l=function(e){var t=m(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,p=e.originalType,i=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),c=m(a),s=n,h=c["".concat(i,".").concat(s)]||c[s]||u[s]||p;return a?r.createElement(h,d(d({ref:t},l),{},{components:a})):r.createElement(h,d({ref:t},l))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=a.length,d=new Array(p);d[0]=s;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[c]="string"==typeof e?e:n,d[1]=o;for(var m=2;m<p;m++)d[m]=a[m];return r.createElement.apply(null,d)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"},69507:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>k,contentTitle:()=>b,default:()=>g,frontMatter:()=>h,metadata:()=>f,toc:()=>y});var r=a(3905),n=Object.defineProperty,p=Object.defineProperties,d=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,l=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,c=(e,t)=>{for(var a in t||(t={}))i.call(t,a)&&l(e,a,t[a]);if(o)for(var a of o(t))m.call(t,a)&&l(e,a,t[a]);return e},u=(e,t)=>p(e,d(t)),s=(e,t)=>{var a={};for(var r in e)i.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&o)for(var r of o(e))t.indexOf(r)<0&&m.call(e,r)&&(a[r]=e[r]);return a};const h={title:"@rimbu/ordered/map",slug:"/rimbu/ordered/map"},b="package @rimbu/ordered/map",f={unversionedId:"rimbu_ordered/map/index",id:"rimbu_ordered/map/index",title:"@rimbu/ordered/map",description:"The @rimbu/ordered/map package provides various OrderedMap implementations.",source:"@site/api/rimbu_ordered/map/index.mdx",sourceDirName:"rimbu_ordered/map",slug:"/rimbu/ordered/map",permalink:"/api/rimbu/ordered/map",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/ordered/map",slug:"/rimbu/ordered/map"},sidebar:"defaultSidebar",previous:{title:"@rimbu/ordered",permalink:"/api/rimbu/ordered"},next:{title:"OrderedHashMap (namespace)",permalink:"/api/rimbu/ordered/map/OrderedHashMap/namespace"}},k={},y=[{value:"Interfaces",id:"interfaces",level:2},{value:"Namespaces",id:"namespaces",level:2}],O={toc:y},N="wrapper";function g(e){var t=e,{components:a}=t,n=s(t,["components"]);return(0,r.kt)(N,u(c(c({},O),n),{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",c({},{id:"package-rimbuorderedmap"}),(0,r.kt)("inlineCode",{parentName:"h1"},"package @rimbu/ordered/map")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@rimbu/ordered/map")," package provides various ",(0,r.kt)("inlineCode",{parentName:"p"},"OrderedMap")," implementations."),(0,r.kt)("p",null," See the ",(0,r.kt)("a",c({parentName:"p"},{href:"/docs/collections/map"}),"Rimbu docs Map page")," for more information."),(0,r.kt)("h2",c({},{id:"interfaces"}),"Interfaces"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("a",c({parentName:"td"},{href:"/api/rimbu/ordered/map/OrderedHashMap/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"OrderedHashMap<K,V>"))),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable Ordered HashMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,r.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,r.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/ordered/map/OrderedHashMap/interface"}),"OrderedHashMap API documentation"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("a",c({parentName:"td"},{href:"/api/rimbu/ordered/map/OrderedMap/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"OrderedMap<K,V>"))),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable Ordered Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,r.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,r.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/ordered/map/OrderedMap/interface"}),"OrderedMap API documentation"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("a",c({parentName:"td"},{href:"/api/rimbu/ordered/map/OrderedSortedMap/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"OrderedSortedMap<K,V>"))),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable Ordered SortedMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,r.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,r.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/ordered/map/OrderedSortedMap/interface"}),"OrderedSortedMap API documentation"))))),(0,r.kt)("h2",c({},{id:"namespaces"}),"Namespaces"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("a",c({parentName:"td"},{href:"/api/rimbu/ordered/map/OrderedHashMap/namespace"}),(0,r.kt)("inlineCode",{parentName:"a"},"OrderedHashMap"))),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable Ordered HashMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,r.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,r.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/ordered/map/OrderedHashMap/interface"}),"OrderedHashMap API documentation"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("a",c({parentName:"td"},{href:"/api/rimbu/ordered/map/OrderedMap/namespace"}),(0,r.kt)("inlineCode",{parentName:"a"},"OrderedMap"))),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable Ordered Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,r.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,r.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/ordered/map/OrderedMap/interface"}),"OrderedMap API documentation"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("a",c({parentName:"td"},{href:"/api/rimbu/ordered/map/OrderedSortedMap/namespace"}),(0,r.kt)("inlineCode",{parentName:"a"},"OrderedSortedMap"))),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable Ordered SortedMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,r.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,r.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/ordered/map/OrderedSortedMap/interface"}),"OrderedSortedMap API documentation"))))))}g.isMDXComponent=!0}}]);