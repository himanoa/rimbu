"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[60603],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),b=l(r),d=a,m=b["".concat(c,".").concat(d)]||b[d]||f[d]||i;return r?n.createElement(m,o(o({ref:t},u),{},{components:r})):n.createElement(m,o({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=b;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},92040:function(e,t,r){r.r(t),r.d(t,{assets:function(){return y},contentTitle:function(){return d},default:function(){return O},frontMatter:function(){return b},metadata:function(){return m},toc:function(){return s}});var n=r(3905),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,f=(e,t)=>{for(var r in t||(t={}))c.call(t,r)&&u(e,r,t[r]);if(p)for(var r of p(t))l.call(t,r)&&u(e,r,t[r]);return e};const b={title:"PatchObj",slug:"/rimbu/deep/Patch/PatchObj/type"},d="type PatchObj<T,P,R>",m={unversionedId:"rimbu_deep/Patch/PatchObj.type",id:"rimbu_deep/Patch/PatchObj.type",title:"PatchObj",description:"Type to determine the allowed input type for the patch function given an object type T.",source:"@site/api/rimbu_deep/Patch/PatchObj.type.mdx",sourceDirName:"rimbu_deep/Patch",slug:"/rimbu/deep/Patch/PatchObj/type",permalink:"/api/rimbu/deep/Patch/PatchObj/type",draft:!1,tags:[],version:"current",frontMatter:{title:"PatchObj",slug:"/rimbu/deep/Patch/PatchObj/type"},sidebar:"defaultSidebar",previous:{title:"PatchArray",permalink:"/api/rimbu/deep/Patch/PatchArray/type"},next:{title:"Update",permalink:"/api/rimbu/deep/Patch/Update/type"}},y={},s=[{value:"Definition",id:"definition",level:2}],h={toc:s};function O(e){var t,r=e,{components:a}=r,u=((e,t)=>{var r={};for(var n in e)c.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&p)for(var n of p(e))t.indexOf(n)<0&&l.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=f(f({},h),u),i(t,o({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",f({},{id:"type-patchobjtpr"}),(0,n.kt)("inlineCode",{parentName:"h1"},"type PatchObj<T,P,R>")),(0,n.kt)("p",null,"Type to determine the allowed input type for the ",(0,n.kt)("inlineCode",{parentName:"p"},"patch")," function given an object type T."),(0,n.kt)("h2",f({},{id:"definition"}),"Definition"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"type PatchObj<T extends "),(0,n.kt)("a",f({parentName:"p"},{href:"/api/rimbu/deep/Literal/Obj/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Literal.Obj")),(0,n.kt)("inlineCode",{parentName:"p"},", P = T, R = T> = "),(0,n.kt)("a",f({parentName:"p"},{href:"/api/rimbu/deep/Patch/Update/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Patch.Update")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, P, R> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"[K in keyof T]?: PatchHelper<T[K], T, R>;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"};")))}O.isMDXComponent=!0}}]);