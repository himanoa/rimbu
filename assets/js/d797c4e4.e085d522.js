"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[68475],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=c(r),f=a,y=m["".concat(u,".").concat(f)]||m[f]||s[f]||o;return r?n.createElement(y,i(i({ref:t},l),{},{components:r})):n.createElement(y,i({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},86757:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return f},default:function(){return O},frontMatter:function(){return m},metadata:function(){return y},toc:function(){return b}});var n=r(3905),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,l=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,s=(e,t)=>{for(var r in t||(t={}))u.call(t,r)&&l(e,r,t[r]);if(p)for(var r of p(t))c.call(t,r)&&l(e,r,t[r]);return e};const m={title:"MapEntrySet",slug:"/rimbu/hashed/map-custom/MapEntrySet/type"},f="type MapEntrySet<K,V>",y={unversionedId:"rimbu_hashed/map-custom/MapEntrySet.type",id:"rimbu_hashed/map-custom/MapEntrySet.type",title:"MapEntrySet",description:"undocumented",source:"@site/api/rimbu_hashed/map-custom/MapEntrySet.type.mdx",sourceDirName:"rimbu_hashed/map-custom",slug:"/rimbu/hashed/map-custom/MapEntrySet/type",permalink:"/api/rimbu/hashed/map-custom/MapEntrySet/type",draft:!1,tags:[],version:"current",frontMatter:{title:"MapEntrySet",slug:"/rimbu/hashed/map-custom/MapEntrySet/type"},sidebar:"defaultSidebar",previous:{title:"MapBlockBuilderEntry",permalink:"/api/rimbu/hashed/map-custom/MapBlockBuilderEntry/type"},next:{title:"@rimbu/hashed/set",permalink:"/api/rimbu/hashed/set"}},d={},b=[{value:"Definition",id:"definition",level:2}],h={toc:b};function O(e){var t,r=e,{components:a}=r,l=((e,t)=>{var r={};for(var n in e)u.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&p)for(var n of p(e))t.indexOf(n)<0&&c.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=s(s({},h),l),o(t,i({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",s({},{id:"type-mapentrysetkv"}),(0,n.kt)("inlineCode",{parentName:"h1"},"type MapEntrySet<K,V>")),(0,n.kt)("p",null,"undocumented"),(0,n.kt)("h2",s({},{id:"definition"}),"Definition"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"export declare type MapEntrySet<K, V> = "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/hashed/map-custom/HashMapBlock/class"}),(0,n.kt)("inlineCode",{parentName:"a"},"HashMapBlock")),(0,n.kt)("inlineCode",{parentName:"p"},"<K, V> "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," "),(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/hashed/map-custom/HashMapCollision/class"}),(0,n.kt)("inlineCode",{parentName:"a"},"HashMapCollision")),(0,n.kt)("inlineCode",{parentName:"p"},"<K, V>;")))}O.isMDXComponent=!0}}]);