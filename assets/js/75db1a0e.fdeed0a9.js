"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[5717],{3905:(t,e,r)=>{r.d(e,{Zo:()=>m,kt:()=>f});var a=r(67294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function u(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},i=Object.keys(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var o=a.createContext({}),p=function(t){var e=a.useContext(o),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},m=function(t){var e=p(t.components);return a.createElement(o.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,i=t.originalType,o=t.parentName,m=u(t,["components","mdxType","originalType","parentName"]),s=p(r),f=n,d=s["".concat(o,".").concat(f)]||s[f]||c[f]||i;return r?a.createElement(d,l(l({ref:e},m),{},{components:r})):a.createElement(d,l({ref:e},m))}));function f(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=r.length,l=new Array(i);l[0]=s;var u={};for(var o in e)hasOwnProperty.call(e,o)&&(u[o]=e[o]);u.originalType=t,u.mdxType="string"==typeof t?t:n,l[1]=u;for(var p=2;p<i;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}s.displayName="MDXCreateElement"},6231:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>b,contentTitle:()=>f,default:()=>S,frontMatter:()=>s,metadata:()=>d,toc:()=>y});var a=r(3905),n=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,u=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,m=(t,e,r)=>e in t?n(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,c=(t,e)=>{for(var r in e||(e={}))o.call(e,r)&&m(t,r,e[r]);if(u)for(var r of u(e))p.call(e,r)&&m(t,r,e[r]);return t};const s={title:"VariantMultiSet (namespace)",slug:"/rimbu/multiset/VariantMultiSet/namespace"},f="namespace VariantMultiSet",d={unversionedId:"rimbu_multiset/VariantMultiSet/index",id:"rimbu_multiset/VariantMultiSet/index",title:"VariantMultiSet (namespace)",description:"A type-variant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the VariantMultiSet API documentation",source:"@site/api/rimbu_multiset/VariantMultiSet/index.mdx",sourceDirName:"rimbu_multiset/VariantMultiSet",slug:"/rimbu/multiset/VariantMultiSet/namespace",permalink:"/api/rimbu/multiset/VariantMultiSet/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"VariantMultiSet (namespace)",slug:"/rimbu/multiset/VariantMultiSet/namespace"},sidebar:"defaultSidebar",previous:{title:"SortedMultiSet<T>",permalink:"/api/rimbu/multiset/SortedMultiSet/interface"},next:{title:"VariantMultiSet.NonEmpty<T>",permalink:"/api/rimbu/multiset/VariantMultiSet/NonEmpty/interface"}},b={},y=[{value:"Interfaces",id:"interfaces",level:2}],h={toc:y};function S(t){var e,r=t,{components:n}=r,m=((t,e)=>{var r={};for(var a in t)o.call(t,a)&&e.indexOf(a)<0&&(r[a]=t[a]);if(null!=t&&u)for(var a of u(t))e.indexOf(a)<0&&p.call(t,a)&&(r[a]=t[a]);return r})(r,["components"]);return(0,a.kt)("wrapper",(e=c(c({},h),m),i(e,l({components:n,mdxType:"MDXLayout"}))),(0,a.kt)("h1",c({},{id:"namespace-variantmultiset"}),(0,a.kt)("inlineCode",{parentName:"h1"},"namespace VariantMultiSet")),(0,a.kt)("p",null,"A type-variant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the ",(0,a.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/docs/collections/multiset"}),"MultiSet documentation")," and the ",(0,a.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/api/rimbu/multiset/VariantMultiSet/interface"}),"VariantMultiSet API documentation")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Companion interface:")," ",(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/multiset/VariantMultiSet/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"VariantMultiSet<T>"))),(0,a.kt)("h2",c({},{id:"interfaces"}),"Interfaces"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",c({parentName:"tr"},{align:null}),(0,a.kt)("a",c({parentName:"td"},{href:"/api/rimbu/multiset/VariantMultiSet/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"VariantMultiSet.NonEmpty<T>"))),(0,a.kt)("td",c({parentName:"tr"},{align:null}),"A non-empty type-variant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the ",(0,a.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/multiset"}),"MultiSet documentation")," and the ",(0,a.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/multiset/VariantMultiSet/interface"}),"VariantMultiSet API documentation"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",c({parentName:"tr"},{align:null}),(0,a.kt)("a",c({parentName:"td"},{href:"/api/rimbu/multiset/VariantMultiSet/Types/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"VariantMultiSet.Types"))),(0,a.kt)("td",c({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))))}S.isMDXComponent=!0}}]);