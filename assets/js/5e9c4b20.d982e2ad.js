"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[73408],{3905:(e,t,i)=>{i.d(t,{Zo:()=>m,kt:()=>c});var n=i(67294);function l(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){l(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,n,l=function(e,t){if(null==e)return{};var i,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(l[i]=e[i]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(l[i]=e[i])}return l}var d=n.createContext({}),u=function(e){var t=n.useContext(d),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},m=function(e){var t=u(e.components);return n.createElement(d.Provider,{value:t},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var i=e.components,l=e.mdxType,a=e.originalType,d=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=u(i),k=l,c=p["".concat(d,".").concat(k)]||p[k]||s[k]||a;return i?n.createElement(c,r(r({ref:t},m),{},{components:i})):n.createElement(c,r({ref:t},m))}));function c(e,t){var i=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=i.length,r=new Array(a);r[0]=k;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[p]="string"==typeof e?e:l,r[1]=o;for(var u=2;u<a;u++)r[u]=i[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,i)}k.displayName="MDXCreateElement"},201:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>v,default:()=>S,frontMatter:()=>c,metadata:()=>f,toc:()=>N});var n=i(3905),l=Object.defineProperty,a=Object.defineProperties,r=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,i)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,p=(e,t)=>{for(var i in t||(t={}))d.call(t,i)&&m(e,i,t[i]);if(o)for(var i of o(t))u.call(t,i)&&m(e,i,t[i]);return e},s=(e,t)=>a(e,r(t)),k=(e,t)=>{var i={};for(var n in e)d.call(e,n)&&t.indexOf(n)<0&&(i[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&u.call(e,n)&&(i[n]=e[n]);return i};const c={title:"MultiSetEmpty<T,Tp>",slug:"/rimbu/multiset/custom/MultiSetEmpty/class"},v="class MultiSetEmpty<T,Tp>",f={unversionedId:"rimbu_multiset/custom/MultiSetEmpty.class",id:"rimbu_multiset/custom/MultiSetEmpty.class",title:"MultiSetEmpty<T,Tp>",description:"undocumented",source:"@site/api/rimbu_multiset/custom/MultiSetEmpty.class.mdx",sourceDirName:"rimbu_multiset/custom",slug:"/rimbu/multiset/custom/MultiSetEmpty/class",permalink:"/api/rimbu/multiset/custom/MultiSetEmpty/class",draft:!1,tags:[],version:"current",frontMatter:{title:"MultiSetEmpty<T,Tp>",slug:"/rimbu/multiset/custom/MultiSetEmpty/class"},sidebar:"defaultSidebar",previous:{title:"MultiSetCreators",permalink:"/api/rimbu/multiset/custom/MultiSetCreators/interface"},next:{title:"MultiSetNonEmpty<T,Tp,TpG>",permalink:"/api/rimbu/multiset/custom/MultiSetNonEmpty/class"}},h={},N=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>countMap</code>",id:"countmap",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>isEmpty</code>",id:"isempty",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>size</code>",id:"size",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>sizeDistinct</code>",id:"sizedistinct",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>add</code>",id:"add",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"<code>addAll</code>",id:"addall",level:3},{value:"Definition",id:"definition-6",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"<code>addEntries</code>",id:"addentries",level:3},{value:"Definition",id:"definition-7",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"<code>assumeNonEmpty</code>",id:"assumenonempty",level:3},{value:"Definition",id:"definition-8",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"<code>count</code>",id:"count",level:3},{value:"Definition",id:"definition-9",level:4},{value:"Overrides",id:"overrides-9",level:4},{value:"<code>filterEntries</code>",id:"filterentries",level:3},{value:"Definition",id:"definition-10",level:4},{value:"Overrides",id:"overrides-10",level:4},{value:"<code>forEach</code>",id:"foreach",level:3},{value:"Definition",id:"definition-11",level:4},{value:"Overrides",id:"overrides-11",level:4},{value:"<code>has</code>",id:"has",level:3},{value:"Definition",id:"definition-12",level:4},{value:"Overrides",id:"overrides-12",level:4},{value:"<code>modifyCount</code>",id:"modifycount",level:3},{value:"Definition",id:"definition-13",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-13",level:4},{value:"<code>nonEmpty</code>",id:"nonempty",level:3},{value:"Definition",id:"definition-14",level:4},{value:"Overrides",id:"overrides-14",level:4},{value:"<code>remove</code>",id:"remove",level:3},{value:"Definition",id:"definition-15",level:4},{value:"Overrides",id:"overrides-15",level:4},{value:"<code>removeAllEvery</code>",id:"removeallevery",level:3},{value:"Definition",id:"definition-16",level:4},{value:"Overrides",id:"overrides-16",level:4},{value:"<code>removeAllSingle</code>",id:"removeallsingle",level:3},{value:"Definition",id:"definition-17",level:4},{value:"Overrides",id:"overrides-17",level:4},{value:"<code>setCount</code>",id:"setcount",level:3},{value:"Definition",id:"definition-18",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Overrides",id:"overrides-18",level:4},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition-19",level:4},{value:"Overrides",id:"overrides-19",level:4},{value:"<code>streamDistinct</code>",id:"streamdistinct",level:3},{value:"Definition",id:"definition-20",level:4},{value:"Overrides",id:"overrides-20",level:4},{value:"<code>toArray</code>",id:"toarray",level:3},{value:"Definition",id:"definition-21",level:4},{value:"Overrides",id:"overrides-21",level:4},{value:"<code>toBuilder</code>",id:"tobuilder",level:3},{value:"Definition",id:"definition-22",level:4},{value:"Overrides",id:"overrides-22",level:4},{value:"<code>toJSON</code>",id:"tojson",level:3},{value:"Definition",id:"definition-23",level:4},{value:"Overrides",id:"overrides-23",level:4},{value:"<code>toString</code>",id:"tostring",level:3},{value:"Definition",id:"definition-24",level:4},{value:"Overrides",id:"overrides-24",level:4}],y={toc:N},b="wrapper";function S(e){var t=e,{components:i}=t,l=k(t,["components"]);return(0,n.kt)(b,s(p(p({},y),l),{components:i,mdxType:"MDXLayout"}),(0,n.kt)("h1",p({},{id:"class-multisetemptyttp"}),(0,n.kt)("inlineCode",{parentName:"h1"},"class MultiSetEmpty<T,Tp>")),(0,n.kt)("p",null,"undocumented"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Implements:")," ",(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"MultiSetBase<T,Tp>"))),(0,n.kt)("h2",p({},{id:"type-parameters"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),"T"),(0,n.kt)("td",p({parentName:"tr"},{align:null})),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"undocumented")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),"Tp"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("a",p({parentName:"td"},{href:"/api/rimbu/multiset/custom/ContextImplTypes/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"ContextImplTypes"))),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"undocumented")))),(0,n.kt)("h2",p({},{id:"properties"}),"Properties"),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"context"}),(0,n.kt)("inlineCode",{parentName:"h3"},"context")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly context: WithElem<Tp, T>['context'];"))),(0,n.kt)("h4",p({},{id:"overrides"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/interface#context"}),"MultiSetBase.context"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"countmap"}),(0,n.kt)("inlineCode",{parentName:"h3"},"countMap")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-1"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"get countMap(): WithElem<Tp, T>['countMap'];"))),(0,n.kt)("h4",p({},{id:"overrides-1"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#countMap"}),"VariantMultiSetBase.countMap"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"isempty"}),(0,n.kt)("inlineCode",{parentName:"h3"},"isEmpty")),(0,n.kt)("p",null,"Returns true if the collection is empty.")),(0,n.kt)("h4",p({},{id:"definition-2"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly isEmpty: boolean;"))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"HashMultiSet.empty<number>().isEmpty     // => true\nHashMultiSet.of(1, 2, 2).isEmpty         // => false\n"))),(0,n.kt)("h4",p({},{id:"overrides-2"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#isEmpty"}),"VariantMultiSetBase.isEmpty"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"size"}),(0,n.kt)("inlineCode",{parentName:"h3"},"size")),(0,n.kt)("p",null,"Returns the number of values in the collection.")),(0,n.kt)("h4",p({},{id:"definition-3"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly size: number;"))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"HashMultiSet.of(1, 2).size         // => 2\nHashMultiSet.of(1, 2, 2).size      // => 3\n"))),(0,n.kt)("h4",p({},{id:"overrides-3"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#size"}),"VariantMultiSetBase.size"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"sizedistinct"}),(0,n.kt)("inlineCode",{parentName:"h3"},"sizeDistinct")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-4"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"get sizeDistinct(): 0;"))),(0,n.kt)("h4",p({},{id:"overrides-4"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#sizeDistinct"}),"VariantMultiSetBase.sizeDistinct"))),(0,n.kt)("h2",p({},{id:"methods"}),"Methods"),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"add"}),(0,n.kt)("inlineCode",{parentName:"h3"},"add")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-5"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"add(elem: T, amount?: number): WithElem<Tp, T>['nonEmpty'];"))),(0,n.kt)("h4",p({},{id:"parameters"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"elem")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"amount")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",p({},{id:"overrides-5"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/interface#add"}),"MultiSetBase.add"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"addall"}),(0,n.kt)("inlineCode",{parentName:"h3"},"addAll")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-6"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"addAll(values: StreamSource<T>): WithElem<Tp, T>['nonEmpty'];"))),(0,n.kt)("h4",p({},{id:"parameters-1"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"values")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"StreamSource<T>")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",p({},{id:"overrides-6"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/interface#addAll"}),"MultiSetBase.addAll"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"addentries"}),(0,n.kt)("inlineCode",{parentName:"h3"},"addEntries")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-7"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"addEntries(entries: StreamSource<readonly [T, number]>): WithElem<Tp, T>['normal'];"))),(0,n.kt)("h4",p({},{id:"parameters-2"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"entries")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"StreamSource<readonly [T, number]>")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",p({},{id:"overrides-7"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/interface#addEntries"}),"MultiSetBase.addEntries"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"assumenonempty"}),(0,n.kt)("inlineCode",{parentName:"h3"},"assumeNonEmpty")),(0,n.kt)("p",null,"Returns the collection as a .NonEmpty type")),(0,n.kt)("h4",p({},{id:"definition-8"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"assumeNonEmpty(): WithElem<Tp, T>['nonEmpty'];"))),(0,n.kt)("admonition",p({},{title:"throws",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"RimbuError.EmptyCollectionAssumedNonEmptyError if the collection is empty")),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"HashMultiSet.empty<number>().assumeNonEmpty()   // => throws\nconst m: HashMultiSet<number> = HashMultiSet.of(1, 2)\nconst m2: HashMultiSet.NonEmpty<number> = m     // => compiler error\nconst m3: HashMultiSet.NonEmpty<number> = m.assumeNonEmpty()\n"))),(0,n.kt)("admonition",p({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"returns reference to this collection")),(0,n.kt)("h4",p({},{id:"overrides-8"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#assumeNonEmpty"}),"VariantMultiSetBase.assumeNonEmpty"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"count"}),(0,n.kt)("inlineCode",{parentName:"h3"},"count")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-9"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"count(): 0;"))),(0,n.kt)("h4",p({},{id:"overrides-9"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#count"}),"VariantMultiSetBase.count"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"filterentries"}),(0,n.kt)("inlineCode",{parentName:"h3"},"filterEntries")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-10"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"filterEntries(): WithElem<Tp, T>['normal'];"))),(0,n.kt)("h4",p({},{id:"overrides-10"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#filterEntries"}),"VariantMultiSetBase.filterEntries"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"foreach"}),(0,n.kt)("inlineCode",{parentName:"h3"},"forEach")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-11"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"forEach(): void;"))),(0,n.kt)("h4",p({},{id:"overrides-11"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#forEach"}),"VariantMultiSetBase.forEach"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"has"}),(0,n.kt)("inlineCode",{parentName:"h3"},"has")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-12"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"has(): false;"))),(0,n.kt)("h4",p({},{id:"overrides-12"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#has"}),"VariantMultiSetBase.has"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"modifycount"}),(0,n.kt)("inlineCode",{parentName:"h3"},"modifyCount")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-13"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"modifyCount(value: T, update: (currentCount: number) => number): WithElem<Tp, T>['normal'];"))),(0,n.kt)("h4",p({},{id:"parameters-3"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"update")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(currentCount: number) => number")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",p({},{id:"overrides-13"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/interface#modifyCount"}),"MultiSetBase.modifyCount"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"nonempty"}),(0,n.kt)("inlineCode",{parentName:"h3"},"nonEmpty")),(0,n.kt)("p",null,"Returns true if there is at least one entry in the collection, and instructs the compiler to treat the collection as a .NonEmpty type.")),(0,n.kt)("h4",p({},{id:"definition-14"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"nonEmpty(): this is WithElem<Tp, T>['nonEmpty'];"))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"const m: HashMultiSet<number> = HashMultiSet.of(1, 2, 2)\nm.stream().first(0)     // compiler allows fallback value since the Stream may be empty\nif (m.nonEmpty()) {\nm.stream().first(0)   // compiler error: fallback value not allowed since Stream is not empty\n}\n"))),(0,n.kt)("h4",p({},{id:"overrides-14"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#nonEmpty"}),"VariantMultiSetBase.nonEmpty"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"remove"}),(0,n.kt)("inlineCode",{parentName:"h3"},"remove")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-15"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"remove(): WithElem<Tp, T>['normal'];"))),(0,n.kt)("h4",p({},{id:"overrides-15"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#remove"}),"VariantMultiSetBase.remove"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"removeallevery"}),(0,n.kt)("inlineCode",{parentName:"h3"},"removeAllEvery")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-16"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"removeAllEvery(): WithElem<Tp, T>['normal'];"))),(0,n.kt)("h4",p({},{id:"overrides-16"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#removeAllEvery"}),"VariantMultiSetBase.removeAllEvery"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"removeallsingle"}),(0,n.kt)("inlineCode",{parentName:"h3"},"removeAllSingle")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-17"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"removeAllSingle(): WithElem<Tp, T>['normal'];"))),(0,n.kt)("h4",p({},{id:"overrides-17"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#removeAllSingle"}),"VariantMultiSetBase.removeAllSingle"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"setcount"}),(0,n.kt)("inlineCode",{parentName:"h3"},"setCount")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-18"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"setCount(elem: T, amount: number): WithElem<Tp, T>['normal'];"))),(0,n.kt)("h4",p({},{id:"parameters-4"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"elem")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"amount")),(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",p({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",p({},{id:"overrides-18"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/interface#setCount"}),"MultiSetBase.setCount"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"stream"}),(0,n.kt)("inlineCode",{parentName:"h3"},"stream")),(0,n.kt)("p",null,"Returns a Stream containing all values of this collection.")),(0,n.kt)("h4",p({},{id:"definition-19"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"stream(): Stream<T>;"))),(0,n.kt)("admonition",p({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"HashMultiSet.of(1, 2, 2).stream().toArray()  // => [1, 2, 2]\n"))),(0,n.kt)("h4",p({},{id:"overrides-19"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#stream"}),"VariantMultiSetBase.stream"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"streamdistinct"}),(0,n.kt)("inlineCode",{parentName:"h3"},"streamDistinct")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-20"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"streamDistinct(): Stream<T>;"))),(0,n.kt)("h4",p({},{id:"overrides-20"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#streamDistinct"}),"VariantMultiSetBase.streamDistinct"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"toarray"}),(0,n.kt)("inlineCode",{parentName:"h3"},"toArray")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-21"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"toArray(): [];"))),(0,n.kt)("h4",p({},{id:"overrides-21"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#toArray"}),"VariantMultiSetBase.toArray"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"tobuilder"}),(0,n.kt)("inlineCode",{parentName:"h3"},"toBuilder")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-22"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"toBuilder(): WithElem<Tp, T>['builder'];"))),(0,n.kt)("h4",p({},{id:"overrides-22"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/MultiSetBase/interface#toBuilder"}),"MultiSetBase.toBuilder"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"tojson"}),(0,n.kt)("inlineCode",{parentName:"h3"},"toJSON")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-23"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"toJSON(): "),(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/common/ToJSON/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"ToJSON")),(0,n.kt)("inlineCode",{parentName:"p"},"<[any, number][]>;"))),(0,n.kt)("h4",p({},{id:"overrides-23"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#toJSON"}),"VariantMultiSetBase.toJSON"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",p({},{id:"tostring"}),(0,n.kt)("inlineCode",{parentName:"h3"},"toString")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",p({},{id:"definition-24"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"toString(): string;"))),(0,n.kt)("h4",p({},{id:"overrides-24"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/api/rimbu/multiset/custom/VariantMultiSetBase/interface#toString"}),"VariantMultiSetBase.toString"))))}S.isMDXComponent=!0}}]);