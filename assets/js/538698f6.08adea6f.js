"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[20885],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>s});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=i.createContext({}),p=function(e){var t=i.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return i.createElement(u.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),f=n,s=d["".concat(u,".").concat(f)]||d[f]||m[f]||a;return r?i.createElement(s,o(o({ref:t},c),{},{components:r})):i.createElement(s,o({ref:t},c))}));function s(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=f;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[d]="string"==typeof e?e:n,o[1]=l;for(var p=2;p<a;p++)o[p]=r[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}f.displayName="MDXCreateElement"},57499:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>M,contentTitle:()=>b,default:()=>g,frontMatter:()=>s,metadata:()=>y,toc:()=>B});var i=r(3905),n=Object.defineProperty,a=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,d=(e,t)=>{for(var r in t||(t={}))u.call(t,r)&&c(e,r,t[r]);if(l)for(var r of l(t))p.call(t,r)&&c(e,r,t[r]);return e},m=(e,t)=>a(e,o(t)),f=(e,t)=>{var r={};for(var i in e)u.call(e,i)&&t.indexOf(i)<0&&(r[i]=e[i]);if(null!=e&&l)for(var i of l(e))t.indexOf(i)<0&&p.call(e,i)&&(r[i]=e[i]);return r};const s={title:"SortedBiMultiMap.Builder<K,V>",slug:"/rimbu/core/SortedBiMultiMap/Builder/interface"},b="interface SortedBiMultiMap.Builder<K,V>",y={unversionedId:"rimbu_core/SortedBiMultiMap/Builder.interface",id:"rimbu_core/SortedBiMultiMap/Builder.interface",title:"SortedBiMultiMap.Builder<K,V>",description:"A mutable SortedBiMultiMap builder used to efficiently create new immutable instances. See the BiMultiMap documentation and the HashBiMultiMap.Builder API documentation",source:"@site/api/rimbu_core/SortedBiMultiMap/Builder.interface.mdx",sourceDirName:"rimbu_core/SortedBiMultiMap",slug:"/rimbu/core/SortedBiMultiMap/Builder/interface",permalink:"/api/rimbu/core/SortedBiMultiMap/Builder/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"SortedBiMultiMap.Builder<K,V>",slug:"/rimbu/core/SortedBiMultiMap/Builder/interface"},sidebar:"defaultSidebar",previous:{title:"SortedBiMultiMap (namespace)",permalink:"/api/rimbu/core/SortedBiMultiMap/namespace"},next:{title:"SortedBiMultiMap.Context<UK,UV>",permalink:"/api/rimbu/core/SortedBiMultiMap/Context/interface"}},M={},B=[{value:"Type parameters",id:"type-parameters",level:2}],O={toc:B},v="wrapper";function g(e){var t=e,{components:r}=t,n=f(t,["components"]);return(0,i.kt)(v,m(d(d({},O),n),{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",d({},{id:"interface-sortedbimultimapbuilderkv"}),(0,i.kt)("inlineCode",{parentName:"h1"},"interface SortedBiMultiMap.Builder<K,V>")),(0,i.kt)("p",null,"A mutable ",(0,i.kt)("inlineCode",{parentName:"p"},"SortedBiMultiMap")," builder used to efficiently create new immutable instances. See the ",(0,i.kt)("a",d({parentName:"p"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.kt)("a",d({parentName:"p"},{href:"https://rimbu.org/api/rimbu/bimultimap/SortedBiMultiMap/Builder/interface"}),"HashBiMultiMap.Builder API documentation")),(0,i.kt)("h2",d({},{id:"type-parameters"}),"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,i.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",d({parentName:"tr"},{align:null}),"K"),(0,i.kt)("td",d({parentName:"tr"},{align:null}),"the key type")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",d({parentName:"tr"},{align:null}),"V"),(0,i.kt)("td",d({parentName:"tr"},{align:null}),"the value type")))))}g.isMDXComponent=!0}}]);