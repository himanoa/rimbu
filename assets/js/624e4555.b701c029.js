"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[39226],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(n),u=r,h=m["".concat(p,".").concat(u)]||m[u]||c[u]||l;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},92378:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>k,default:()=>y,frontMatter:()=>h,metadata:()=>C,toc:()=>N});var a=n(3905),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,m=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&d(e,n,t[n]);if(o)for(var n of o(t))s.call(t,n)&&d(e,n,t[n]);return e},c=(e,t)=>l(e,i(t)),u=(e,t)=>{var n={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&s.call(e,a)&&(n[a]=e[a]);return n};const h={title:"CrossChannel.Constructors",slug:"/rimbu/channel/CrossChannel/Constructors/interface"},k="interface CrossChannel.Constructors",C={unversionedId:"rimbu_channel/CrossChannel/Constructors.interface",id:"rimbu_channel/CrossChannel/Constructors.interface",title:"CrossChannel.Constructors",description:"Defines the static CrossChannel API.",source:"@site/api/rimbu_channel/CrossChannel/Constructors.interface.mdx",sourceDirName:"rimbu_channel/CrossChannel",slug:"/rimbu/channel/CrossChannel/Constructors/interface",permalink:"/api/rimbu/channel/CrossChannel/Constructors/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"CrossChannel.Constructors",slug:"/rimbu/channel/CrossChannel/Constructors/interface"},sidebar:"defaultSidebar",previous:{title:"CrossChannel.Config",permalink:"/api/rimbu/channel/CrossChannel/Config/interface"},next:{title:"Pair",permalink:"/api/rimbu/channel/CrossChannel/Pair/type"}},f={},N=[{value:"Methods",id:"methods",level:2},{value:"<code>combine</code>",id:"combine",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>createPair</code>",id:"createpair",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4}],b={toc:N},g="wrapper";function y(e){var t=e,{components:n}=t,r=u(t,["components"]);return(0,a.kt)(g,c(m(m({},b),r),{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",m({},{id:"interface-crosschannelconstructors"}),(0,a.kt)("inlineCode",{parentName:"h1"},"interface CrossChannel.Constructors")),(0,a.kt)("p",null,"Defines the static ",(0,a.kt)("inlineCode",{parentName:"p"},"CrossChannel")," API."),(0,a.kt)("h2",m({},{id:"methods"}),"Methods"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"combine"}),(0,a.kt)("inlineCode",{parentName:"h3"},"combine")),(0,a.kt)("p",null,"Returns a CrossChannel where the send module comprises the given ",(0,a.kt)("inlineCode",{parentName:"p"},"writeCh"),", and the receive module conists of the given ",(0,a.kt)("inlineCode",{parentName:"p"},"readCh"),".")),(0,a.kt)("h4",m({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"combine<TSend = void, TReceive = TSend>(writeCh: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/channel/Channel/Write/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Channel.Write")),(0,a.kt)("inlineCode",{parentName:"p"},"<TSend>, readCh: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/channel/Channel/Read/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Channel.Read")),(0,a.kt)("inlineCode",{parentName:"p"},"<TReceive>): "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/channel/CrossChannel/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"CrossChannel")),(0,a.kt)("inlineCode",{parentName:"p"},"<TSend, TReceive>;"))),(0,a.kt)("h4",m({},{id:"type-parameters"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Default"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"TSend"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"void")),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"the send message type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"TReceive"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"TSend")),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"the receive message type")))),(0,a.kt)("h4",m({},{id:"parameters"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"writeCh")),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("a",m({parentName:"td"},{href:"/api/rimbu/channel/Channel/Write/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Channel.Write")),(0,a.kt)("inlineCode",{parentName:"td"},"<TSend>")),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"the write channel to use for sending messages")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"readCh")),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("a",m({parentName:"td"},{href:"/api/rimbu/channel/Channel/Read/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Channel.Read")),(0,a.kt)("inlineCode",{parentName:"td"},"<TReceive>")),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"the read channel to use for receiving messages"))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"createpair"}),(0,a.kt)("inlineCode",{parentName:"h3"},"createPair")),(0,a.kt)("p",null,"Returns a pair of connected CrossChannels of which the send module of the first is connected to the receive module of the second, and the send module of the second is connected to the receive module of the first.")),(0,a.kt)("h4",m({},{id:"definition-1"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"createPair<TSend = void, TReceive = TSend>(config?: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/channel/CrossChannel/Config/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"CrossChannel.Config")),(0,a.kt)("inlineCode",{parentName:"p"},"): "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/channel/CrossChannel/Pair/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"CrossChannel.Pair")),(0,a.kt)("inlineCode",{parentName:"p"},"<TSend, TReceive>;"))),(0,a.kt)("h4",m({},{id:"type-parameters-1"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Default"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"TSend"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"void")),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"the send message type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"TReceive"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"TSend")),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"the receive message type")))),(0,a.kt)("h4",m({},{id:"parameters-1"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"config")),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("a",m({parentName:"td"},{href:"/api/rimbu/channel/CrossChannel/Config/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"CrossChannel.Config"))),(0,a.kt)("td",m({parentName:"tr"},{align:null})))))))}y.isMDXComponent=!0}}]);