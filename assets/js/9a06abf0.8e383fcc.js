"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[57227],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=c(r),f=a,y=s["".concat(l,".").concat(f)]||s[f]||m[f]||o;return r?n.createElement(y,p(p({ref:t},u),{},{components:r})):n.createElement(y,p({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=s;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var c=2;c<o;c++)p[c]=r[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},38721:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return f},default:function(){return g},frontMatter:function(){return s},metadata:function(){return y},toc:function(){return b}});var n=r(3905),a=Object.defineProperty,o=Object.defineProperties,p=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,m=(e,t)=>{for(var r in t||(t={}))l.call(t,r)&&u(e,r,t[r]);if(i)for(var r of i(t))c.call(t,r)&&u(e,r,t[r]);return e};const s={title:"GraphElement",slug:"/rimbu/graph/custom/GraphElement/type"},f="type GraphElement<N>",y={unversionedId:"rimbu_graph/custom/GraphElement.type",id:"rimbu_graph/custom/GraphElement.type",title:"GraphElement",description:"A graph element is either an isolated node as a 1-tuple, or a link between nodes represented as a Link instance.",source:"@site/api/rimbu_graph/custom/GraphElement.type.mdx",sourceDirName:"rimbu_graph/custom",slug:"/rimbu/graph/custom/GraphElement/type",permalink:"/api/rimbu/graph/custom/GraphElement/type",draft:!1,tags:[],version:"current",frontMatter:{title:"GraphElement",slug:"/rimbu/graph/custom/GraphElement/type"},sidebar:"defaultSidebar",previous:{title:"GraphContext<UN,TT,Dir,Tp>",permalink:"/api/rimbu/graph/custom/GraphContext/class"},next:{title:"GraphEmpty<N,V,Tp,TpG>",permalink:"/api/rimbu/graph/custom/GraphEmpty/class"}},d={},b=[{value:"Definition",id:"definition",level:2}],h={toc:b};function g(e){var t,r=e,{components:a}=r,u=((e,t)=>{var r={};for(var n in e)l.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&c.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=m(m({},h),u),o(t,p({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",m({},{id:"type-graphelementn"}),(0,n.kt)("inlineCode",{parentName:"h1"},"type GraphElement<N>")),(0,n.kt)("p",null,"A graph element is either an isolated node as a 1-tuple, or a link between nodes represented as a ",(0,n.kt)("inlineCode",{parentName:"p"},"Link")," instance."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Companion namespace:")," ",(0,n.kt)("a",m({parentName:"p"},{href:"/api/rimbu/graph/custom/GraphElement/namespace"}),"GraphElement")),(0,n.kt)("h2",m({},{id:"definition"}),"Definition"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"export declare type GraphElement<N> = [N] "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," "),(0,n.kt)("a",m({parentName:"p"},{href:"/api/rimbu/graph/custom/Link/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Link")),(0,n.kt)("inlineCode",{parentName:"p"},"<N>;")))}g.isMDXComponent=!0}}]);