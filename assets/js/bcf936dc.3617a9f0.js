"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[59266],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>b});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,b=m["".concat(s,".").concat(u)]||m[u]||d[u]||l;return a?n.createElement(b,o(o({ref:t},c),{},{components:a})):n.createElement(b,o({ref:t},c))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},28187:(e,t,a)=>{a.d(t,{G:()=>l});var n=a(67294);function r(e){return e.replace(/</g,"%3C").replace(/>/g,"%3E")}function l(e){const t=r(`https://g.gravizo.com/svg?\n  @startuml;\n  skinparam monochrome true;\n  skinparam backgroundColor none;\n  skinparam classBackgroundColor darkslategrey;\n  skinparam classBorderColor gray;\n  skinparam classFontColor lightgray;\n  skinparam classStereotypeFontColor darkgray;\n  skinparam arrowColor lightgray;\n  skinparam linetype ortho;\n  ${e.contents}\n  @enduml;`);return n.createElement("img",{src:t,className:"diagram"})}},88508:(e,t,a)=>{a.d(t,{r:()=>b});var n=a(67294),r=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,m=(e,t)=>{for(var a in t||(t={}))s.call(t,a)&&c(e,a,t[a]);if(i)for(var a of i(t))p.call(t,a)&&c(e,a,t[a]);return e},d=(e,t)=>l(e,o(t));const u={previewwindow:"console",view:"split",editorsize:"60",codemirror:"1",moduleview:"1"};function b(e){const t=function(e){let t="",a="";for(const n in e)t+=`${a}${n}=${e[n]}`,a="&";return""===t?"":`?${t}`}(d(m({},u),{module:`/src/${e.path}`})),a=`https://codesandbox.io/embed/github/vitoke/rimbu-sandbox/tree/main${t}`,r=`https://codesandbox.io/s/github/vitoke/rimbu-sandbox/tree/main${t}`;return n.createElement(n.Fragment,null,n.createElement("a",{target:"_blank",className:"button button--secondary",href:r,style:{marginBottom:10}},"Open file below in new window with full type-check"),n.createElement("iframe",{src:a,className:"codesandbox-iframe",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}))}},1667:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>w,contentTitle:()=>f,default:()=>N,frontMatter:()=>y,metadata:()=>g,toc:()=>v});var n=a(3905),r=a(28187);const l="\ninterface Streamable<[R, C, V]>;\ninterface VariantTable<R, C, V>;\nabstract Table<R, C, V>;\nclass HashTableHashColumn<R, C, V>;\nclass HashTableSortedColumn<R, C, V>;\nclass SortedTableHashColumn<R, C, V>;\nclass SortedTableSortedColumn<R, C, V>;\n\nStreamable <|.. VariantTable;\nVariantTable <|-- Table;\nTable <|-- HashTableHashColumn;\nTable <|-- HashTableSortedColumn;\nTable <|-- SortedTableHashColumn;\nTable <|-- SortedTableSortedColumn;\n";var o=a(88508),i=Object.defineProperty,s=Object.defineProperties,p=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,u=(e,t,a)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,b=(e,t)=>{for(var a in t||(t={}))m.call(t,a)&&u(e,a,t[a]);if(c)for(var a of c(t))d.call(t,a)&&u(e,a,t[a]);return e},h=(e,t)=>s(e,p(t)),k=(e,t)=>{var a={};for(var n in e)m.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&c)for(var n of c(e))t.indexOf(n)<0&&d.call(e,n)&&(a[n]=e[n]);return a};const y={id:"table",slug:"./table",title:"Table"},f="Table",g={unversionedId:"collections/table",id:"collections/table",title:"Table",description:"A Table is an immutable 2-dimensional Map, containing row keys and column keys, where a combination of a row and column key can contain one value.",source:"@site/docs/collections/table.mdx",sourceDirName:"collections",slug:"/collections/table",permalink:"/docs/collections/table",draft:!1,editUrl:"https://github.com/rimbu-org/rimbu/edit/master/website/docs/collections/table.mdx",tags:[],version:"current",frontMatter:{id:"table",slug:"./table",title:"Table"},sidebar:"sidebar",previous:{title:"Stream",permalink:"/docs/collections/stream"},next:{title:"Overview",permalink:"/docs/deep/overview"}},w={},v=[{value:"When to use",id:"when-to-use",level:2},{value:"Exports",id:"exports",level:2},{value:"Inheritance",id:"inheritance",level:2},{value:"Usage",id:"usage",level:2},{value:"Creation",id:"creation",level:3},{value:"Query",id:"query",level:3},{value:"Builder",id:"builder",level:3}],C={toc:v},T="wrapper";function N(e){var t=e,{components:a}=t,i=k(t,["components"]);return(0,n.kt)(T,h(b(b({},C),i),{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",b({},{id:"table"}),"Table"),(0,n.kt)("p",null,"A ",(0,n.kt)("inlineCode",{parentName:"p"},"Table")," is an immutable 2-dimensional Map, containing row keys and column keys, where a combination of a row and column key can contain one value."),(0,n.kt)("h2",b({},{id:"when-to-use"}),"When to use"),(0,n.kt)("p",null,"The Table structure is useful in cases where there are two properties that in combination have some value. For example, a school with students needs to store a grade for each class the student takes. The school is only interested in the last grade. In this case, a Table with the student as row key, the class as column key, and the grade as value would allow easy access to all the grades."),(0,n.kt)("admonition",b({},{type:"tip"}),(0,n.kt)("p",{parentName:"admonition"},"Internally, a ",(0,n.kt)("inlineCode",{parentName:"p"},"Table<R, C, V>")," is built on: ",(0,n.kt)("inlineCode",{parentName:"p"},"RMap<R, RMap<C, V>>"),". So it is a Map of Maps. The ",(0,n.kt)("inlineCode",{parentName:"p"},".rowMap")," property gives direct access to this Map, and can sometimes provide more convenient ways to access the contained data.")),(0,n.kt)("h2",b({},{id:"exports"}),"Exports"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"@rimbu/core")," package exports the following ",(0,n.kt)("em",{parentName:"p"},"abstract")," Table TypeScript types:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",b({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",b({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",b({parentName:"tr"},{align:null}),(0,n.kt)("a",b({parentName:"td"},{href:"/api/rimbu/table/VariantTable/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"VariantTable<R, C, V>"))),(0,n.kt)("td",b({parentName:"tr"},{align:null}),"a type-variant ",(0,n.kt)("inlineCode",{parentName:"td"},"Table")," with row keys R, column keys C, and values V")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",b({parentName:"tr"},{align:null}),(0,n.kt)("a",b({parentName:"td"},{href:"/api/rimbu/table/Table/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"Table<R, C, V>"))),(0,n.kt)("td",b({parentName:"tr"},{align:null}),"a generic ",(0,n.kt)("inlineCode",{parentName:"td"},"Table")," with row keys R, column keys C, and values V")))),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"@rimbu/core")," package exports the following ",(0,n.kt)("em",{parentName:"p"},"concrete")," Table types:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",b({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",b({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",b({parentName:"tr"},{align:null}),(0,n.kt)("a",b({parentName:"td"},{href:"/api/rimbu/table/HashTableSortedColumn/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"HashTableHashColumn<R, C, V>"))),(0,n.kt)("td",b({parentName:"tr"},{align:null}),"a ",(0,n.kt)("inlineCode",{parentName:"td"},"Table")," where the row keys and column keys are hashed")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",b({parentName:"tr"},{align:null}),(0,n.kt)("a",b({parentName:"td"},{href:"/api/rimbu/table/HashTableHashColumn/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"HashTableSortedColumn<R, C, V>"))),(0,n.kt)("td",b({parentName:"tr"},{align:null}),"a ",(0,n.kt)("inlineCode",{parentName:"td"},"Table")," where the row keys are hashed and the column keys are sorted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",b({parentName:"tr"},{align:null}),(0,n.kt)("a",b({parentName:"td"},{href:"/api/rimbu/table/SortedTableHashColumn/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"SortedTableHashColumn<R, C, V>"))),(0,n.kt)("td",b({parentName:"tr"},{align:null}),"a ",(0,n.kt)("inlineCode",{parentName:"td"},"Table")," where the row keys are sorted and the column keys are hashed")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",b({parentName:"tr"},{align:null}),(0,n.kt)("a",b({parentName:"td"},{href:"/api/rimbu/table/SortedTableSortedColumn/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"SortedTableSortedColumn<R, C, V>"))),(0,n.kt)("td",b({parentName:"tr"},{align:null}),"a ",(0,n.kt)("inlineCode",{parentName:"td"},"Table")," where the row keys and column keys are sorted")))),(0,n.kt)("h2",b({},{id:"inheritance"}),"Inheritance"),(0,n.kt)(r.G,{contents:l,mdxType:"UmlGraph"}),(0,n.kt)("h2",b({},{id:"usage"}),"Usage"),(0,n.kt)("h3",b({},{id:"creation"}),"Creation"),(0,n.kt)(o.r,{path:"table/create.ts",mdxType:"SandBox"}),(0,n.kt)("h3",b({},{id:"query"}),"Query"),(0,n.kt)(o.r,{path:"table/query.ts",mdxType:"SandBox"}),(0,n.kt)("h3",b({},{id:"builder"}),"Builder"),(0,n.kt)(o.r,{path:"table/build.ts",mdxType:"SandBox"}))}N.isMDXComponent=!0}}]);