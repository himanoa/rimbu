"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[38865],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),s=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},m=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},h="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),h=s(a),u=n,d=h["".concat(l,".").concat(u)]||h[u]||c[u]||i;return a?r.createElement(d,p(p({ref:t},m),{},{components:a})):r.createElement(d,p({ref:t},m))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,p=new Array(i);p[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[h]="string"==typeof e?e:n,p[1]=o;for(var s=2;s<i;s++)p[s]=a[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},97905:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>k,contentTitle:()=>f,default:()=>v,frontMatter:()=>d,metadata:()=>b,toc:()=>y});var r=a(3905),n=Object.defineProperty,i=Object.defineProperties,p=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,m=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,h=(e,t)=>{for(var a in t||(t={}))l.call(t,a)&&m(e,a,t[a]);if(o)for(var a of o(t))s.call(t,a)&&m(e,a,t[a]);return e},c=(e,t)=>i(e,p(t)),u=(e,t)=>{var a={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&o)for(var r of o(e))t.indexOf(r)<0&&s.call(e,r)&&(a[r]=e[r]);return a};const d={title:"@rimbu/hashed",slug:"/rimbu/hashed"},f="package @rimbu/hashed",b={unversionedId:"rimbu_hashed/index",id:"rimbu_hashed/index",title:"@rimbu/hashed",description:"The @rimbu/hashed package provides implementations of the HashSet and HashMap.",source:"@site/api/rimbu_hashed/index.mdx",sourceDirName:"rimbu_hashed",slug:"/rimbu/hashed",permalink:"/api/rimbu/hashed",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/hashed",slug:"/rimbu/hashed"},sidebar:"defaultSidebar",previous:{title:"WithGraphValues",permalink:"/api/rimbu/graph/custom/WithGraphValues/type"},next:{title:"HashMap (namespace)",permalink:"/api/rimbu/hashed/HashMap/namespace"}},k={},y=[{value:"Interfaces",id:"interfaces",level:2},{value:"Namespaces",id:"namespaces",level:2}],N={toc:y},g="wrapper";function v(e){var t=e,{components:a}=t,n=u(t,["components"]);return(0,r.kt)(g,c(h(h({},N),n),{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",h({},{id:"package-rimbuhashed"}),(0,r.kt)("inlineCode",{parentName:"h1"},"package @rimbu/hashed")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@rimbu/hashed")," package provides implementations of the ",(0,r.kt)("inlineCode",{parentName:"p"},"HashSet")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"HashMap"),"."),(0,r.kt)("p",null," See the ",(0,r.kt)("a",h({parentName:"p"},{href:"/docs/collections/map"}),"Rimbu docs Map page")," and ",(0,r.kt)("a",h({parentName:"p"},{href:"/docs/collections/set"}),"Rimbu docs Set page")," for more information.\nThis is a convenience package that exports everything from the following sub-packages:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",h({parentName:"li"},{href:"./hashed/map"}),(0,r.kt)("inlineCode",{parentName:"a"},"@rimbu/hashed/map"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",h({parentName:"li"},{href:"./hashed/set"}),(0,r.kt)("inlineCode",{parentName:"a"},"@rimbu/hashed/set")))),(0,r.kt)("h2",h({},{id:"interfaces"}),"Interfaces"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",h({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",h({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),(0,r.kt)("a",h({parentName:"td"},{href:"/api/rimbu/hashed/Hasher/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"Hasher<UK>"))),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"Interface used to hash objects for hashed collections.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),(0,r.kt)("a",h({parentName:"td"},{href:"/api/rimbu/hashed/HashMap/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"HashMap<K,V>"))),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,r.kt)("a",h({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,r.kt)("a",h({parentName:"td"},{href:"https://rimbu.org/api/rimbu/hashed/map/HashMap/interface"}),"HashMap API documentation"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),(0,r.kt)("a",h({parentName:"td"},{href:"/api/rimbu/hashed/HashSet/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"HashSet<T>"))),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,r.kt)("a",h({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,r.kt)("a",h({parentName:"td"},{href:"https://rimbu.org/api/rimbu/hashed/HashSet/interface"}),"HashSet API documentation"))))),(0,r.kt)("h2",h({},{id:"namespaces"}),"Namespaces"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",h({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",h({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),(0,r.kt)("a",h({parentName:"td"},{href:"/api/rimbu/hashed/Hasher/namespace"}),(0,r.kt)("inlineCode",{parentName:"a"},"Hasher"))),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"Interface used to hash objects for hashed collections.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),(0,r.kt)("a",h({parentName:"td"},{href:"/api/rimbu/hashed/HashMap/namespace"}),(0,r.kt)("inlineCode",{parentName:"a"},"HashMap"))),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,r.kt)("a",h({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,r.kt)("a",h({parentName:"td"},{href:"https://rimbu.org/api/rimbu/hashed/map/HashMap/interface"}),"HashMap API documentation"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),(0,r.kt)("a",h({parentName:"td"},{href:"/api/rimbu/hashed/HashSet/namespace"}),(0,r.kt)("inlineCode",{parentName:"a"},"HashSet"))),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,r.kt)("a",h({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,r.kt)("a",h({parentName:"td"},{href:"https://rimbu.org/api/rimbu/hashed/HashSet/interface"}),"HashSet API documentation"))))))}v.isMDXComponent=!0}}]);