"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[40081],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return f}});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function d(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),l=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(p.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),m=l(t),f=a,s=m["".concat(p,".").concat(f)]||m[f]||c[f]||i;return t?n.createElement(s,o(o({ref:r},u),{},{components:t})):n.createElement(s,o({ref:r},u))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var d={};for(var p in r)hasOwnProperty.call(r,p)&&(d[p]=r[p]);d.originalType=e,d.mdxType="string"==typeof e?e:a,o[1]=d;for(var l=2;l<i;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},24633:function(e,r,t){t.r(r),t.d(r,{assets:function(){return b},contentTitle:function(){return f},default:function(){return v},frontMatter:function(){return m},metadata:function(){return s},toc:function(){return O}});var n=t(3905),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,u=(e,r,t)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,c=(e,r)=>{for(var t in r||(r={}))p.call(r,t)&&u(e,t,r[t]);if(d)for(var t of d(r))l.call(r,t)&&u(e,t,r[t]);return e};const m={title:"OrderedMap.Builder<K,V>",slug:"/rimbu/ordered/OrderedMap/Builder/interface"},f="interface OrderedMap.Builder<K,V>",s={unversionedId:"rimbu_ordered/OrderedMap/Builder.interface",id:"rimbu_ordered/OrderedMap/Builder.interface",title:"OrderedMap.Builder<K,V>",description:"A mutable OrderedMap builder used to efficiently create new immutable instances. See the Map documentation and the OrderedMap.Builder API documentation",source:"@site/api/rimbu_ordered/OrderedMap/Builder.interface.mdx",sourceDirName:"rimbu_ordered/OrderedMap",slug:"/rimbu/ordered/OrderedMap/Builder/interface",permalink:"/api/rimbu/ordered/OrderedMap/Builder/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"OrderedMap.Builder<K,V>",slug:"/rimbu/ordered/OrderedMap/Builder/interface"},sidebar:"defaultSidebar",previous:{title:"OrderedMap (namespace)",permalink:"/api/rimbu/ordered/OrderedMap/namespace"},next:{title:"OrderedMap.Context<UK>",permalink:"/api/rimbu/ordered/OrderedMap/Context/interface"}},b={},O=[{value:"Type parameters",id:"type-parameters",level:3}],y={toc:O};function v(e){var r,t=e,{components:a}=t,u=((e,r)=>{var t={};for(var n in e)p.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&d)for(var n of d(e))r.indexOf(n)<0&&l.call(e,n)&&(t[n]=e[n]);return t})(t,["components"]);return(0,n.kt)("wrapper",(r=c(c({},y),u),i(r,o({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",c({},{id:"interface-orderedmapbuilderkv"}),(0,n.kt)("inlineCode",{parentName:"h1"},"interface OrderedMap.Builder<K,V>")),(0,n.kt)("p",null,"A mutable ",(0,n.kt)("inlineCode",{parentName:"p"},"OrderedMap")," builder used to efficiently create new immutable instances. See the ",(0,n.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,n.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/api/rimbu/ordered/map/OrderedMap/Builder/interface"}),"OrderedMap.Builder API documentation")),(0,n.kt)("h3",c({},{id:"type-parameters"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"K"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"the key type")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"V"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"the value type")))))}v.isMDXComponent=!0}}]);