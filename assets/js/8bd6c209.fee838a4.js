"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[44055],{3905:(t,e,a)=>{a.d(e,{Zo:()=>o,kt:()=>d});var i=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function n(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,i)}return a}function p(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?n(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function m(t,e){if(null==t)return{};var a,i,r=function(t,e){if(null==t)return{};var a,i,r={},n=Object.keys(t);for(i=0;i<n.length;i++)a=n[i],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(i=0;i<n.length;i++)a=n[i],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var l=i.createContext({}),u=function(t){var e=i.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):p(p({},e),t)),a},o=function(t){var e=u(t.components);return i.createElement(l.Provider,{value:e},t.children)},c="mdxType",b={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},s=i.forwardRef((function(t,e){var a=t.components,r=t.mdxType,n=t.originalType,l=t.parentName,o=m(t,["components","mdxType","originalType","parentName"]),c=u(a),s=r,d=c["".concat(l,".").concat(s)]||c[s]||b[s]||n;return a?i.createElement(d,p(p({ref:e},o),{},{components:a})):i.createElement(d,p({ref:e},o))}));function d(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var n=a.length,p=new Array(n);p[0]=s;var m={};for(var l in e)hasOwnProperty.call(e,l)&&(m[l]=e[l]);m.originalType=t,m[c]="string"==typeof t?t:r,p[1]=m;for(var u=2;u<n;u++)p[u]=a[u];return i.createElement.apply(null,p)}return i.createElement.apply(null,a)}s.displayName="MDXCreateElement"},81651:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>M,contentTitle:()=>h,default:()=>N,frontMatter:()=>d,metadata:()=>f,toc:()=>k});var i=a(3905),r=Object.defineProperty,n=Object.defineProperties,p=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,o=(t,e,a)=>e in t?r(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,c=(t,e)=>{for(var a in e||(e={}))l.call(e,a)&&o(t,a,e[a]);if(m)for(var a of m(e))u.call(e,a)&&o(t,a,e[a]);return t},b=(t,e)=>n(t,p(e)),s=(t,e)=>{var a={};for(var i in t)l.call(t,i)&&e.indexOf(i)<0&&(a[i]=t[i]);if(null!=t&&m)for(var i of m(t))e.indexOf(i)<0&&u.call(t,i)&&(a[i]=t[i]);return a};const d={title:"@rimbu/bimultimap",slug:"/rimbu/bimultimap"},h="package @rimbu/bimultimap",f={unversionedId:"rimbu_bimultimap/index",id:"rimbu_bimultimap/index",title:"@rimbu/bimultimap",description:"The @rimbu/bimultimap package provides BiMultiMap implementations.",source:"@site/api/rimbu_bimultimap/index.mdx",sourceDirName:"rimbu_bimultimap",slug:"/rimbu/bimultimap",permalink:"/api/rimbu/bimultimap",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/bimultimap",slug:"/rimbu/bimultimap"},sidebar:"defaultSidebar",previous:{title:"BiMapNonEmptyImpl<K,V>",permalink:"/api/rimbu/bimap/custom/BiMapNonEmptyImpl/class"},next:{title:"BiMultiMap (namespace)",permalink:"/api/rimbu/bimultimap/BiMultiMap/namespace"}},M={},k=[{value:"Interfaces",id:"interfaces",level:2},{value:"Namespaces",id:"namespaces",level:2}],y={toc:k},g="wrapper";function N(t){var e=t,{components:a}=e,r=s(e,["components"]);return(0,i.kt)(g,b(c(c({},y),r),{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",c({},{id:"package-rimbubimultimap"}),(0,i.kt)("inlineCode",{parentName:"h1"},"package @rimbu/bimultimap")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"@rimbu/bimultimap")," package provides BiMultiMap implementations."),(0,i.kt)("p",null," See the ",(0,i.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"Rimbu docs BiMultiMap page")," for more information."),(0,i.kt)("h2",c({},{id:"interfaces"}),"Interfaces"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,i.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("a",c({parentName:"td"},{href:"/api/rimbu/bimultimap/BiMultiMap/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"BiMultiMap<K,V>"))),(0,i.kt)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. See the ",(0,i.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/bimultimap/BiMultiMap/interface"}),"BiMultiMap API documentation"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("a",c({parentName:"td"},{href:"/api/rimbu/bimultimap/HashBiMultiMap/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashBiMultiMap<K,V>"))),(0,i.kt)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are hashed. See the ",(0,i.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/bimultimap/HashBiMultiMap/interface"}),"HashBiMultiMap API documentation"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("a",c({parentName:"td"},{href:"/api/rimbu/bimultimap/SortedBiMultiMap/interface"}),(0,i.kt)("inlineCode",{parentName:"a"},"SortedBiMultiMap<K,V>"))),(0,i.kt)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are sorted. See the ",(0,i.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/bimultimap/SortedBiMultiMap/interface"}),"HashBiMultiMap API documentation"))))),(0,i.kt)("h2",c({},{id:"namespaces"}),"Namespaces"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,i.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("a",c({parentName:"td"},{href:"/api/rimbu/bimultimap/BiMultiMap/namespace"}),(0,i.kt)("inlineCode",{parentName:"a"},"BiMultiMap"))),(0,i.kt)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. See the ",(0,i.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/bimultimap/BiMultiMap/interface"}),"BiMultiMap API documentation"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("a",c({parentName:"td"},{href:"/api/rimbu/bimultimap/HashBiMultiMap/namespace"}),(0,i.kt)("inlineCode",{parentName:"a"},"HashBiMultiMap"))),(0,i.kt)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are hashed. See the ",(0,i.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/bimultimap/HashBiMultiMap/interface"}),"HashBiMultiMap API documentation"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("a",c({parentName:"td"},{href:"/api/rimbu/bimultimap/SortedBiMultiMap/namespace"}),(0,i.kt)("inlineCode",{parentName:"a"},"SortedBiMultiMap"))),(0,i.kt)("td",c({parentName:"tr"},{align:null}),"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are sorted. See the ",(0,i.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/docs/collections/bimultimap"}),"BiMultiMap documentation")," and the ",(0,i.kt)("a",c({parentName:"td"},{href:"https://rimbu.org/api/rimbu/bimultimap/SortedBiMultiMap/interface"}),"HashBiMultiMap API documentation"))))))}N.isMDXComponent=!0}}]);