"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[76721],{19936:function(e){e.exports=JSON.parse('{"pluginId":"api","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"defaultSidebar":[{"type":"link","label":"Rimbu API Docs","href":"/api/","docId":"index"},{"type":"category","label":"@rimbu/bimap","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"BiMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BiMap.Builder<K,V>","href":"/api/rimbu/bimap/BiMap/Builder/interface","docId":"rimbu_bimap/BiMap/Builder.interface"},{"type":"link","label":"BiMap.Context<UK,UV,Tp>","href":"/api/rimbu/bimap/BiMap/Context/interface","docId":"rimbu_bimap/BiMap/Context.interface"},{"type":"link","label":"BiMap.NonEmpty<K,V>","href":"/api/rimbu/bimap/BiMap/NonEmpty/interface","docId":"rimbu_bimap/BiMap/NonEmpty.interface"},{"type":"link","label":"BiMap.Types","href":"/api/rimbu/bimap/BiMap/Types/interface","docId":"rimbu_bimap/BiMap/Types.interface"}],"href":"/api/rimbu/bimap/BiMap/namespace"},{"type":"link","label":"BiMap<K,V>","href":"/api/rimbu/bimap/BiMap/interface","docId":"rimbu_bimap/BiMap.interface"},{"type":"category","label":"@rimbu/bimap/custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BiMapBuilder<K,V>","href":"/api/rimbu/bimap/custom/BiMapBuilder/class","docId":"rimbu_bimap/custom/BiMapBuilder.class"},{"type":"link","label":"BiMapContext<UK,UV,Tp>","href":"/api/rimbu/bimap/custom/BiMapContext/class","docId":"rimbu_bimap/custom/BiMapContext.class"},{"type":"link","label":"BiMapCreators","href":"/api/rimbu/bimap/custom/BiMapCreators/interface","docId":"rimbu_bimap/custom/BiMapCreators.interface"},{"type":"link","label":"BiMapEmpty<K,V>","href":"/api/rimbu/bimap/custom/BiMapEmpty/class","docId":"rimbu_bimap/custom/BiMapEmpty.class"},{"type":"link","label":"BiMapFactory<UK,UV>","href":"/api/rimbu/bimap/custom/BiMapFactory/interface","docId":"rimbu_bimap/custom/BiMapFactory.interface"},{"type":"link","label":"BiMapNonEmptyImpl<K,V>","href":"/api/rimbu/bimap/custom/BiMapNonEmptyImpl/class","docId":"rimbu_bimap/custom/BiMapNonEmptyImpl.class"}],"href":"/api/rimbu/bimap/custom"}],"href":"/api/rimbu/bimap"},{"type":"category","label":"@rimbu/bimultimap","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"BiMultiMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BiMultiMap.Builder<K,V>","href":"/api/rimbu/bimultimap/BiMultiMap/Builder/interface","docId":"rimbu_bimultimap/BiMultiMap/Builder.interface"},{"type":"link","label":"BiMultiMap.Context<UK,UV>","href":"/api/rimbu/bimultimap/BiMultiMap/Context/interface","docId":"rimbu_bimultimap/BiMultiMap/Context.interface"},{"type":"link","label":"BiMultiMap.NonEmpty<K,V>","href":"/api/rimbu/bimultimap/BiMultiMap/NonEmpty/interface","docId":"rimbu_bimultimap/BiMultiMap/NonEmpty.interface"},{"type":"link","label":"BiMultiMap.Types","href":"/api/rimbu/bimultimap/BiMultiMap/Types/interface","docId":"rimbu_bimultimap/BiMultiMap/Types.interface"}],"href":"/api/rimbu/bimultimap/BiMultiMap/namespace"},{"type":"link","label":"BiMultiMap<K,V>","href":"/api/rimbu/bimultimap/BiMultiMap/interface","docId":"rimbu_bimultimap/BiMultiMap.interface"},{"type":"category","label":"HashBiMultiMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashBiMultiMap.Builder<K,V>","href":"/api/rimbu/bimultimap/HashBiMultiMap/Builder/interface","docId":"rimbu_bimultimap/HashBiMultiMap/Builder.interface"},{"type":"link","label":"HashBiMultiMap.Context<UK,UV>","href":"/api/rimbu/bimultimap/HashBiMultiMap/Context/interface","docId":"rimbu_bimultimap/HashBiMultiMap/Context.interface"},{"type":"link","label":"HashBiMultiMap.NonEmpty<K,V>","href":"/api/rimbu/bimultimap/HashBiMultiMap/NonEmpty/interface","docId":"rimbu_bimultimap/HashBiMultiMap/NonEmpty.interface"},{"type":"link","label":"HashBiMultiMap.Types","href":"/api/rimbu/bimultimap/HashBiMultiMap/Types/interface","docId":"rimbu_bimultimap/HashBiMultiMap/Types.interface"}],"href":"/api/rimbu/bimultimap/HashBiMultiMap/namespace"},{"type":"link","label":"HashBiMultiMap<K,V>","href":"/api/rimbu/bimultimap/HashBiMultiMap/interface","docId":"rimbu_bimultimap/HashBiMultiMap.interface"},{"type":"category","label":"SortedBiMultiMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedBiMultiMap.Builder<K,V>","href":"/api/rimbu/bimultimap/SortedBiMultiMap/Builder/interface","docId":"rimbu_bimultimap/SortedBiMultiMap/Builder.interface"},{"type":"link","label":"SortedBiMultiMap.Context<UK,UV>","href":"/api/rimbu/bimultimap/SortedBiMultiMap/Context/interface","docId":"rimbu_bimultimap/SortedBiMultiMap/Context.interface"},{"type":"link","label":"SortedBiMultiMap.NonEmpty<K,V>","href":"/api/rimbu/bimultimap/SortedBiMultiMap/NonEmpty/interface","docId":"rimbu_bimultimap/SortedBiMultiMap/NonEmpty.interface"},{"type":"link","label":"SortedBiMultiMap.Types","href":"/api/rimbu/bimultimap/SortedBiMultiMap/Types/interface","docId":"rimbu_bimultimap/SortedBiMultiMap/Types.interface"}],"href":"/api/rimbu/bimultimap/SortedBiMultiMap/namespace"},{"type":"link","label":"SortedBiMultiMap<K,V>","href":"/api/rimbu/bimultimap/SortedBiMultiMap/interface","docId":"rimbu_bimultimap/SortedBiMultiMap.interface"},{"type":"category","label":"@rimbu/bimultimap/custom","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"BiMultiMapBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BiMultiMapBase.Builder<K,V,Tp>","href":"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface","docId":"rimbu_bimultimap/custom/BiMultiMapBase/Builder.interface"},{"type":"link","label":"BiMultiMapBase.Context<UK,UV,Tp>","href":"/api/rimbu/bimultimap/custom/BiMultiMapBase/Context/interface","docId":"rimbu_bimultimap/custom/BiMultiMapBase/Context.interface"},{"type":"link","label":"BiMultiMapBase.Factory<UK,UV,Tp>","href":"/api/rimbu/bimultimap/custom/BiMultiMapBase/Factory/interface","docId":"rimbu_bimultimap/custom/BiMultiMapBase/Factory.interface"},{"type":"link","label":"BiMultiMapBase.NonEmpty<K,V,Tp>","href":"/api/rimbu/bimultimap/custom/BiMultiMapBase/NonEmpty/interface","docId":"rimbu_bimultimap/custom/BiMultiMapBase/NonEmpty.interface"},{"type":"link","label":"BiMultiMapBase.Types","href":"/api/rimbu/bimultimap/custom/BiMultiMapBase/Types/interface","docId":"rimbu_bimultimap/custom/BiMultiMapBase/Types.interface"}],"href":"/api/rimbu/bimultimap/custom/BiMultiMapBase/namespace"},{"type":"link","label":"BiMultiMapBase<K,V,Tp>","href":"/api/rimbu/bimultimap/custom/BiMultiMapBase/interface","docId":"rimbu_bimultimap/custom/BiMultiMapBase.interface"},{"type":"link","label":"BiMultiMapBuilder<K,V,Tp,TpG>","href":"/api/rimbu/bimultimap/custom/BiMultiMapBuilder/class","docId":"rimbu_bimultimap/custom/BiMultiMapBuilder.class"},{"type":"link","label":"BiMultiMapContext<UK,UV,N,Tp>","href":"/api/rimbu/bimultimap/custom/BiMultiMapContext/class","docId":"rimbu_bimultimap/custom/BiMultiMapContext.class"},{"type":"link","label":"BiMultiMapEmpty<K,V,Tp>","href":"/api/rimbu/bimultimap/custom/BiMultiMapEmpty/class","docId":"rimbu_bimultimap/custom/BiMultiMapEmpty.class"},{"type":"category","label":"BiMultiMapGeneric (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BiMultiMapGeneric.Creators","href":"/api/rimbu/bimultimap/custom/BiMultiMapGeneric/Creators/interface","docId":"rimbu_bimultimap/custom/BiMultiMapGeneric/Creators.interface"}],"href":"/api/rimbu/bimultimap/custom/BiMultiMapGeneric/namespace"},{"type":"category","label":"BiMultiMapHashed (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BiMultiMapHashed.Creators","href":"/api/rimbu/bimultimap/custom/BiMultiMapHashed/Creators/interface","docId":"rimbu_bimultimap/custom/BiMultiMapHashed/Creators.interface"}],"href":"/api/rimbu/bimultimap/custom/BiMultiMapHashed/namespace"},{"type":"link","label":"BiMultiMapNonEmpty<K,V,Tp,TpG>","href":"/api/rimbu/bimultimap/custom/BiMultiMapNonEmpty/class","docId":"rimbu_bimultimap/custom/BiMultiMapNonEmpty.class"},{"type":"category","label":"BiMultiMapSorted (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BiMultiMapSorted.Creators","href":"/api/rimbu/bimultimap/custom/BiMultiMapSorted/Creators/interface","docId":"rimbu_bimultimap/custom/BiMultiMapSorted/Creators.interface"}],"href":"/api/rimbu/bimultimap/custom/BiMultiMapSorted/namespace"},{"type":"link","label":"ContextTypesImpl","href":"/api/rimbu/bimultimap/custom/ContextTypesImpl/interface","docId":"rimbu_bimultimap/custom/ContextTypesImpl.interface"}],"href":"/api/rimbu/bimultimap/custom"}],"href":"/api/rimbu/bimultimap"},{"type":"category","label":"@rimbu/collection-types","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"@rimbu/collection-types/map","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"RMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"RMap.Builder<K,V>","href":"/api/rimbu/collection-types/map/RMap/Builder/interface","docId":"rimbu_collection-types/map/RMap/Builder.interface"},{"type":"link","label":"RMap.Context<UK>","href":"/api/rimbu/collection-types/map/RMap/Context/interface","docId":"rimbu_collection-types/map/RMap/Context.interface"},{"type":"link","label":"RMap.NonEmpty<K,V>","href":"/api/rimbu/collection-types/map/RMap/NonEmpty/interface","docId":"rimbu_collection-types/map/RMap/NonEmpty.interface"},{"type":"link","label":"RMap.Types","href":"/api/rimbu/collection-types/map/RMap/Types/interface","docId":"rimbu_collection-types/map/RMap/Types.interface"}],"href":"/api/rimbu/collection-types/map/RMap/namespace"},{"type":"link","label":"RMap<K,V>","href":"/api/rimbu/collection-types/map/RMap/interface","docId":"rimbu_collection-types/map/RMap.interface"},{"type":"category","label":"VariantMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantMap.NonEmpty<K,V>","href":"/api/rimbu/collection-types/map/VariantMap/NonEmpty/interface","docId":"rimbu_collection-types/map/VariantMap/NonEmpty.interface"},{"type":"link","label":"VariantMap.Types","href":"/api/rimbu/collection-types/map/VariantMap/Types/interface","docId":"rimbu_collection-types/map/VariantMap/Types.interface"}],"href":"/api/rimbu/collection-types/map/VariantMap/namespace"},{"type":"link","label":"VariantMap<K,V>","href":"/api/rimbu/collection-types/map/VariantMap/interface","docId":"rimbu_collection-types/map/VariantMap.interface"}],"href":"/api/rimbu/collection-types/map"},{"type":"category","label":"@rimbu/collection-types/map-custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Elem<T>","href":"/api/rimbu/collection-types/map-custom/Elem/interface","docId":"rimbu_collection-types/map-custom/Elem.interface"},{"type":"link","label":"EmptyBase","href":"/api/rimbu/collection-types/map-custom/EmptyBase/class","docId":"rimbu_collection-types/map-custom/EmptyBase.class"},{"type":"link","label":"KeyValue<K,V>","href":"/api/rimbu/collection-types/map-custom/KeyValue/interface","docId":"rimbu_collection-types/map-custom/KeyValue.interface"},{"type":"link","label":"NonEmptyBase<E>","href":"/api/rimbu/collection-types/map-custom/NonEmptyBase/class","docId":"rimbu_collection-types/map-custom/NonEmptyBase.class"},{"type":"category","label":"RMapBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"RMapBase.Builder<K,V,Tp>","href":"/api/rimbu/collection-types/map-custom/RMapBase/Builder/interface","docId":"rimbu_collection-types/map-custom/RMapBase/Builder.interface"},{"type":"link","label":"RMapBase.Context<UK,Tp>","href":"/api/rimbu/collection-types/map-custom/RMapBase/Context/interface","docId":"rimbu_collection-types/map-custom/RMapBase/Context.interface"},{"type":"link","label":"ContextBase<UK,Tp>","href":"/api/rimbu/collection-types/map-custom/RMapBase/ContextBase/class","docId":"rimbu_collection-types/map-custom/RMapBase/ContextBase.class"},{"type":"link","label":"RMapBase.Factory<Tp,UK>","href":"/api/rimbu/collection-types/map-custom/RMapBase/Factory/interface","docId":"rimbu_collection-types/map-custom/RMapBase/Factory.interface"},{"type":"link","label":"RMapBase.NonEmpty<K,V,Tp>","href":"/api/rimbu/collection-types/map-custom/RMapBase/NonEmpty/interface","docId":"rimbu_collection-types/map-custom/RMapBase/NonEmpty.interface"},{"type":"link","label":"RMapBase.Types","href":"/api/rimbu/collection-types/map-custom/RMapBase/Types/interface","docId":"rimbu_collection-types/map-custom/RMapBase/Types.interface"},{"type":"link","label":"Update","href":"/api/rimbu/collection-types/map-custom/RMapBase/Update/type","docId":"rimbu_collection-types/map-custom/RMapBase/Update.type"}],"href":"/api/rimbu/collection-types/map-custom/RMapBase/namespace"},{"type":"link","label":"RMapBase<K,V,Tp>","href":"/api/rimbu/collection-types/map-custom/RMapBase/interface","docId":"rimbu_collection-types/map-custom/RMapBase.interface"},{"type":"link","label":"Row<R,C,V>","href":"/api/rimbu/collection-types/map-custom/Row/interface","docId":"rimbu_collection-types/map-custom/Row.interface"},{"type":"category","label":"VariantMapBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantMapBase.NonEmpty<K,V,Tp>","href":"/api/rimbu/collection-types/map-custom/VariantMapBase/NonEmpty/interface","docId":"rimbu_collection-types/map-custom/VariantMapBase/NonEmpty.interface"},{"type":"link","label":"VariantMapBase.Types","href":"/api/rimbu/collection-types/map-custom/VariantMapBase/Types/interface","docId":"rimbu_collection-types/map-custom/VariantMapBase/Types.interface"}],"href":"/api/rimbu/collection-types/map-custom/VariantMapBase/namespace"},{"type":"link","label":"VariantMapBase<K,V,Tp>","href":"/api/rimbu/collection-types/map-custom/VariantMapBase/interface","docId":"rimbu_collection-types/map-custom/VariantMapBase.interface"},{"type":"link","label":"WithElem","href":"/api/rimbu/collection-types/map-custom/WithElem/type","docId":"rimbu_collection-types/map-custom/WithElem.type"},{"type":"link","label":"WithKeyValue","href":"/api/rimbu/collection-types/map-custom/WithKeyValue/type","docId":"rimbu_collection-types/map-custom/WithKeyValue.type"},{"type":"link","label":"WithRow","href":"/api/rimbu/collection-types/map-custom/WithRow/type","docId":"rimbu_collection-types/map-custom/WithRow.type"}],"href":"/api/rimbu/collection-types/map-custom"},{"type":"category","label":"@rimbu/collection-types/set","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"RSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"RSet.Builder<T>","href":"/api/rimbu/collection-types/set/RSet/Builder/interface","docId":"rimbu_collection-types/set/RSet/Builder.interface"},{"type":"link","label":"RSet.Context<UT>","href":"/api/rimbu/collection-types/set/RSet/Context/interface","docId":"rimbu_collection-types/set/RSet/Context.interface"},{"type":"link","label":"RSet.NonEmpty<T>","href":"/api/rimbu/collection-types/set/RSet/NonEmpty/interface","docId":"rimbu_collection-types/set/RSet/NonEmpty.interface"},{"type":"link","label":"RSet.Types","href":"/api/rimbu/collection-types/set/RSet/Types/interface","docId":"rimbu_collection-types/set/RSet/Types.interface"}],"href":"/api/rimbu/collection-types/set/RSet/namespace"},{"type":"link","label":"RSet<T>","href":"/api/rimbu/collection-types/set/RSet/interface","docId":"rimbu_collection-types/set/RSet.interface"},{"type":"category","label":"VariantSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantSet.NonEmpty<T>","href":"/api/rimbu/collection-types/set/VariantSet/NonEmpty/interface","docId":"rimbu_collection-types/set/VariantSet/NonEmpty.interface"},{"type":"link","label":"VariantSet.Types","href":"/api/rimbu/collection-types/set/VariantSet/Types/interface","docId":"rimbu_collection-types/set/VariantSet/Types.interface"}],"href":"/api/rimbu/collection-types/set/VariantSet/namespace"},{"type":"link","label":"VariantSet<T>","href":"/api/rimbu/collection-types/set/VariantSet/interface","docId":"rimbu_collection-types/set/VariantSet.interface"}],"href":"/api/rimbu/collection-types/set"},{"type":"category","label":"@rimbu/collection-types/set-custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Elem<T>","href":"/api/rimbu/collection-types/set-custom/Elem/interface","docId":"rimbu_collection-types/set-custom/Elem.interface"},{"type":"link","label":"EmptyBase","href":"/api/rimbu/collection-types/set-custom/EmptyBase/class","docId":"rimbu_collection-types/set-custom/EmptyBase.class"},{"type":"link","label":"KeyValue<K,V>","href":"/api/rimbu/collection-types/set-custom/KeyValue/interface","docId":"rimbu_collection-types/set-custom/KeyValue.interface"},{"type":"link","label":"NonEmptyBase<E>","href":"/api/rimbu/collection-types/set-custom/NonEmptyBase/class","docId":"rimbu_collection-types/set-custom/NonEmptyBase.class"},{"type":"category","label":"RSetBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"RSetBase.Builder<T,Tp>","href":"/api/rimbu/collection-types/set-custom/RSetBase/Builder/interface","docId":"rimbu_collection-types/set-custom/RSetBase/Builder.interface"},{"type":"link","label":"RSetBase.Context<UT,Tp>","href":"/api/rimbu/collection-types/set-custom/RSetBase/Context/interface","docId":"rimbu_collection-types/set-custom/RSetBase/Context.interface"},{"type":"link","label":"ContextBase<UT,Tp>","href":"/api/rimbu/collection-types/set-custom/RSetBase/ContextBase/class","docId":"rimbu_collection-types/set-custom/RSetBase/ContextBase.class"},{"type":"link","label":"RSetBase.Factory<Tp,UT>","href":"/api/rimbu/collection-types/set-custom/RSetBase/Factory/interface","docId":"rimbu_collection-types/set-custom/RSetBase/Factory.interface"},{"type":"link","label":"RSetBase.NonEmpty<T,Tp>","href":"/api/rimbu/collection-types/set-custom/RSetBase/NonEmpty/interface","docId":"rimbu_collection-types/set-custom/RSetBase/NonEmpty.interface"},{"type":"link","label":"RSetBase.Types","href":"/api/rimbu/collection-types/set-custom/RSetBase/Types/interface","docId":"rimbu_collection-types/set-custom/RSetBase/Types.interface"}],"href":"/api/rimbu/collection-types/set-custom/RSetBase/namespace"},{"type":"link","label":"RSetBase<T,Tp>","href":"/api/rimbu/collection-types/set-custom/RSetBase/interface","docId":"rimbu_collection-types/set-custom/RSetBase.interface"},{"type":"link","label":"Row<R,C,V>","href":"/api/rimbu/collection-types/set-custom/Row/interface","docId":"rimbu_collection-types/set-custom/Row.interface"},{"type":"category","label":"VariantSetBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantSetBase.NonEmpty<T,Tp>","href":"/api/rimbu/collection-types/set-custom/VariantSetBase/NonEmpty/interface","docId":"rimbu_collection-types/set-custom/VariantSetBase/NonEmpty.interface"},{"type":"link","label":"VariantSetBase.Types","href":"/api/rimbu/collection-types/set-custom/VariantSetBase/Types/interface","docId":"rimbu_collection-types/set-custom/VariantSetBase/Types.interface"}],"href":"/api/rimbu/collection-types/set-custom/VariantSetBase/namespace"},{"type":"link","label":"VariantSetBase<T,Tp>","href":"/api/rimbu/collection-types/set-custom/VariantSetBase/interface","docId":"rimbu_collection-types/set-custom/VariantSetBase.interface"},{"type":"link","label":"WithElem","href":"/api/rimbu/collection-types/set-custom/WithElem/type","docId":"rimbu_collection-types/set-custom/WithElem.type"},{"type":"link","label":"WithKeyValue","href":"/api/rimbu/collection-types/set-custom/WithKeyValue/type","docId":"rimbu_collection-types/set-custom/WithKeyValue.type"},{"type":"link","label":"WithRow","href":"/api/rimbu/collection-types/set-custom/WithRow/type","docId":"rimbu_collection-types/set-custom/WithRow.type"}],"href":"/api/rimbu/collection-types/set-custom"}],"href":"/api/rimbu/collection-types"},{"type":"category","label":"@rimbu/common","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ArrayNonEmpty","href":"/api/rimbu/common/ArrayNonEmpty/type","docId":"rimbu_common/ArrayNonEmpty.type"},{"type":"link","label":"AsyncCollectFun","href":"/api/rimbu/common/AsyncCollectFun/type","docId":"rimbu_common/AsyncCollectFun.type"},{"type":"link","label":"AsyncOptLazy","href":"/api/rimbu/common/AsyncOptLazy/type","docId":"rimbu_common/AsyncOptLazy.type"},{"type":"category","label":"AsyncReducer (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Base<I,O,S>","href":"/api/rimbu/common/AsyncReducer/Base/class","docId":"rimbu_common/AsyncReducer/Base.class"},{"type":"link","label":"AsyncReducer.Impl<I,O,S>","href":"/api/rimbu/common/AsyncReducer/Impl/interface","docId":"rimbu_common/AsyncReducer/Impl.interface"}],"href":"/api/rimbu/common/AsyncReducer/namespace"},{"type":"link","label":"AsyncReducer","href":"/api/rimbu/common/AsyncReducer/type","docId":"rimbu_common/AsyncReducer.type"},{"type":"category","label":"CollectFun (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Skip","href":"/api/rimbu/common/CollectFun/Skip/type","docId":"rimbu_common/CollectFun/Skip.type"},{"type":"link","label":"Skip","href":"/api/rimbu/common/CollectFun/Skip/var","docId":"rimbu_common/CollectFun/Skip.var"}],"href":"/api/rimbu/common/CollectFun/namespace"},{"type":"link","label":"CollectFun","href":"/api/rimbu/common/CollectFun/type","docId":"rimbu_common/CollectFun.type"},{"type":"link","label":"Comp<K>","href":"/api/rimbu/common/Comp/interface","docId":"rimbu_common/Comp.interface"},{"type":"category","label":"Eq (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"objectIs","href":"/api/rimbu/common/Eq/objectIs/var","docId":"rimbu_common/Eq/objectIs.var"}],"href":"/api/rimbu/common/Eq/namespace"},{"type":"link","label":"Eq","href":"/api/rimbu/common/Eq/type","docId":"rimbu_common/Eq.type"},{"type":"category","label":"ErrBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CustomError","href":"/api/rimbu/common/ErrBase/CustomError/class","docId":"rimbu_common/ErrBase/CustomError.class"},{"type":"link","label":"ForcedError","href":"/api/rimbu/common/ErrBase/ForcedError/class","docId":"rimbu_common/ErrBase/ForcedError.class"}],"href":"/api/rimbu/common/ErrBase/namespace"},{"type":"link","label":"IndexRange","href":"/api/rimbu/common/IndexRange/type","docId":"rimbu_common/IndexRange.type"},{"type":"link","label":"MaybePromise","href":"/api/rimbu/common/MaybePromise/type","docId":"rimbu_common/MaybePromise.type"},{"type":"link","label":"OptLazy","href":"/api/rimbu/common/OptLazy/type","docId":"rimbu_common/OptLazy.type"},{"type":"link","label":"OptLazyOr","href":"/api/rimbu/common/OptLazyOr/type","docId":"rimbu_common/OptLazyOr.type"},{"type":"link","label":"Range","href":"/api/rimbu/common/Range/type","docId":"rimbu_common/Range.type"},{"type":"category","label":"Reducer (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Base<I,O,S>","href":"/api/rimbu/common/Reducer/Base/class","docId":"rimbu_common/Reducer/Base.class"},{"type":"link","label":"Reducer.Impl<I,O,S>","href":"/api/rimbu/common/Reducer/Impl/interface","docId":"rimbu_common/Reducer/Impl.interface"},{"type":"link","label":"Init","href":"/api/rimbu/common/Reducer/Init/type","docId":"rimbu_common/Reducer/Init.type"},{"type":"link","label":"and","href":"/api/rimbu/common/Reducer/and/var","docId":"rimbu_common/Reducer/and.var"},{"type":"link","label":"average","href":"/api/rimbu/common/Reducer/average/var","docId":"rimbu_common/Reducer/average.var"},{"type":"link","label":"count","href":"/api/rimbu/common/Reducer/count/var","docId":"rimbu_common/Reducer/count.var"},{"type":"link","label":"first","href":"/api/rimbu/common/Reducer/first/var","docId":"rimbu_common/Reducer/first.var"},{"type":"link","label":"firstWhere","href":"/api/rimbu/common/Reducer/firstWhere/var","docId":"rimbu_common/Reducer/firstWhere.var"},{"type":"link","label":"isEmpty","href":"/api/rimbu/common/Reducer/isEmpty/var","docId":"rimbu_common/Reducer/isEmpty.var"},{"type":"link","label":"last","href":"/api/rimbu/common/Reducer/last/var","docId":"rimbu_common/Reducer/last.var"},{"type":"link","label":"lastWhere","href":"/api/rimbu/common/Reducer/lastWhere/var","docId":"rimbu_common/Reducer/lastWhere.var"},{"type":"link","label":"max","href":"/api/rimbu/common/Reducer/max/var","docId":"rimbu_common/Reducer/max.var"},{"type":"link","label":"maxBy","href":"/api/rimbu/common/Reducer/maxBy/var","docId":"rimbu_common/Reducer/maxBy.var"},{"type":"link","label":"min","href":"/api/rimbu/common/Reducer/min/var","docId":"rimbu_common/Reducer/min.var"},{"type":"link","label":"minBy","href":"/api/rimbu/common/Reducer/minBy/var","docId":"rimbu_common/Reducer/minBy.var"},{"type":"link","label":"nonEmpty","href":"/api/rimbu/common/Reducer/nonEmpty/var","docId":"rimbu_common/Reducer/nonEmpty.var"},{"type":"link","label":"or","href":"/api/rimbu/common/Reducer/or/var","docId":"rimbu_common/Reducer/or.var"},{"type":"link","label":"product","href":"/api/rimbu/common/Reducer/product/var","docId":"rimbu_common/Reducer/product.var"},{"type":"link","label":"sum","href":"/api/rimbu/common/Reducer/sum/var","docId":"rimbu_common/Reducer/sum.var"}],"href":"/api/rimbu/common/Reducer/namespace"},{"type":"link","label":"Reducer","href":"/api/rimbu/common/Reducer/type","docId":"rimbu_common/Reducer.type"},{"type":"link","label":"RelatedTo","href":"/api/rimbu/common/RelatedTo/type","docId":"rimbu_common/RelatedTo.type"},{"type":"link","label":"StringNonEmpty","href":"/api/rimbu/common/StringNonEmpty/type","docId":"rimbu_common/StringNonEmpty.type"},{"type":"link","label":"SubOf","href":"/api/rimbu/common/SubOf/type","docId":"rimbu_common/SubOf.type"},{"type":"link","label":"SuperOf","href":"/api/rimbu/common/SuperOf/type","docId":"rimbu_common/SuperOf.type"},{"type":"link","label":"ToJSON<V,D>","href":"/api/rimbu/common/ToJSON/interface","docId":"rimbu_common/ToJSON.interface"},{"type":"link","label":"TraverseState","href":"/api/rimbu/common/TraverseState/interface","docId":"rimbu_common/TraverseState.interface"},{"type":"link","label":"Update","href":"/api/rimbu/common/Update/type","docId":"rimbu_common/Update.type"}],"href":"/api/rimbu/common"},{"type":"category","label":"@rimbu/deep","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Immutable","href":"/api/rimbu/deep/Immutable/type","docId":"rimbu_deep/Immutable.type"},{"type":"category","label":"Literal (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Literal.NoIterable","href":"/api/rimbu/deep/Literal/NoIterable/interface","docId":"rimbu_deep/Literal/NoIterable.interface"},{"type":"link","label":"Obj","href":"/api/rimbu/deep/Literal/Obj/type","docId":"rimbu_deep/Literal/Obj.type"},{"type":"link","label":"Value","href":"/api/rimbu/deep/Literal/Value/type","docId":"rimbu_deep/Literal/Value.type"}],"href":"/api/rimbu/deep/Literal/namespace"},{"type":"link","label":"Literal<T>","href":"/api/rimbu/deep/Literal/interface","docId":"rimbu_deep/Literal.interface"},{"type":"category","label":"Match (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Compare","href":"/api/rimbu/deep/Match/Compare/type","docId":"rimbu_deep/Match/Compare.type"},{"type":"link","label":"MatchArray","href":"/api/rimbu/deep/Match/MatchArray/type","docId":"rimbu_deep/Match/MatchArray.type"},{"type":"link","label":"MatchObj","href":"/api/rimbu/deep/Match/MatchObj/type","docId":"rimbu_deep/Match/MatchObj.type"},{"type":"link","label":"Multi","href":"/api/rimbu/deep/Match/Multi/type","docId":"rimbu_deep/Match/Multi.type"}],"href":"/api/rimbu/deep/Match/namespace"},{"type":"link","label":"Match","href":"/api/rimbu/deep/Match/type","docId":"rimbu_deep/Match.type"},{"type":"category","label":"Patch (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"MAP","href":"/api/rimbu/deep/Patch/MAP/var","docId":"rimbu_deep/Patch/MAP.var"},{"type":"link","label":"Multi","href":"/api/rimbu/deep/Patch/Multi/type","docId":"rimbu_deep/Patch/Multi.type"},{"type":"link","label":"PatchArray","href":"/api/rimbu/deep/Patch/PatchArray/type","docId":"rimbu_deep/Patch/PatchArray.type"},{"type":"link","label":"PatchObj","href":"/api/rimbu/deep/Patch/PatchObj/type","docId":"rimbu_deep/Patch/PatchObj.type"},{"type":"link","label":"Update","href":"/api/rimbu/deep/Patch/Update/type","docId":"rimbu_deep/Patch/Update.type"}],"href":"/api/rimbu/deep/Patch/namespace"},{"type":"link","label":"Patch","href":"/api/rimbu/deep/Patch/type","docId":"rimbu_deep/Patch.type"},{"type":"category","label":"Path (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Result","href":"/api/rimbu/deep/Path/Result/type","docId":"rimbu_deep/Path/Result.type"}],"href":"/api/rimbu/deep/Path/namespace"},{"type":"link","label":"Path","href":"/api/rimbu/deep/Path/type","docId":"rimbu_deep/Path.type"},{"type":"category","label":"Tuple (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"NonEmptySource","href":"/api/rimbu/deep/Tuple/NonEmptySource/type","docId":"rimbu_deep/Tuple/NonEmptySource.type"},{"type":"link","label":"Source","href":"/api/rimbu/deep/Tuple/Source/type","docId":"rimbu_deep/Tuple/Source.type"}],"href":"/api/rimbu/deep/Tuple/namespace"},{"type":"link","label":"Tuple","href":"/api/rimbu/deep/Tuple/type","docId":"rimbu_deep/Tuple.type"}],"href":"/api/rimbu/deep"},{"type":"category","label":"@rimbu/graph","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"ArrowGraph (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ArrowGraph.Builder<N>","href":"/api/rimbu/graph/ArrowGraph/Builder/interface","docId":"rimbu_graph/ArrowGraph/Builder.interface"},{"type":"link","label":"ArrowGraph.Context<UN>","href":"/api/rimbu/graph/ArrowGraph/Context/interface","docId":"rimbu_graph/ArrowGraph/Context.interface"},{"type":"link","label":"ArrowGraph.NonEmpty<N>","href":"/api/rimbu/graph/ArrowGraph/NonEmpty/interface","docId":"rimbu_graph/ArrowGraph/NonEmpty.interface"},{"type":"link","label":"ArrowGraph.Types","href":"/api/rimbu/graph/ArrowGraph/Types/interface","docId":"rimbu_graph/ArrowGraph/Types.interface"}],"href":"/api/rimbu/graph/ArrowGraph/namespace"},{"type":"link","label":"ArrowGraph<N>","href":"/api/rimbu/graph/ArrowGraph/interface","docId":"rimbu_graph/ArrowGraph.interface"},{"type":"category","label":"ArrowGraphHashed (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ArrowGraphHashed.Builder<N>","href":"/api/rimbu/graph/ArrowGraphHashed/Builder/interface","docId":"rimbu_graph/ArrowGraphHashed/Builder.interface"},{"type":"link","label":"ArrowGraphHashed.Context<UN>","href":"/api/rimbu/graph/ArrowGraphHashed/Context/interface","docId":"rimbu_graph/ArrowGraphHashed/Context.interface"},{"type":"link","label":"ArrowGraphHashed.NonEmpty<N>","href":"/api/rimbu/graph/ArrowGraphHashed/NonEmpty/interface","docId":"rimbu_graph/ArrowGraphHashed/NonEmpty.interface"},{"type":"link","label":"ArrowGraphHashed.Types","href":"/api/rimbu/graph/ArrowGraphHashed/Types/interface","docId":"rimbu_graph/ArrowGraphHashed/Types.interface"}],"href":"/api/rimbu/graph/ArrowGraphHashed/namespace"},{"type":"link","label":"ArrowGraphHashed<N>","href":"/api/rimbu/graph/ArrowGraphHashed/interface","docId":"rimbu_graph/ArrowGraphHashed.interface"},{"type":"category","label":"ArrowGraphSorted (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ArrowGraphSorted.Builder<N>","href":"/api/rimbu/graph/ArrowGraphSorted/Builder/interface","docId":"rimbu_graph/ArrowGraphSorted/Builder.interface"},{"type":"link","label":"ArrowGraphSorted.Context<UN>","href":"/api/rimbu/graph/ArrowGraphSorted/Context/interface","docId":"rimbu_graph/ArrowGraphSorted/Context.interface"},{"type":"link","label":"ArrowGraphSorted.NonEmpty<N>","href":"/api/rimbu/graph/ArrowGraphSorted/NonEmpty/interface","docId":"rimbu_graph/ArrowGraphSorted/NonEmpty.interface"},{"type":"link","label":"ArrowGraphSorted.Types","href":"/api/rimbu/graph/ArrowGraphSorted/Types/interface","docId":"rimbu_graph/ArrowGraphSorted/Types.interface"}],"href":"/api/rimbu/graph/ArrowGraphSorted/namespace"},{"type":"link","label":"ArrowGraphSorted<N>","href":"/api/rimbu/graph/ArrowGraphSorted/interface","docId":"rimbu_graph/ArrowGraphSorted.interface"},{"type":"category","label":"ArrowValuedGraph (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ArrowValuedGraph.Builder<N,V>","href":"/api/rimbu/graph/ArrowValuedGraph/Builder/interface","docId":"rimbu_graph/ArrowValuedGraph/Builder.interface"},{"type":"link","label":"ArrowValuedGraph.Context<UN>","href":"/api/rimbu/graph/ArrowValuedGraph/Context/interface","docId":"rimbu_graph/ArrowValuedGraph/Context.interface"},{"type":"link","label":"ArrowValuedGraph.NonEmpty<N,V>","href":"/api/rimbu/graph/ArrowValuedGraph/NonEmpty/interface","docId":"rimbu_graph/ArrowValuedGraph/NonEmpty.interface"},{"type":"link","label":"ArrowValuedGraph.Types","href":"/api/rimbu/graph/ArrowValuedGraph/Types/interface","docId":"rimbu_graph/ArrowValuedGraph/Types.interface"}],"href":"/api/rimbu/graph/ArrowValuedGraph/namespace"},{"type":"link","label":"ArrowValuedGraph<N,V>","href":"/api/rimbu/graph/ArrowValuedGraph/interface","docId":"rimbu_graph/ArrowValuedGraph.interface"},{"type":"category","label":"ArrowValuedGraphHashed (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ArrowValuedGraphHashed.Builder<N,V>","href":"/api/rimbu/graph/ArrowValuedGraphHashed/Builder/interface","docId":"rimbu_graph/ArrowValuedGraphHashed/Builder.interface"},{"type":"link","label":"ArrowValuedGraphHashed.Context<UN>","href":"/api/rimbu/graph/ArrowValuedGraphHashed/Context/interface","docId":"rimbu_graph/ArrowValuedGraphHashed/Context.interface"},{"type":"link","label":"ArrowValuedGraphHashed.NonEmpty<N,V>","href":"/api/rimbu/graph/ArrowValuedGraphHashed/NonEmpty/interface","docId":"rimbu_graph/ArrowValuedGraphHashed/NonEmpty.interface"},{"type":"link","label":"ArrowValuedGraphHashed.Types","href":"/api/rimbu/graph/ArrowValuedGraphHashed/Types/interface","docId":"rimbu_graph/ArrowValuedGraphHashed/Types.interface"}],"href":"/api/rimbu/graph/ArrowValuedGraphHashed/namespace"},{"type":"link","label":"ArrowValuedGraphHashed<N,V>","href":"/api/rimbu/graph/ArrowValuedGraphHashed/interface","docId":"rimbu_graph/ArrowValuedGraphHashed.interface"},{"type":"category","label":"ArrowValuedGraphSorted (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ArrowValuedGraphSorted.Builder<N,V>","href":"/api/rimbu/graph/ArrowValuedGraphSorted/Builder/interface","docId":"rimbu_graph/ArrowValuedGraphSorted/Builder.interface"},{"type":"link","label":"ArrowValuedGraphSorted.Context<UN>","href":"/api/rimbu/graph/ArrowValuedGraphSorted/Context/interface","docId":"rimbu_graph/ArrowValuedGraphSorted/Context.interface"},{"type":"link","label":"ArrowValuedGraphSorted.NonEmpty<N,V>","href":"/api/rimbu/graph/ArrowValuedGraphSorted/NonEmpty/interface","docId":"rimbu_graph/ArrowValuedGraphSorted/NonEmpty.interface"},{"type":"link","label":"ArrowValuedGraphSorted.Types","href":"/api/rimbu/graph/ArrowValuedGraphSorted/Types/interface","docId":"rimbu_graph/ArrowValuedGraphSorted/Types.interface"}],"href":"/api/rimbu/graph/ArrowValuedGraphSorted/namespace"},{"type":"link","label":"ArrowValuedGraphSorted<N,V>","href":"/api/rimbu/graph/ArrowValuedGraphSorted/interface","docId":"rimbu_graph/ArrowValuedGraphSorted.interface"},{"type":"category","label":"EdgeGraph (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"EdgeGraph.Builder<N>","href":"/api/rimbu/graph/EdgeGraph/Builder/interface","docId":"rimbu_graph/EdgeGraph/Builder.interface"},{"type":"link","label":"EdgeGraph.Context<UN>","href":"/api/rimbu/graph/EdgeGraph/Context/interface","docId":"rimbu_graph/EdgeGraph/Context.interface"},{"type":"link","label":"EdgeGraph.NonEmpty<N>","href":"/api/rimbu/graph/EdgeGraph/NonEmpty/interface","docId":"rimbu_graph/EdgeGraph/NonEmpty.interface"},{"type":"link","label":"EdgeGraph.Types","href":"/api/rimbu/graph/EdgeGraph/Types/interface","docId":"rimbu_graph/EdgeGraph/Types.interface"}],"href":"/api/rimbu/graph/EdgeGraph/namespace"},{"type":"link","label":"EdgeGraph<N>","href":"/api/rimbu/graph/EdgeGraph/interface","docId":"rimbu_graph/EdgeGraph.interface"},{"type":"category","label":"EdgeGraphHashed (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"EdgeGraphHashed.Builder<N>","href":"/api/rimbu/graph/EdgeGraphHashed/Builder/interface","docId":"rimbu_graph/EdgeGraphHashed/Builder.interface"},{"type":"link","label":"EdgeGraphHashed.Context<UN>","href":"/api/rimbu/graph/EdgeGraphHashed/Context/interface","docId":"rimbu_graph/EdgeGraphHashed/Context.interface"},{"type":"link","label":"EdgeGraphHashed.NonEmpty<N>","href":"/api/rimbu/graph/EdgeGraphHashed/NonEmpty/interface","docId":"rimbu_graph/EdgeGraphHashed/NonEmpty.interface"},{"type":"link","label":"EdgeGraphHashed.Types","href":"/api/rimbu/graph/EdgeGraphHashed/Types/interface","docId":"rimbu_graph/EdgeGraphHashed/Types.interface"}],"href":"/api/rimbu/graph/EdgeGraphHashed/namespace"},{"type":"link","label":"EdgeGraphHashed<N>","href":"/api/rimbu/graph/EdgeGraphHashed/interface","docId":"rimbu_graph/EdgeGraphHashed.interface"},{"type":"category","label":"EdgeGraphSorted (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"EdgeGraphSorted.Builder<N>","href":"/api/rimbu/graph/EdgeGraphSorted/Builder/interface","docId":"rimbu_graph/EdgeGraphSorted/Builder.interface"},{"type":"link","label":"EdgeGraphSorted.Context<UN>","href":"/api/rimbu/graph/EdgeGraphSorted/Context/interface","docId":"rimbu_graph/EdgeGraphSorted/Context.interface"},{"type":"link","label":"EdgeGraphSorted.NonEmpty<N>","href":"/api/rimbu/graph/EdgeGraphSorted/NonEmpty/interface","docId":"rimbu_graph/EdgeGraphSorted/NonEmpty.interface"},{"type":"link","label":"EdgeGraphSorted.Types","href":"/api/rimbu/graph/EdgeGraphSorted/Types/interface","docId":"rimbu_graph/EdgeGraphSorted/Types.interface"}],"href":"/api/rimbu/graph/EdgeGraphSorted/namespace"},{"type":"link","label":"EdgeGraphSorted<N>","href":"/api/rimbu/graph/EdgeGraphSorted/interface","docId":"rimbu_graph/EdgeGraphSorted.interface"},{"type":"category","label":"EdgeValuedGraph (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"EdgeValuedGraph.Builder<N,V>","href":"/api/rimbu/graph/EdgeValuedGraph/Builder/interface","docId":"rimbu_graph/EdgeValuedGraph/Builder.interface"},{"type":"link","label":"EdgeValuedGraph.Context<UN>","href":"/api/rimbu/graph/EdgeValuedGraph/Context/interface","docId":"rimbu_graph/EdgeValuedGraph/Context.interface"},{"type":"link","label":"EdgeValuedGraph.NonEmpty<N,V>","href":"/api/rimbu/graph/EdgeValuedGraph/NonEmpty/interface","docId":"rimbu_graph/EdgeValuedGraph/NonEmpty.interface"},{"type":"link","label":"EdgeValuedGraph.Types","href":"/api/rimbu/graph/EdgeValuedGraph/Types/interface","docId":"rimbu_graph/EdgeValuedGraph/Types.interface"}],"href":"/api/rimbu/graph/EdgeValuedGraph/namespace"},{"type":"link","label":"EdgeValuedGraph<N,V>","href":"/api/rimbu/graph/EdgeValuedGraph/interface","docId":"rimbu_graph/EdgeValuedGraph.interface"},{"type":"category","label":"EdgeValuedGraphHashed (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"EdgeValuedGraphHashed.Builder<N,V>","href":"/api/rimbu/graph/EdgeValuedGraphHashed/Builder/interface","docId":"rimbu_graph/EdgeValuedGraphHashed/Builder.interface"},{"type":"link","label":"EdgeValuedGraphHashed.Context<UN>","href":"/api/rimbu/graph/EdgeValuedGraphHashed/Context/interface","docId":"rimbu_graph/EdgeValuedGraphHashed/Context.interface"},{"type":"link","label":"EdgeValuedGraphHashed.NonEmpty<N,V>","href":"/api/rimbu/graph/EdgeValuedGraphHashed/NonEmpty/interface","docId":"rimbu_graph/EdgeValuedGraphHashed/NonEmpty.interface"},{"type":"link","label":"EdgeValuedGraphHashed.Types","href":"/api/rimbu/graph/EdgeValuedGraphHashed/Types/interface","docId":"rimbu_graph/EdgeValuedGraphHashed/Types.interface"}],"href":"/api/rimbu/graph/EdgeValuedGraphHashed/namespace"},{"type":"link","label":"EdgeValuedGraphHashed<N,V>","href":"/api/rimbu/graph/EdgeValuedGraphHashed/interface","docId":"rimbu_graph/EdgeValuedGraphHashed.interface"},{"type":"category","label":"EdgeValuedGraphSorted (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"EdgeValuedGraphSorted.Builder<N,V>","href":"/api/rimbu/graph/EdgeValuedGraphSorted/Builder/interface","docId":"rimbu_graph/EdgeValuedGraphSorted/Builder.interface"},{"type":"link","label":"EdgeValuedGraphSorted.Context<UN>","href":"/api/rimbu/graph/EdgeValuedGraphSorted/Context/interface","docId":"rimbu_graph/EdgeValuedGraphSorted/Context.interface"},{"type":"link","label":"EdgeValuedGraphSorted.NonEmpty<N,V>","href":"/api/rimbu/graph/EdgeValuedGraphSorted/NonEmpty/interface","docId":"rimbu_graph/EdgeValuedGraphSorted/NonEmpty.interface"},{"type":"link","label":"EdgeValuedGraphSorted.Types","href":"/api/rimbu/graph/EdgeValuedGraphSorted/Types/interface","docId":"rimbu_graph/EdgeValuedGraphSorted/Types.interface"}],"href":"/api/rimbu/graph/EdgeValuedGraphSorted/namespace"},{"type":"link","label":"EdgeValuedGraphSorted<N,V>","href":"/api/rimbu/graph/EdgeValuedGraphSorted/interface","docId":"rimbu_graph/EdgeValuedGraphSorted.interface"},{"type":"category","label":"Graph (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Graph.Builder<N>","href":"/api/rimbu/graph/Graph/Builder/interface","docId":"rimbu_graph/Graph/Builder.interface"},{"type":"link","label":"Graph.Context<UN>","href":"/api/rimbu/graph/Graph/Context/interface","docId":"rimbu_graph/Graph/Context.interface"},{"type":"link","label":"Graph.NonEmpty<N>","href":"/api/rimbu/graph/Graph/NonEmpty/interface","docId":"rimbu_graph/Graph/NonEmpty.interface"},{"type":"link","label":"Graph.Types","href":"/api/rimbu/graph/Graph/Types/interface","docId":"rimbu_graph/Graph/Types.interface"}],"href":"/api/rimbu/graph/Graph/namespace"},{"type":"link","label":"Graph<N>","href":"/api/rimbu/graph/Graph/interface","docId":"rimbu_graph/Graph.interface"},{"type":"category","label":"Traverse (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"LinkType","href":"/api/rimbu/graph/Traverse/LinkType/type","docId":"rimbu_graph/Traverse/LinkType.type"}],"href":"/api/rimbu/graph/Traverse/namespace"},{"type":"category","label":"ValuedGraph (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ValuedGraph.Builder<N,V>","href":"/api/rimbu/graph/ValuedGraph/Builder/interface","docId":"rimbu_graph/ValuedGraph/Builder.interface"},{"type":"link","label":"ValuedGraph.Context<UN>","href":"/api/rimbu/graph/ValuedGraph/Context/interface","docId":"rimbu_graph/ValuedGraph/Context.interface"},{"type":"link","label":"ValuedGraph.NonEmpty<N,V>","href":"/api/rimbu/graph/ValuedGraph/NonEmpty/interface","docId":"rimbu_graph/ValuedGraph/NonEmpty.interface"},{"type":"link","label":"ValuedGraph.Types","href":"/api/rimbu/graph/ValuedGraph/Types/interface","docId":"rimbu_graph/ValuedGraph/Types.interface"}],"href":"/api/rimbu/graph/ValuedGraph/namespace"},{"type":"link","label":"ValuedGraph<N,V>","href":"/api/rimbu/graph/ValuedGraph/interface","docId":"rimbu_graph/ValuedGraph.interface"},{"type":"category","label":"VariantGraph (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantGraph.NonEmpty<N>","href":"/api/rimbu/graph/VariantGraph/NonEmpty/interface","docId":"rimbu_graph/VariantGraph/NonEmpty.interface"},{"type":"link","label":"VariantGraph.Types","href":"/api/rimbu/graph/VariantGraph/Types/interface","docId":"rimbu_graph/VariantGraph/Types.interface"}],"href":"/api/rimbu/graph/VariantGraph/namespace"},{"type":"link","label":"VariantGraph<N>","href":"/api/rimbu/graph/VariantGraph/interface","docId":"rimbu_graph/VariantGraph.interface"},{"type":"category","label":"VariantValuedGraph (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantValuedGraph.NonEmpty<N,V>","href":"/api/rimbu/graph/VariantValuedGraph/NonEmpty/interface","docId":"rimbu_graph/VariantValuedGraph/NonEmpty.interface"},{"type":"link","label":"VariantValuedGraph.Types","href":"/api/rimbu/graph/VariantValuedGraph/Types/interface","docId":"rimbu_graph/VariantValuedGraph/Types.interface"}],"href":"/api/rimbu/graph/VariantValuedGraph/namespace"},{"type":"link","label":"VariantValuedGraph<N,V>","href":"/api/rimbu/graph/VariantValuedGraph/interface","docId":"rimbu_graph/VariantValuedGraph.interface"},{"type":"category","label":"@rimbu/graph/custom","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"ArrowGraphBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ArrowGraphBase.Builder<N,Tp>","href":"/api/rimbu/graph/custom/ArrowGraphBase/Builder/interface","docId":"rimbu_graph/custom/ArrowGraphBase/Builder.interface"},{"type":"link","label":"ArrowGraphBase.Context<UN,Tp>","href":"/api/rimbu/graph/custom/ArrowGraphBase/Context/interface","docId":"rimbu_graph/custom/ArrowGraphBase/Context.interface"},{"type":"link","label":"ArrowGraphBase.NonEmpty<N,Tp>","href":"/api/rimbu/graph/custom/ArrowGraphBase/NonEmpty/interface","docId":"rimbu_graph/custom/ArrowGraphBase/NonEmpty.interface"},{"type":"link","label":"ArrowGraphBase.Types","href":"/api/rimbu/graph/custom/ArrowGraphBase/Types/interface","docId":"rimbu_graph/custom/ArrowGraphBase/Types.interface"}],"href":"/api/rimbu/graph/custom/ArrowGraphBase/namespace"},{"type":"link","label":"ArrowGraphBase<N,Tp>","href":"/api/rimbu/graph/custom/ArrowGraphBase/interface","docId":"rimbu_graph/custom/ArrowGraphBase.interface"},{"type":"link","label":"ArrowGraphHashedCreators","href":"/api/rimbu/graph/custom/ArrowGraphHashedCreators/interface","docId":"rimbu_graph/custom/ArrowGraphHashedCreators.interface"},{"type":"link","label":"ArrowGraphSortedCreators","href":"/api/rimbu/graph/custom/ArrowGraphSortedCreators/interface","docId":"rimbu_graph/custom/ArrowGraphSortedCreators.interface"},{"type":"category","label":"ArrowValuedGraphBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ArrowValuedGraphBase.Builder<N,V,Tp>","href":"/api/rimbu/graph/custom/ArrowValuedGraphBase/Builder/interface","docId":"rimbu_graph/custom/ArrowValuedGraphBase/Builder.interface"},{"type":"link","label":"ArrowValuedGraphBase.Context<UN,Tp>","href":"/api/rimbu/graph/custom/ArrowValuedGraphBase/Context/interface","docId":"rimbu_graph/custom/ArrowValuedGraphBase/Context.interface"},{"type":"link","label":"ArrowValuedGraphBase.NonEmpty<N,V,Tp>","href":"/api/rimbu/graph/custom/ArrowValuedGraphBase/NonEmpty/interface","docId":"rimbu_graph/custom/ArrowValuedGraphBase/NonEmpty.interface"},{"type":"link","label":"ArrowValuedGraphBase.Types","href":"/api/rimbu/graph/custom/ArrowValuedGraphBase/Types/interface","docId":"rimbu_graph/custom/ArrowValuedGraphBase/Types.interface"}],"href":"/api/rimbu/graph/custom/ArrowValuedGraphBase/namespace"},{"type":"link","label":"ArrowValuedGraphBase<N,V,Tp>","href":"/api/rimbu/graph/custom/ArrowValuedGraphBase/interface","docId":"rimbu_graph/custom/ArrowValuedGraphBase.interface"},{"type":"link","label":"ArrowValuedGraphHashedCreators","href":"/api/rimbu/graph/custom/ArrowValuedGraphHashedCreators/interface","docId":"rimbu_graph/custom/ArrowValuedGraphHashedCreators.interface"},{"type":"link","label":"ArrowValuedGraphSortedCreators","href":"/api/rimbu/graph/custom/ArrowValuedGraphSortedCreators/interface","docId":"rimbu_graph/custom/ArrowValuedGraphSortedCreators.interface"},{"type":"category","label":"EdgeGraphBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"EdgeGraphBase.Builder<N,Tp>","href":"/api/rimbu/graph/custom/EdgeGraphBase/Builder/interface","docId":"rimbu_graph/custom/EdgeGraphBase/Builder.interface"},{"type":"link","label":"EdgeGraphBase.Context<UN,Tp>","href":"/api/rimbu/graph/custom/EdgeGraphBase/Context/interface","docId":"rimbu_graph/custom/EdgeGraphBase/Context.interface"},{"type":"link","label":"EdgeGraphBase.NonEmpty<N,Tp>","href":"/api/rimbu/graph/custom/EdgeGraphBase/NonEmpty/interface","docId":"rimbu_graph/custom/EdgeGraphBase/NonEmpty.interface"},{"type":"link","label":"EdgeGraphBase.Types","href":"/api/rimbu/graph/custom/EdgeGraphBase/Types/interface","docId":"rimbu_graph/custom/EdgeGraphBase/Types.interface"}],"href":"/api/rimbu/graph/custom/EdgeGraphBase/namespace"},{"type":"link","label":"EdgeGraphBase<N,Tp>","href":"/api/rimbu/graph/custom/EdgeGraphBase/interface","docId":"rimbu_graph/custom/EdgeGraphBase.interface"},{"type":"link","label":"EdgeGraphHashedCreators","href":"/api/rimbu/graph/custom/EdgeGraphHashedCreators/interface","docId":"rimbu_graph/custom/EdgeGraphHashedCreators.interface"},{"type":"link","label":"EdgeGraphSortedCreators","href":"/api/rimbu/graph/custom/EdgeGraphSortedCreators/interface","docId":"rimbu_graph/custom/EdgeGraphSortedCreators.interface"},{"type":"link","label":"EdgeValuedGrapSortedCreators","href":"/api/rimbu/graph/custom/EdgeValuedGrapSortedCreators/interface","docId":"rimbu_graph/custom/EdgeValuedGrapSortedCreators.interface"},{"type":"category","label":"EdgeValuedGraphBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"EdgeValuedGraphBase.Builder<N,V,Tp>","href":"/api/rimbu/graph/custom/EdgeValuedGraphBase/Builder/interface","docId":"rimbu_graph/custom/EdgeValuedGraphBase/Builder.interface"},{"type":"link","label":"EdgeValuedGraphBase.Context<UN,Tp>","href":"/api/rimbu/graph/custom/EdgeValuedGraphBase/Context/interface","docId":"rimbu_graph/custom/EdgeValuedGraphBase/Context.interface"},{"type":"link","label":"EdgeValuedGraphBase.NonEmpty<N,V,Tp>","href":"/api/rimbu/graph/custom/EdgeValuedGraphBase/NonEmpty/interface","docId":"rimbu_graph/custom/EdgeValuedGraphBase/NonEmpty.interface"},{"type":"link","label":"EdgeValuedGraphBase.Types","href":"/api/rimbu/graph/custom/EdgeValuedGraphBase/Types/interface","docId":"rimbu_graph/custom/EdgeValuedGraphBase/Types.interface"}],"href":"/api/rimbu/graph/custom/EdgeValuedGraphBase/namespace"},{"type":"link","label":"EdgeValuedGraphBase<N,V,Tp>","href":"/api/rimbu/graph/custom/EdgeValuedGraphBase/interface","docId":"rimbu_graph/custom/EdgeValuedGraphBase.interface"},{"type":"link","label":"EdgeValuedGraphHashedCreators","href":"/api/rimbu/graph/custom/EdgeValuedGraphHashedCreators/interface","docId":"rimbu_graph/custom/EdgeValuedGraphHashedCreators.interface"},{"type":"category","label":"GraphBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"GraphBase.Builder<N,Tp>","href":"/api/rimbu/graph/custom/GraphBase/Builder/interface","docId":"rimbu_graph/custom/GraphBase/Builder.interface"},{"type":"link","label":"GraphBase.Context<UN,Tp>","href":"/api/rimbu/graph/custom/GraphBase/Context/interface","docId":"rimbu_graph/custom/GraphBase/Context.interface"},{"type":"link","label":"GraphBase.Factory<Tp,UN>","href":"/api/rimbu/graph/custom/GraphBase/Factory/interface","docId":"rimbu_graph/custom/GraphBase/Factory.interface"},{"type":"link","label":"GraphBase.NonEmpty<N,Tp>","href":"/api/rimbu/graph/custom/GraphBase/NonEmpty/interface","docId":"rimbu_graph/custom/GraphBase/NonEmpty.interface"},{"type":"link","label":"GraphBase.Types","href":"/api/rimbu/graph/custom/GraphBase/Types/interface","docId":"rimbu_graph/custom/GraphBase/Types.interface"}],"href":"/api/rimbu/graph/custom/GraphBase/namespace"},{"type":"link","label":"GraphBase<N,Tp>","href":"/api/rimbu/graph/custom/GraphBase/interface","docId":"rimbu_graph/custom/GraphBase.interface"},{"type":"link","label":"GraphBuilder<N,Tp,TpG>","href":"/api/rimbu/graph/custom/GraphBuilder/class","docId":"rimbu_graph/custom/GraphBuilder.class"},{"type":"link","label":"GraphConnect<N,V,Tp>","href":"/api/rimbu/graph/custom/GraphConnect/interface","docId":"rimbu_graph/custom/GraphConnect.interface"},{"type":"link","label":"GraphConnectNonEmpty<N,V,Tp>","href":"/api/rimbu/graph/custom/GraphConnectNonEmpty/interface","docId":"rimbu_graph/custom/GraphConnectNonEmpty.interface"},{"type":"link","label":"GraphContext<UN,TT,Dir,Tp>","href":"/api/rimbu/graph/custom/GraphContext/class","docId":"rimbu_graph/custom/GraphContext.class"},{"type":"link","label":"GraphElement","href":"/api/rimbu/graph/custom/GraphElement/type","docId":"rimbu_graph/custom/GraphElement.type"},{"type":"link","label":"GraphEmpty<N,V,Tp,TpG>","href":"/api/rimbu/graph/custom/GraphEmpty/class","docId":"rimbu_graph/custom/GraphEmpty.class"},{"type":"link","label":"GraphEmptyBase","href":"/api/rimbu/graph/custom/GraphEmptyBase/class","docId":"rimbu_graph/custom/GraphEmptyBase.class"},{"type":"link","label":"GraphNonEmpty<N,Tp,TpG>","href":"/api/rimbu/graph/custom/GraphNonEmpty/class","docId":"rimbu_graph/custom/GraphNonEmpty.class"},{"type":"link","label":"GraphTypesContextImpl","href":"/api/rimbu/graph/custom/GraphTypesContextImpl/interface","docId":"rimbu_graph/custom/GraphTypesContextImpl.interface"},{"type":"link","label":"GraphValues<N,V>","href":"/api/rimbu/graph/custom/GraphValues/interface","docId":"rimbu_graph/custom/GraphValues.interface"},{"type":"category","label":"Link (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Target","href":"/api/rimbu/graph/custom/Link/Target/type","docId":"rimbu_graph/custom/Link/Target.type"}],"href":"/api/rimbu/graph/custom/Link/namespace"},{"type":"link","label":"Link","href":"/api/rimbu/graph/custom/Link/type","docId":"rimbu_graph/custom/Link.type"},{"type":"category","label":"ValuedGraphBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ValuedGraphBase.Builder<N,V,Tp>","href":"/api/rimbu/graph/custom/ValuedGraphBase/Builder/interface","docId":"rimbu_graph/custom/ValuedGraphBase/Builder.interface"},{"type":"link","label":"ValuedGraphBase.Context<UN,Tp>","href":"/api/rimbu/graph/custom/ValuedGraphBase/Context/interface","docId":"rimbu_graph/custom/ValuedGraphBase/Context.interface"},{"type":"link","label":"ValuedGraphBase.Factory<Tp,UN>","href":"/api/rimbu/graph/custom/ValuedGraphBase/Factory/interface","docId":"rimbu_graph/custom/ValuedGraphBase/Factory.interface"},{"type":"link","label":"ValuedGraphBase.NonEmpty<N,V,Tp>","href":"/api/rimbu/graph/custom/ValuedGraphBase/NonEmpty/interface","docId":"rimbu_graph/custom/ValuedGraphBase/NonEmpty.interface"},{"type":"link","label":"ValuedGraphBase.Types","href":"/api/rimbu/graph/custom/ValuedGraphBase/Types/interface","docId":"rimbu_graph/custom/ValuedGraphBase/Types.interface"}],"href":"/api/rimbu/graph/custom/ValuedGraphBase/namespace"},{"type":"link","label":"ValuedGraphBase<N,V,Tp>","href":"/api/rimbu/graph/custom/ValuedGraphBase/interface","docId":"rimbu_graph/custom/ValuedGraphBase.interface"},{"type":"link","label":"ValuedGraphBuilder<N,V,Tp,TpG>","href":"/api/rimbu/graph/custom/ValuedGraphBuilder/class","docId":"rimbu_graph/custom/ValuedGraphBuilder.class"},{"type":"link","label":"ValuedGraphContext<UN,TT,Tp>","href":"/api/rimbu/graph/custom/ValuedGraphContext/class","docId":"rimbu_graph/custom/ValuedGraphContext.class"},{"type":"link","label":"ValuedGraphElement","href":"/api/rimbu/graph/custom/ValuedGraphElement/type","docId":"rimbu_graph/custom/ValuedGraphElement.type"},{"type":"link","label":"ValuedGraphEmpty<N,V,Tp,TpG>","href":"/api/rimbu/graph/custom/ValuedGraphEmpty/class","docId":"rimbu_graph/custom/ValuedGraphEmpty.class"},{"type":"link","label":"ValuedGraphNonEmpty<N,V,Tp,TpG>","href":"/api/rimbu/graph/custom/ValuedGraphNonEmpty/class","docId":"rimbu_graph/custom/ValuedGraphNonEmpty.class"},{"type":"link","label":"ValuedGraphTypesContextImpl","href":"/api/rimbu/graph/custom/ValuedGraphTypesContextImpl/interface","docId":"rimbu_graph/custom/ValuedGraphTypesContextImpl.interface"},{"type":"category","label":"ValuedLink (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Target","href":"/api/rimbu/graph/custom/ValuedLink/Target/type","docId":"rimbu_graph/custom/ValuedLink/Target.type"}],"href":"/api/rimbu/graph/custom/ValuedLink/namespace"},{"type":"link","label":"ValuedLink","href":"/api/rimbu/graph/custom/ValuedLink/type","docId":"rimbu_graph/custom/ValuedLink.type"},{"type":"category","label":"VariantGraphBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantGraphBase.NonEmpty<N,V,Tp>","href":"/api/rimbu/graph/custom/VariantGraphBase/NonEmpty/interface","docId":"rimbu_graph/custom/VariantGraphBase/NonEmpty.interface"},{"type":"link","label":"VariantGraphBase.Types","href":"/api/rimbu/graph/custom/VariantGraphBase/Types/interface","docId":"rimbu_graph/custom/VariantGraphBase/Types.interface"}],"href":"/api/rimbu/graph/custom/VariantGraphBase/namespace"},{"type":"link","label":"VariantGraphBase<N,V,Tp>","href":"/api/rimbu/graph/custom/VariantGraphBase/interface","docId":"rimbu_graph/custom/VariantGraphBase.interface"},{"type":"category","label":"VariantValuedGraphBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantValuedGraphBase.NonEmpty<N,V,Tp>","href":"/api/rimbu/graph/custom/VariantValuedGraphBase/NonEmpty/interface","docId":"rimbu_graph/custom/VariantValuedGraphBase/NonEmpty.interface"},{"type":"link","label":"VariantValuedGraphBase.Types","href":"/api/rimbu/graph/custom/VariantValuedGraphBase/Types/interface","docId":"rimbu_graph/custom/VariantValuedGraphBase/Types.interface"}],"href":"/api/rimbu/graph/custom/VariantValuedGraphBase/namespace"},{"type":"link","label":"VariantValuedGraphBase<N,V,Tp>","href":"/api/rimbu/graph/custom/VariantValuedGraphBase/interface","docId":"rimbu_graph/custom/VariantValuedGraphBase.interface"},{"type":"link","label":"WithGraphValues","href":"/api/rimbu/graph/custom/WithGraphValues/type","docId":"rimbu_graph/custom/WithGraphValues.type"}],"href":"/api/rimbu/graph/custom"}],"href":"/api/rimbu/graph"},{"type":"category","label":"@rimbu/hashed","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Hasher<UK>","href":"/api/rimbu/hashed/Hasher/interface","docId":"rimbu_hashed/Hasher.interface"},{"type":"category","label":"@rimbu/hashed/map","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"HashMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashMap.Builder<K,V>","href":"/api/rimbu/hashed/map/HashMap/Builder/interface","docId":"rimbu_hashed/map/HashMap/Builder.interface"},{"type":"link","label":"HashMap.Context<UK>","href":"/api/rimbu/hashed/map/HashMap/Context/interface","docId":"rimbu_hashed/map/HashMap/Context.interface"},{"type":"link","label":"HashMap.NonEmpty<K,V>","href":"/api/rimbu/hashed/map/HashMap/NonEmpty/interface","docId":"rimbu_hashed/map/HashMap/NonEmpty.interface"},{"type":"link","label":"HashMap.Types","href":"/api/rimbu/hashed/map/HashMap/Types/interface","docId":"rimbu_hashed/map/HashMap/Types.interface"}],"href":"/api/rimbu/hashed/map/HashMap/namespace"},{"type":"link","label":"HashMap<K,V>","href":"/api/rimbu/hashed/map/HashMap/interface","docId":"rimbu_hashed/map/HashMap.interface"},{"type":"link","label":"Hasher<UK>","href":"/api/rimbu/hashed/map/Hasher/interface","docId":"rimbu_hashed/map/Hasher.interface"}],"href":"/api/rimbu/hashed/map"},{"type":"category","label":"@rimbu/hashed/map-custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashMapBlock<K,V>","href":"/api/rimbu/hashed/map-custom/HashMapBlock/class","docId":"rimbu_hashed/map-custom/HashMapBlock.class"},{"type":"link","label":"HashMapBlockBuilder<K,V>","href":"/api/rimbu/hashed/map-custom/HashMapBlockBuilder/class","docId":"rimbu_hashed/map-custom/HashMapBlockBuilder.class"},{"type":"link","label":"HashMapCollision<K,V>","href":"/api/rimbu/hashed/map-custom/HashMapCollision/class","docId":"rimbu_hashed/map-custom/HashMapCollision.class"},{"type":"link","label":"HashMapCollisionBuilder<K,V>","href":"/api/rimbu/hashed/map-custom/HashMapCollisionBuilder/class","docId":"rimbu_hashed/map-custom/HashMapCollisionBuilder.class"},{"type":"link","label":"HashMapContext<UK>","href":"/api/rimbu/hashed/map-custom/HashMapContext/class","docId":"rimbu_hashed/map-custom/HashMapContext.class"},{"type":"link","label":"HashMapCreators","href":"/api/rimbu/hashed/map-custom/HashMapCreators/interface","docId":"rimbu_hashed/map-custom/HashMapCreators.interface"},{"type":"link","label":"HashMapEmpty<K,V>","href":"/api/rimbu/hashed/map-custom/HashMapEmpty/class","docId":"rimbu_hashed/map-custom/HashMapEmpty.class"},{"type":"link","label":"HashMapNonEmptyBase<K,V>","href":"/api/rimbu/hashed/map-custom/HashMapNonEmptyBase/class","docId":"rimbu_hashed/map-custom/HashMapNonEmptyBase.class"},{"type":"link","label":"MapBlockBuilderEntry","href":"/api/rimbu/hashed/map-custom/MapBlockBuilderEntry/type","docId":"rimbu_hashed/map-custom/MapBlockBuilderEntry.type"},{"type":"link","label":"MapEntrySet","href":"/api/rimbu/hashed/map-custom/MapEntrySet/type","docId":"rimbu_hashed/map-custom/MapEntrySet.type"}],"href":"/api/rimbu/hashed/map-custom"},{"type":"category","label":"@rimbu/hashed/set","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"HashSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashSet.Builder<T>","href":"/api/rimbu/hashed/set/HashSet/Builder/interface","docId":"rimbu_hashed/set/HashSet/Builder.interface"},{"type":"link","label":"HashSet.Context<UT>","href":"/api/rimbu/hashed/set/HashSet/Context/interface","docId":"rimbu_hashed/set/HashSet/Context.interface"},{"type":"link","label":"HashSet.NonEmpty<T>","href":"/api/rimbu/hashed/set/HashSet/NonEmpty/interface","docId":"rimbu_hashed/set/HashSet/NonEmpty.interface"},{"type":"link","label":"HashSet.Types","href":"/api/rimbu/hashed/set/HashSet/Types/interface","docId":"rimbu_hashed/set/HashSet/Types.interface"}],"href":"/api/rimbu/hashed/set/HashSet/namespace"},{"type":"link","label":"HashSet<T>","href":"/api/rimbu/hashed/set/HashSet/interface","docId":"rimbu_hashed/set/HashSet.interface"},{"type":"link","label":"Hasher<UK>","href":"/api/rimbu/hashed/set/Hasher/interface","docId":"rimbu_hashed/set/Hasher.interface"}],"href":"/api/rimbu/hashed/set"},{"type":"category","label":"@rimbu/hashed/set-custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashSetBlock<T>","href":"/api/rimbu/hashed/set-custom/HashSetBlock/class","docId":"rimbu_hashed/set-custom/HashSetBlock.class"},{"type":"link","label":"HashSetBlockBuilder<T>","href":"/api/rimbu/hashed/set-custom/HashSetBlockBuilder/class","docId":"rimbu_hashed/set-custom/HashSetBlockBuilder.class"},{"type":"link","label":"HashSetCollision<T>","href":"/api/rimbu/hashed/set-custom/HashSetCollision/class","docId":"rimbu_hashed/set-custom/HashSetCollision.class"},{"type":"link","label":"HashSetCollisionBuilder<T>","href":"/api/rimbu/hashed/set-custom/HashSetCollisionBuilder/class","docId":"rimbu_hashed/set-custom/HashSetCollisionBuilder.class"},{"type":"link","label":"HashSetContext<UT>","href":"/api/rimbu/hashed/set-custom/HashSetContext/class","docId":"rimbu_hashed/set-custom/HashSetContext.class"},{"type":"link","label":"HashSetCreators","href":"/api/rimbu/hashed/set-custom/HashSetCreators/interface","docId":"rimbu_hashed/set-custom/HashSetCreators.interface"},{"type":"link","label":"HashSetEmpty<T>","href":"/api/rimbu/hashed/set-custom/HashSetEmpty/class","docId":"rimbu_hashed/set-custom/HashSetEmpty.class"},{"type":"link","label":"HashSetNonEmptyBase<T>","href":"/api/rimbu/hashed/set-custom/HashSetNonEmptyBase/class","docId":"rimbu_hashed/set-custom/HashSetNonEmptyBase.class"},{"type":"link","label":"SetBlockBuilderEntry","href":"/api/rimbu/hashed/set-custom/SetBlockBuilderEntry/type","docId":"rimbu_hashed/set-custom/SetBlockBuilderEntry.type"},{"type":"link","label":"SetEntrySet","href":"/api/rimbu/hashed/set-custom/SetEntrySet/type","docId":"rimbu_hashed/set-custom/SetEntrySet.type"}],"href":"/api/rimbu/hashed/set-custom"}],"href":"/api/rimbu/hashed"},{"type":"category","label":"@rimbu/list","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"List (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"List.Builder<T>","href":"/api/rimbu/list/List/Builder/interface","docId":"rimbu_list/List/Builder.interface"},{"type":"link","label":"List.Context","href":"/api/rimbu/list/List/Context/interface","docId":"rimbu_list/List/Context.interface"},{"type":"link","label":"List.NonEmpty<T>","href":"/api/rimbu/list/List/NonEmpty/interface","docId":"rimbu_list/List/NonEmpty.interface"},{"type":"link","label":"List.Types","href":"/api/rimbu/list/List/Types/interface","docId":"rimbu_list/List/Types.interface"}],"href":"/api/rimbu/list/List/namespace"},{"type":"link","label":"List<T>","href":"/api/rimbu/list/List/interface","docId":"rimbu_list/List.interface"},{"type":"category","label":"@rimbu/list/custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Block<T,TS,C>","href":"/api/rimbu/list/custom/Block/interface","docId":"rimbu_list/custom/Block.interface"},{"type":"link","label":"BlockBuilder<T,C>","href":"/api/rimbu/list/custom/BlockBuilder/interface","docId":"rimbu_list/custom/BlockBuilder.interface"},{"type":"link","label":"BuilderBase<T,C>","href":"/api/rimbu/list/custom/BuilderBase/interface","docId":"rimbu_list/custom/BuilderBase.interface"},{"type":"link","label":"CacheMap","href":"/api/rimbu/list/custom/CacheMap/class","docId":"rimbu_list/custom/CacheMap.class"},{"type":"link","label":"Empty<T>","href":"/api/rimbu/list/custom/Empty/class","docId":"rimbu_list/custom/Empty.class"},{"type":"link","label":"GenBuilder<T>","href":"/api/rimbu/list/custom/GenBuilder/class","docId":"rimbu_list/custom/GenBuilder.class"},{"type":"link","label":"LeafBlock<T>","href":"/api/rimbu/list/custom/LeafBlock/class","docId":"rimbu_list/custom/LeafBlock.class"},{"type":"link","label":"LeafBlockBuilder<T>","href":"/api/rimbu/list/custom/LeafBlockBuilder/class","docId":"rimbu_list/custom/LeafBlockBuilder.class"},{"type":"link","label":"LeafBuilder<T>","href":"/api/rimbu/list/custom/LeafBuilder/interface","docId":"rimbu_list/custom/LeafBuilder.interface"},{"type":"link","label":"LeafTree<T>","href":"/api/rimbu/list/custom/LeafTree/class","docId":"rimbu_list/custom/LeafTree.class"},{"type":"link","label":"LeafTreeBuilder<T>","href":"/api/rimbu/list/custom/LeafTreeBuilder/class","docId":"rimbu_list/custom/LeafTreeBuilder.class"},{"type":"link","label":"ListContext","href":"/api/rimbu/list/custom/ListContext/class","docId":"rimbu_list/custom/ListContext.class"},{"type":"link","label":"ListCreators","href":"/api/rimbu/list/custom/ListCreators/interface","docId":"rimbu_list/custom/ListCreators.interface"},{"type":"link","label":"ListFactory","href":"/api/rimbu/list/custom/ListFactory/interface","docId":"rimbu_list/custom/ListFactory.interface"},{"type":"link","label":"NonLeaf<T,C>","href":"/api/rimbu/list/custom/NonLeaf/interface","docId":"rimbu_list/custom/NonLeaf.interface"},{"type":"link","label":"NonLeafBlock<T,C>","href":"/api/rimbu/list/custom/NonLeafBlock/class","docId":"rimbu_list/custom/NonLeafBlock.class"},{"type":"link","label":"NonLeafBlockBuilder<T,C>","href":"/api/rimbu/list/custom/NonLeafBlockBuilder/class","docId":"rimbu_list/custom/NonLeafBlockBuilder.class"},{"type":"link","label":"NonLeafBuilder","href":"/api/rimbu/list/custom/NonLeafBuilder/type","docId":"rimbu_list/custom/NonLeafBuilder.type"},{"type":"link","label":"NonLeafTree<T,C>","href":"/api/rimbu/list/custom/NonLeafTree/class","docId":"rimbu_list/custom/NonLeafTree.class"},{"type":"link","label":"NonLeafTreeBuilder<T,C>","href":"/api/rimbu/list/custom/NonLeafTreeBuilder/class","docId":"rimbu_list/custom/NonLeafTreeBuilder.class"},{"type":"link","label":"ReversedLeafBlock<T>","href":"/api/rimbu/list/custom/ReversedLeafBlock/class","docId":"rimbu_list/custom/ReversedLeafBlock.class"},{"type":"link","label":"Tree<T,TS,TB,C>","href":"/api/rimbu/list/custom/Tree/interface","docId":"rimbu_list/custom/Tree.interface"}],"href":"/api/rimbu/list/custom"}],"href":"/api/rimbu/list"},{"type":"category","label":"@rimbu/multimap","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"HashMultiMapHashValue (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashMultiMapHashValue.Builder<K,V>","href":"/api/rimbu/multimap/HashMultiMapHashValue/Builder/interface","docId":"rimbu_multimap/HashMultiMapHashValue/Builder.interface"},{"type":"link","label":"HashMultiMapHashValue.Context<UK,UV>","href":"/api/rimbu/multimap/HashMultiMapHashValue/Context/interface","docId":"rimbu_multimap/HashMultiMapHashValue/Context.interface"},{"type":"link","label":"HashMultiMapHashValue.NonEmpty<K,V>","href":"/api/rimbu/multimap/HashMultiMapHashValue/NonEmpty/interface","docId":"rimbu_multimap/HashMultiMapHashValue/NonEmpty.interface"},{"type":"link","label":"HashMultiMapHashValue.Types","href":"/api/rimbu/multimap/HashMultiMapHashValue/Types/interface","docId":"rimbu_multimap/HashMultiMapHashValue/Types.interface"}],"href":"/api/rimbu/multimap/HashMultiMapHashValue/namespace"},{"type":"link","label":"HashMultiMapHashValue<K,V>","href":"/api/rimbu/multimap/HashMultiMapHashValue/interface","docId":"rimbu_multimap/HashMultiMapHashValue.interface"},{"type":"category","label":"HashMultiMapSortedValue (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashMultiMapSortedValue.Builder<K,V>","href":"/api/rimbu/multimap/HashMultiMapSortedValue/Builder/interface","docId":"rimbu_multimap/HashMultiMapSortedValue/Builder.interface"},{"type":"link","label":"HashMultiMapSortedValue.Context<UK,UV>","href":"/api/rimbu/multimap/HashMultiMapSortedValue/Context/interface","docId":"rimbu_multimap/HashMultiMapSortedValue/Context.interface"},{"type":"link","label":"HashMultiMapSortedValue.NonEmpty<K,V>","href":"/api/rimbu/multimap/HashMultiMapSortedValue/NonEmpty/interface","docId":"rimbu_multimap/HashMultiMapSortedValue/NonEmpty.interface"},{"type":"link","label":"HashMultiMapSortedValue.Types","href":"/api/rimbu/multimap/HashMultiMapSortedValue/Types/interface","docId":"rimbu_multimap/HashMultiMapSortedValue/Types.interface"}],"href":"/api/rimbu/multimap/HashMultiMapSortedValue/namespace"},{"type":"link","label":"HashMultiMapSortedValue<K,V>","href":"/api/rimbu/multimap/HashMultiMapSortedValue/interface","docId":"rimbu_multimap/HashMultiMapSortedValue.interface"},{"type":"category","label":"MultiMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"MultiMap.Builder<K,V>","href":"/api/rimbu/multimap/MultiMap/Builder/interface","docId":"rimbu_multimap/MultiMap/Builder.interface"},{"type":"link","label":"MultiMap.Context<UK,UV>","href":"/api/rimbu/multimap/MultiMap/Context/interface","docId":"rimbu_multimap/MultiMap/Context.interface"},{"type":"link","label":"MultiMap.NonEmpty<K,V>","href":"/api/rimbu/multimap/MultiMap/NonEmpty/interface","docId":"rimbu_multimap/MultiMap/NonEmpty.interface"},{"type":"link","label":"MultiMap.Types","href":"/api/rimbu/multimap/MultiMap/Types/interface","docId":"rimbu_multimap/MultiMap/Types.interface"}],"href":"/api/rimbu/multimap/MultiMap/namespace"},{"type":"link","label":"MultiMap<K,V>","href":"/api/rimbu/multimap/MultiMap/interface","docId":"rimbu_multimap/MultiMap.interface"},{"type":"category","label":"SortedMultiMapHashValue (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedMultiMapHashValue.Builder<K,V>","href":"/api/rimbu/multimap/SortedMultiMapHashValue/Builder/interface","docId":"rimbu_multimap/SortedMultiMapHashValue/Builder.interface"},{"type":"link","label":"SortedMultiMapHashValue.Context<UK,UV>","href":"/api/rimbu/multimap/SortedMultiMapHashValue/Context/interface","docId":"rimbu_multimap/SortedMultiMapHashValue/Context.interface"},{"type":"link","label":"SortedMultiMapHashValue.NonEmpty<K,V>","href":"/api/rimbu/multimap/SortedMultiMapHashValue/NonEmpty/interface","docId":"rimbu_multimap/SortedMultiMapHashValue/NonEmpty.interface"},{"type":"link","label":"SortedMultiMapHashValue.Types","href":"/api/rimbu/multimap/SortedMultiMapHashValue/Types/interface","docId":"rimbu_multimap/SortedMultiMapHashValue/Types.interface"}],"href":"/api/rimbu/multimap/SortedMultiMapHashValue/namespace"},{"type":"link","label":"SortedMultiMapHashValue<K,V>","href":"/api/rimbu/multimap/SortedMultiMapHashValue/interface","docId":"rimbu_multimap/SortedMultiMapHashValue.interface"},{"type":"category","label":"SortedMultiMapSortedValue (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedMultiMapSortedValue.Builder<K,V>","href":"/api/rimbu/multimap/SortedMultiMapSortedValue/Builder/interface","docId":"rimbu_multimap/SortedMultiMapSortedValue/Builder.interface"},{"type":"link","label":"SortedMultiMapSortedValue.Context<UK,UV>","href":"/api/rimbu/multimap/SortedMultiMapSortedValue/Context/interface","docId":"rimbu_multimap/SortedMultiMapSortedValue/Context.interface"},{"type":"link","label":"SortedMultiMapSortedValue.NonEmpty<K,V>","href":"/api/rimbu/multimap/SortedMultiMapSortedValue/NonEmpty/interface","docId":"rimbu_multimap/SortedMultiMapSortedValue/NonEmpty.interface"},{"type":"link","label":"SortedMultiMapSortedValue.Types","href":"/api/rimbu/multimap/SortedMultiMapSortedValue/Types/interface","docId":"rimbu_multimap/SortedMultiMapSortedValue/Types.interface"}],"href":"/api/rimbu/multimap/SortedMultiMapSortedValue/namespace"},{"type":"link","label":"SortedMultiMapSortedValue<K,V>","href":"/api/rimbu/multimap/SortedMultiMapSortedValue/interface","docId":"rimbu_multimap/SortedMultiMapSortedValue.interface"},{"type":"category","label":"VariantMultiMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantMultiMap.NonEmpty<K,V>","href":"/api/rimbu/multimap/VariantMultiMap/NonEmpty/interface","docId":"rimbu_multimap/VariantMultiMap/NonEmpty.interface"},{"type":"link","label":"VariantMultiMap.Types","href":"/api/rimbu/multimap/VariantMultiMap/Types/interface","docId":"rimbu_multimap/VariantMultiMap/Types.interface"}],"href":"/api/rimbu/multimap/VariantMultiMap/namespace"},{"type":"link","label":"VariantMultiMap<K,V>","href":"/api/rimbu/multimap/VariantMultiMap/interface","docId":"rimbu_multimap/VariantMultiMap.interface"},{"type":"category","label":"@rimbu/multimap/custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ContextImplTypes","href":"/api/rimbu/multimap/custom/ContextImplTypes/interface","docId":"rimbu_multimap/custom/ContextImplTypes.interface"},{"type":"link","label":"HashMultiMapHashValueCreators","href":"/api/rimbu/multimap/custom/HashMultiMapHashValueCreators/interface","docId":"rimbu_multimap/custom/HashMultiMapHashValueCreators.interface"},{"type":"link","label":"HashMultiMapSortedValueCreators","href":"/api/rimbu/multimap/custom/HashMultiMapSortedValueCreators/interface","docId":"rimbu_multimap/custom/HashMultiMapSortedValueCreators.interface"},{"type":"category","label":"MultiMapBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"MultiMapBase.Builder<K,V,Tp>","href":"/api/rimbu/multimap/custom/MultiMapBase/Builder/interface","docId":"rimbu_multimap/custom/MultiMapBase/Builder.interface"},{"type":"link","label":"MultiMapBase.Context<UK,UV,Tp>","href":"/api/rimbu/multimap/custom/MultiMapBase/Context/interface","docId":"rimbu_multimap/custom/MultiMapBase/Context.interface"},{"type":"link","label":"MultiMapBase.Factory<Tp,UK,UV>","href":"/api/rimbu/multimap/custom/MultiMapBase/Factory/interface","docId":"rimbu_multimap/custom/MultiMapBase/Factory.interface"},{"type":"link","label":"MultiMapBase.NonEmpty<K,V,Tp>","href":"/api/rimbu/multimap/custom/MultiMapBase/NonEmpty/interface","docId":"rimbu_multimap/custom/MultiMapBase/NonEmpty.interface"},{"type":"link","label":"MultiMapBase.Types","href":"/api/rimbu/multimap/custom/MultiMapBase/Types/interface","docId":"rimbu_multimap/custom/MultiMapBase/Types.interface"}],"href":"/api/rimbu/multimap/custom/MultiMapBase/namespace"},{"type":"link","label":"MultiMapBase<K,V,Tp>","href":"/api/rimbu/multimap/custom/MultiMapBase/interface","docId":"rimbu_multimap/custom/MultiMapBase.interface"},{"type":"link","label":"MultiMapBuilder<K,V,Tp,TpG>","href":"/api/rimbu/multimap/custom/MultiMapBuilder/class","docId":"rimbu_multimap/custom/MultiMapBuilder.class"},{"type":"link","label":"MultiMapContext<UK,UV,N,Tp>","href":"/api/rimbu/multimap/custom/MultiMapContext/class","docId":"rimbu_multimap/custom/MultiMapContext.class"},{"type":"link","label":"MultiMapEmpty<K,V,Tp>","href":"/api/rimbu/multimap/custom/MultiMapEmpty/class","docId":"rimbu_multimap/custom/MultiMapEmpty.class"},{"type":"link","label":"MultiMapNonEmpty<K,V,Tp,TpG>","href":"/api/rimbu/multimap/custom/MultiMapNonEmpty/class","docId":"rimbu_multimap/custom/MultiMapNonEmpty.class"},{"type":"link","label":"SortedMultiMapHashValueCreators","href":"/api/rimbu/multimap/custom/SortedMultiMapHashValueCreators/interface","docId":"rimbu_multimap/custom/SortedMultiMapHashValueCreators.interface"},{"type":"link","label":"SortedMultiMapSortedValueCreators","href":"/api/rimbu/multimap/custom/SortedMultiMapSortedValueCreators/interface","docId":"rimbu_multimap/custom/SortedMultiMapSortedValueCreators.interface"},{"type":"category","label":"VariantMultiMapBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantMultiMapBase.NonEmpty<K,V,Tp>","href":"/api/rimbu/multimap/custom/VariantMultiMapBase/NonEmpty/interface","docId":"rimbu_multimap/custom/VariantMultiMapBase/NonEmpty.interface"},{"type":"link","label":"VariantMultiMapBase.Types","href":"/api/rimbu/multimap/custom/VariantMultiMapBase/Types/interface","docId":"rimbu_multimap/custom/VariantMultiMapBase/Types.interface"}],"href":"/api/rimbu/multimap/custom/VariantMultiMapBase/namespace"},{"type":"link","label":"VariantMultiMapBase<K,V,Tp>","href":"/api/rimbu/multimap/custom/VariantMultiMapBase/interface","docId":"rimbu_multimap/custom/VariantMultiMapBase.interface"}],"href":"/api/rimbu/multimap/custom"}],"href":"/api/rimbu/multimap"},{"type":"category","label":"@rimbu/multiset","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"HashMultiSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashMultiSet.Builder<T>","href":"/api/rimbu/multiset/HashMultiSet/Builder/interface","docId":"rimbu_multiset/HashMultiSet/Builder.interface"},{"type":"link","label":"HashMultiSet.Context<UT>","href":"/api/rimbu/multiset/HashMultiSet/Context/interface","docId":"rimbu_multiset/HashMultiSet/Context.interface"},{"type":"link","label":"HashMultiSet.NonEmpty<T>","href":"/api/rimbu/multiset/HashMultiSet/NonEmpty/interface","docId":"rimbu_multiset/HashMultiSet/NonEmpty.interface"},{"type":"link","label":"HashMultiSet.Types","href":"/api/rimbu/multiset/HashMultiSet/Types/interface","docId":"rimbu_multiset/HashMultiSet/Types.interface"}],"href":"/api/rimbu/multiset/HashMultiSet/namespace"},{"type":"link","label":"HashMultiSet<T>","href":"/api/rimbu/multiset/HashMultiSet/interface","docId":"rimbu_multiset/HashMultiSet.interface"},{"type":"category","label":"MultiSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"MultiSet.Builder<T>","href":"/api/rimbu/multiset/MultiSet/Builder/interface","docId":"rimbu_multiset/MultiSet/Builder.interface"},{"type":"link","label":"MultiSet.Context<UT>","href":"/api/rimbu/multiset/MultiSet/Context/interface","docId":"rimbu_multiset/MultiSet/Context.interface"},{"type":"link","label":"MultiSet.NonEmpty<T>","href":"/api/rimbu/multiset/MultiSet/NonEmpty/interface","docId":"rimbu_multiset/MultiSet/NonEmpty.interface"},{"type":"link","label":"MultiSet.Types","href":"/api/rimbu/multiset/MultiSet/Types/interface","docId":"rimbu_multiset/MultiSet/Types.interface"}],"href":"/api/rimbu/multiset/MultiSet/namespace"},{"type":"link","label":"MultiSet<T>","href":"/api/rimbu/multiset/MultiSet/interface","docId":"rimbu_multiset/MultiSet.interface"},{"type":"category","label":"SortedMultiSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedMultiSet.Builder<T>","href":"/api/rimbu/multiset/SortedMultiSet/Builder/interface","docId":"rimbu_multiset/SortedMultiSet/Builder.interface"},{"type":"link","label":"SortedMultiSet.Context<UT>","href":"/api/rimbu/multiset/SortedMultiSet/Context/interface","docId":"rimbu_multiset/SortedMultiSet/Context.interface"},{"type":"link","label":"SortedMultiSet.NonEmpty<T>","href":"/api/rimbu/multiset/SortedMultiSet/NonEmpty/interface","docId":"rimbu_multiset/SortedMultiSet/NonEmpty.interface"},{"type":"link","label":"SortedMultiSet.Types","href":"/api/rimbu/multiset/SortedMultiSet/Types/interface","docId":"rimbu_multiset/SortedMultiSet/Types.interface"}],"href":"/api/rimbu/multiset/SortedMultiSet/namespace"},{"type":"link","label":"SortedMultiSet<T>","href":"/api/rimbu/multiset/SortedMultiSet/interface","docId":"rimbu_multiset/SortedMultiSet.interface"},{"type":"category","label":"VariantMultiSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantMultiSet.NonEmpty<T>","href":"/api/rimbu/multiset/VariantMultiSet/NonEmpty/interface","docId":"rimbu_multiset/VariantMultiSet/NonEmpty.interface"},{"type":"link","label":"VariantMultiSet.Types","href":"/api/rimbu/multiset/VariantMultiSet/Types/interface","docId":"rimbu_multiset/VariantMultiSet/Types.interface"}],"href":"/api/rimbu/multiset/VariantMultiSet/namespace"},{"type":"link","label":"VariantMultiSet<T>","href":"/api/rimbu/multiset/VariantMultiSet/interface","docId":"rimbu_multiset/VariantMultiSet.interface"},{"type":"category","label":"@rimbu/multiset/custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ContextImplTypes","href":"/api/rimbu/multiset/custom/ContextImplTypes/interface","docId":"rimbu_multiset/custom/ContextImplTypes.interface"},{"type":"link","label":"HashMultiSetCreators","href":"/api/rimbu/multiset/custom/HashMultiSetCreators/interface","docId":"rimbu_multiset/custom/HashMultiSetCreators.interface"},{"type":"category","label":"MultiSetBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"MultiSetBase.Builder<T,Tp>","href":"/api/rimbu/multiset/custom/MultiSetBase/Builder/interface","docId":"rimbu_multiset/custom/MultiSetBase/Builder.interface"},{"type":"link","label":"MultiSetBase.Context<UT,Tp>","href":"/api/rimbu/multiset/custom/MultiSetBase/Context/interface","docId":"rimbu_multiset/custom/MultiSetBase/Context.interface"},{"type":"link","label":"MultiSetBase.Factory<Tp,UT>","href":"/api/rimbu/multiset/custom/MultiSetBase/Factory/interface","docId":"rimbu_multiset/custom/MultiSetBase/Factory.interface"},{"type":"link","label":"MultiSetBase.NonEmpty<T,Tp>","href":"/api/rimbu/multiset/custom/MultiSetBase/NonEmpty/interface","docId":"rimbu_multiset/custom/MultiSetBase/NonEmpty.interface"},{"type":"link","label":"MultiSetBase.Types","href":"/api/rimbu/multiset/custom/MultiSetBase/Types/interface","docId":"rimbu_multiset/custom/MultiSetBase/Types.interface"}],"href":"/api/rimbu/multiset/custom/MultiSetBase/namespace"},{"type":"link","label":"MultiSetBase<T,Tp>","href":"/api/rimbu/multiset/custom/MultiSetBase/interface","docId":"rimbu_multiset/custom/MultiSetBase.interface"},{"type":"link","label":"MultiSetBuilder<T,Tp,TpG>","href":"/api/rimbu/multiset/custom/MultiSetBuilder/class","docId":"rimbu_multiset/custom/MultiSetBuilder.class"},{"type":"link","label":"MultiSetContext<UT,N,Tp>","href":"/api/rimbu/multiset/custom/MultiSetContext/class","docId":"rimbu_multiset/custom/MultiSetContext.class"},{"type":"link","label":"MultiSetEmpty<T,Tp>","href":"/api/rimbu/multiset/custom/MultiSetEmpty/class","docId":"rimbu_multiset/custom/MultiSetEmpty.class"},{"type":"link","label":"MultiSetNonEmpty<T,Tp,TpG>","href":"/api/rimbu/multiset/custom/MultiSetNonEmpty/class","docId":"rimbu_multiset/custom/MultiSetNonEmpty.class"},{"type":"link","label":"SortedMultiSetCreators","href":"/api/rimbu/multiset/custom/SortedMultiSetCreators/interface","docId":"rimbu_multiset/custom/SortedMultiSetCreators.interface"},{"type":"category","label":"VariantMultiSetBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantMultiSetBase.NonEmpty<T,Tp>","href":"/api/rimbu/multiset/custom/VariantMultiSetBase/NonEmpty/interface","docId":"rimbu_multiset/custom/VariantMultiSetBase/NonEmpty.interface"},{"type":"link","label":"VariantMultiSetBase.Types","href":"/api/rimbu/multiset/custom/VariantMultiSetBase/Types/interface","docId":"rimbu_multiset/custom/VariantMultiSetBase/Types.interface"}],"href":"/api/rimbu/multiset/custom/VariantMultiSetBase/namespace"},{"type":"link","label":"VariantMultiSetBase<T,Tp>","href":"/api/rimbu/multiset/custom/VariantMultiSetBase/interface","docId":"rimbu_multiset/custom/VariantMultiSetBase.interface"}],"href":"/api/rimbu/multiset/custom"}],"href":"/api/rimbu/multiset"},{"type":"category","label":"@rimbu/ordered","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"OrderedHashMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedHashMap.Builder<K,V>","href":"/api/rimbu/ordered/OrderedHashMap/Builder/interface","docId":"rimbu_ordered/OrderedHashMap/Builder.interface"},{"type":"link","label":"OrderedHashMap.Context<UK>","href":"/api/rimbu/ordered/OrderedHashMap/Context/interface","docId":"rimbu_ordered/OrderedHashMap/Context.interface"},{"type":"link","label":"OrderedHashMap.NonEmpty<K,V>","href":"/api/rimbu/ordered/OrderedHashMap/NonEmpty/interface","docId":"rimbu_ordered/OrderedHashMap/NonEmpty.interface"},{"type":"link","label":"OrderedHashMap.Types","href":"/api/rimbu/ordered/OrderedHashMap/Types/interface","docId":"rimbu_ordered/OrderedHashMap/Types.interface"}],"href":"/api/rimbu/ordered/OrderedHashMap/namespace"},{"type":"link","label":"OrderedHashMap<K,V>","href":"/api/rimbu/ordered/OrderedHashMap/interface","docId":"rimbu_ordered/OrderedHashMap.interface"},{"type":"category","label":"OrderedHashSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedHashSet.Builder<T>","href":"/api/rimbu/ordered/OrderedHashSet/Builder/interface","docId":"rimbu_ordered/OrderedHashSet/Builder.interface"},{"type":"link","label":"OrderedHashSet.Context<UT>","href":"/api/rimbu/ordered/OrderedHashSet/Context/interface","docId":"rimbu_ordered/OrderedHashSet/Context.interface"},{"type":"link","label":"OrderedHashSet.NonEmpty<T>","href":"/api/rimbu/ordered/OrderedHashSet/NonEmpty/interface","docId":"rimbu_ordered/OrderedHashSet/NonEmpty.interface"},{"type":"link","label":"OrderedHashSet.Types","href":"/api/rimbu/ordered/OrderedHashSet/Types/interface","docId":"rimbu_ordered/OrderedHashSet/Types.interface"}],"href":"/api/rimbu/ordered/OrderedHashSet/namespace"},{"type":"link","label":"OrderedHashSet<T>","href":"/api/rimbu/ordered/OrderedHashSet/interface","docId":"rimbu_ordered/OrderedHashSet.interface"},{"type":"category","label":"OrderedMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedMap.Builder<K,V>","href":"/api/rimbu/ordered/OrderedMap/Builder/interface","docId":"rimbu_ordered/OrderedMap/Builder.interface"},{"type":"link","label":"OrderedMap.Context<UK>","href":"/api/rimbu/ordered/OrderedMap/Context/interface","docId":"rimbu_ordered/OrderedMap/Context.interface"},{"type":"link","label":"OrderedMap.NonEmpty<K,V>","href":"/api/rimbu/ordered/OrderedMap/NonEmpty/interface","docId":"rimbu_ordered/OrderedMap/NonEmpty.interface"},{"type":"link","label":"OrderedMap.Types","href":"/api/rimbu/ordered/OrderedMap/Types/interface","docId":"rimbu_ordered/OrderedMap/Types.interface"}],"href":"/api/rimbu/ordered/OrderedMap/namespace"},{"type":"link","label":"OrderedMap<K,V>","href":"/api/rimbu/ordered/OrderedMap/interface","docId":"rimbu_ordered/OrderedMap.interface"},{"type":"link","label":"OrderedMap","href":"/api/rimbu/ordered/OrderedMap/var","docId":"rimbu_ordered/OrderedMap.var"},{"type":"category","label":"OrderedSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedSet.Builder<T>","href":"/api/rimbu/ordered/OrderedSet/Builder/interface","docId":"rimbu_ordered/OrderedSet/Builder.interface"},{"type":"link","label":"OrderedSet.Context<UT>","href":"/api/rimbu/ordered/OrderedSet/Context/interface","docId":"rimbu_ordered/OrderedSet/Context.interface"},{"type":"link","label":"OrderedSet.NonEmpty<T>","href":"/api/rimbu/ordered/OrderedSet/NonEmpty/interface","docId":"rimbu_ordered/OrderedSet/NonEmpty.interface"},{"type":"link","label":"OrderedSet.Types","href":"/api/rimbu/ordered/OrderedSet/Types/interface","docId":"rimbu_ordered/OrderedSet/Types.interface"}],"href":"/api/rimbu/ordered/OrderedSet/namespace"},{"type":"link","label":"OrderedSet<T>","href":"/api/rimbu/ordered/OrderedSet/interface","docId":"rimbu_ordered/OrderedSet.interface"},{"type":"link","label":"OrderedSet","href":"/api/rimbu/ordered/OrderedSet/var","docId":"rimbu_ordered/OrderedSet.var"},{"type":"category","label":"OrderedSortedMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedSortedMap.Builder<K,V>","href":"/api/rimbu/ordered/OrderedSortedMap/Builder/interface","docId":"rimbu_ordered/OrderedSortedMap/Builder.interface"},{"type":"link","label":"OrderedSortedMap.Context<UK>","href":"/api/rimbu/ordered/OrderedSortedMap/Context/interface","docId":"rimbu_ordered/OrderedSortedMap/Context.interface"},{"type":"link","label":"OrderedSortedMap.NonEmpty<K,V>","href":"/api/rimbu/ordered/OrderedSortedMap/NonEmpty/interface","docId":"rimbu_ordered/OrderedSortedMap/NonEmpty.interface"},{"type":"link","label":"OrderedSortedMap.Types","href":"/api/rimbu/ordered/OrderedSortedMap/Types/interface","docId":"rimbu_ordered/OrderedSortedMap/Types.interface"}],"href":"/api/rimbu/ordered/OrderedSortedMap/namespace"},{"type":"link","label":"OrderedSortedMap<K,V>","href":"/api/rimbu/ordered/OrderedSortedMap/interface","docId":"rimbu_ordered/OrderedSortedMap.interface"},{"type":"category","label":"OrderedSortedSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedSortedSet.Builder<T>","href":"/api/rimbu/ordered/OrderedSortedSet/Builder/interface","docId":"rimbu_ordered/OrderedSortedSet/Builder.interface"},{"type":"link","label":"OrderedSortedSet.Context<UT>","href":"/api/rimbu/ordered/OrderedSortedSet/Context/interface","docId":"rimbu_ordered/OrderedSortedSet/Context.interface"},{"type":"link","label":"OrderedSortedSet.NonEmpty<T>","href":"/api/rimbu/ordered/OrderedSortedSet/NonEmpty/interface","docId":"rimbu_ordered/OrderedSortedSet/NonEmpty.interface"},{"type":"link","label":"OrderedSortedSet.Types","href":"/api/rimbu/ordered/OrderedSortedSet/Types/interface","docId":"rimbu_ordered/OrderedSortedSet/Types.interface"}],"href":"/api/rimbu/ordered/OrderedSortedSet/namespace"},{"type":"link","label":"OrderedSortedSet<T>","href":"/api/rimbu/ordered/OrderedSortedSet/interface","docId":"rimbu_ordered/OrderedSortedSet.interface"},{"type":"category","label":"@rimbu/ordered/map","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"OrderedHashMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedHashMap.Builder<K,V>","href":"/api/rimbu/ordered/map/OrderedHashMap/Builder/interface","docId":"rimbu_ordered/map/OrderedHashMap/Builder.interface"},{"type":"link","label":"OrderedHashMap.Context<UK>","href":"/api/rimbu/ordered/map/OrderedHashMap/Context/interface","docId":"rimbu_ordered/map/OrderedHashMap/Context.interface"},{"type":"link","label":"OrderedHashMap.NonEmpty<K,V>","href":"/api/rimbu/ordered/map/OrderedHashMap/NonEmpty/interface","docId":"rimbu_ordered/map/OrderedHashMap/NonEmpty.interface"},{"type":"link","label":"OrderedHashMap.Types","href":"/api/rimbu/ordered/map/OrderedHashMap/Types/interface","docId":"rimbu_ordered/map/OrderedHashMap/Types.interface"}],"href":"/api/rimbu/ordered/map/OrderedHashMap/namespace"},{"type":"link","label":"OrderedHashMap<K,V>","href":"/api/rimbu/ordered/map/OrderedHashMap/interface","docId":"rimbu_ordered/map/OrderedHashMap.interface"},{"type":"category","label":"OrderedMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedMap.Builder<K,V>","href":"/api/rimbu/ordered/map/OrderedMap/Builder/interface","docId":"rimbu_ordered/map/OrderedMap/Builder.interface"},{"type":"link","label":"OrderedMap.Context<UK>","href":"/api/rimbu/ordered/map/OrderedMap/Context/interface","docId":"rimbu_ordered/map/OrderedMap/Context.interface"},{"type":"link","label":"OrderedMap.NonEmpty<K,V>","href":"/api/rimbu/ordered/map/OrderedMap/NonEmpty/interface","docId":"rimbu_ordered/map/OrderedMap/NonEmpty.interface"},{"type":"link","label":"OrderedMap.Types","href":"/api/rimbu/ordered/map/OrderedMap/Types/interface","docId":"rimbu_ordered/map/OrderedMap/Types.interface"}],"href":"/api/rimbu/ordered/map/OrderedMap/namespace"},{"type":"link","label":"OrderedMap<K,V>","href":"/api/rimbu/ordered/map/OrderedMap/interface","docId":"rimbu_ordered/map/OrderedMap.interface"},{"type":"category","label":"OrderedSortedMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedSortedMap.Builder<K,V>","href":"/api/rimbu/ordered/map/OrderedSortedMap/Builder/interface","docId":"rimbu_ordered/map/OrderedSortedMap/Builder.interface"},{"type":"link","label":"OrderedSortedMap.Context<UK>","href":"/api/rimbu/ordered/map/OrderedSortedMap/Context/interface","docId":"rimbu_ordered/map/OrderedSortedMap/Context.interface"},{"type":"link","label":"OrderedSortedMap.NonEmpty<K,V>","href":"/api/rimbu/ordered/map/OrderedSortedMap/NonEmpty/interface","docId":"rimbu_ordered/map/OrderedSortedMap/NonEmpty.interface"},{"type":"link","label":"OrderedSortedMap.Types","href":"/api/rimbu/ordered/map/OrderedSortedMap/Types/interface","docId":"rimbu_ordered/map/OrderedSortedMap/Types.interface"}],"href":"/api/rimbu/ordered/map/OrderedSortedMap/namespace"},{"type":"link","label":"OrderedSortedMap<K,V>","href":"/api/rimbu/ordered/map/OrderedSortedMap/interface","docId":"rimbu_ordered/map/OrderedSortedMap.interface"}],"href":"/api/rimbu/ordered/map"},{"type":"category","label":"@rimbu/ordered/map-custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedHashMapCreators","href":"/api/rimbu/ordered/map-custom/OrderedHashMapCreators/interface","docId":"rimbu_ordered/map-custom/OrderedHashMapCreators.interface"},{"type":"category","label":"OrderedMapBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedMapBase.Builder<K,V,Tp>","href":"/api/rimbu/ordered/map-custom/OrderedMapBase/Builder/interface","docId":"rimbu_ordered/map-custom/OrderedMapBase/Builder.interface"},{"type":"link","label":"OrderedMapBase.Context<UK,Tp>","href":"/api/rimbu/ordered/map-custom/OrderedMapBase/Context/interface","docId":"rimbu_ordered/map-custom/OrderedMapBase/Context.interface"},{"type":"link","label":"OrderedMapBase.NonEmpty<K,V,Tp>","href":"/api/rimbu/ordered/map-custom/OrderedMapBase/NonEmpty/interface","docId":"rimbu_ordered/map-custom/OrderedMapBase/NonEmpty.interface"},{"type":"link","label":"OrderedMapBase.Types","href":"/api/rimbu/ordered/map-custom/OrderedMapBase/Types/interface","docId":"rimbu_ordered/map-custom/OrderedMapBase/Types.interface"}],"href":"/api/rimbu/ordered/map-custom/OrderedMapBase/namespace"},{"type":"link","label":"OrderedMapBase<K,V,Tp>","href":"/api/rimbu/ordered/map-custom/OrderedMapBase/interface","docId":"rimbu_ordered/map-custom/OrderedMapBase.interface"},{"type":"link","label":"OrderedMapBuilder<K,V,Tp,TpG>","href":"/api/rimbu/ordered/map-custom/OrderedMapBuilder/class","docId":"rimbu_ordered/map-custom/OrderedMapBuilder.class"},{"type":"link","label":"OrderedMapContextImpl<UK,Tp>","href":"/api/rimbu/ordered/map-custom/OrderedMapContextImpl/class","docId":"rimbu_ordered/map-custom/OrderedMapContextImpl.class"},{"type":"link","label":"OrderedMapEmpty<K,V,Tp>","href":"/api/rimbu/ordered/map-custom/OrderedMapEmpty/class","docId":"rimbu_ordered/map-custom/OrderedMapEmpty.class"},{"type":"link","label":"OrderedMapNonEmpty<K,V,Tp,TpG>","href":"/api/rimbu/ordered/map-custom/OrderedMapNonEmpty/class","docId":"rimbu_ordered/map-custom/OrderedMapNonEmpty.class"},{"type":"link","label":"OrderedMapTypes","href":"/api/rimbu/ordered/map-custom/OrderedMapTypes/interface","docId":"rimbu_ordered/map-custom/OrderedMapTypes.interface"},{"type":"link","label":"OrderedSortedMapCreators","href":"/api/rimbu/ordered/map-custom/OrderedSortedMapCreators/interface","docId":"rimbu_ordered/map-custom/OrderedSortedMapCreators.interface"}],"href":"/api/rimbu/ordered/map-custom"},{"type":"category","label":"@rimbu/ordered/set","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"OrderedHashSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedHashSet.Builder<T>","href":"/api/rimbu/ordered/set/OrderedHashSet/Builder/interface","docId":"rimbu_ordered/set/OrderedHashSet/Builder.interface"},{"type":"link","label":"OrderedHashSet.Context<UT>","href":"/api/rimbu/ordered/set/OrderedHashSet/Context/interface","docId":"rimbu_ordered/set/OrderedHashSet/Context.interface"},{"type":"link","label":"OrderedHashSet.NonEmpty<T>","href":"/api/rimbu/ordered/set/OrderedHashSet/NonEmpty/interface","docId":"rimbu_ordered/set/OrderedHashSet/NonEmpty.interface"},{"type":"link","label":"OrderedHashSet.Types","href":"/api/rimbu/ordered/set/OrderedHashSet/Types/interface","docId":"rimbu_ordered/set/OrderedHashSet/Types.interface"}],"href":"/api/rimbu/ordered/set/OrderedHashSet/namespace"},{"type":"link","label":"OrderedHashSet<T>","href":"/api/rimbu/ordered/set/OrderedHashSet/interface","docId":"rimbu_ordered/set/OrderedHashSet.interface"},{"type":"category","label":"OrderedSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedSet.Builder<T>","href":"/api/rimbu/ordered/set/OrderedSet/Builder/interface","docId":"rimbu_ordered/set/OrderedSet/Builder.interface"},{"type":"link","label":"OrderedSet.Context<UT>","href":"/api/rimbu/ordered/set/OrderedSet/Context/interface","docId":"rimbu_ordered/set/OrderedSet/Context.interface"},{"type":"link","label":"OrderedSet.NonEmpty<T>","href":"/api/rimbu/ordered/set/OrderedSet/NonEmpty/interface","docId":"rimbu_ordered/set/OrderedSet/NonEmpty.interface"},{"type":"link","label":"OrderedSet.Types","href":"/api/rimbu/ordered/set/OrderedSet/Types/interface","docId":"rimbu_ordered/set/OrderedSet/Types.interface"}],"href":"/api/rimbu/ordered/set/OrderedSet/namespace"},{"type":"link","label":"OrderedSet<T>","href":"/api/rimbu/ordered/set/OrderedSet/interface","docId":"rimbu_ordered/set/OrderedSet.interface"},{"type":"category","label":"OrderedSortedSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedSortedSet.Builder<T>","href":"/api/rimbu/ordered/set/OrderedSortedSet/Builder/interface","docId":"rimbu_ordered/set/OrderedSortedSet/Builder.interface"},{"type":"link","label":"OrderedSortedSet.Context<UT>","href":"/api/rimbu/ordered/set/OrderedSortedSet/Context/interface","docId":"rimbu_ordered/set/OrderedSortedSet/Context.interface"},{"type":"link","label":"OrderedSortedSet.NonEmpty<T>","href":"/api/rimbu/ordered/set/OrderedSortedSet/NonEmpty/interface","docId":"rimbu_ordered/set/OrderedSortedSet/NonEmpty.interface"},{"type":"link","label":"OrderedSortedSet.Types","href":"/api/rimbu/ordered/set/OrderedSortedSet/Types/interface","docId":"rimbu_ordered/set/OrderedSortedSet/Types.interface"}],"href":"/api/rimbu/ordered/set/OrderedSortedSet/namespace"},{"type":"link","label":"OrderedSortedSet<T>","href":"/api/rimbu/ordered/set/OrderedSortedSet/interface","docId":"rimbu_ordered/set/OrderedSortedSet.interface"}],"href":"/api/rimbu/ordered/set"},{"type":"category","label":"@rimbu/ordered/set-custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedHashSetCreators","href":"/api/rimbu/ordered/set-custom/OrderedHashSetCreators/interface","docId":"rimbu_ordered/set-custom/OrderedHashSetCreators.interface"},{"type":"category","label":"OrderedSetBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OrderedSetBase.Builder<T,Tp>","href":"/api/rimbu/ordered/set-custom/OrderedSetBase/Builder/interface","docId":"rimbu_ordered/set-custom/OrderedSetBase/Builder.interface"},{"type":"link","label":"OrderedSetBase.Context<UT,Tp>","href":"/api/rimbu/ordered/set-custom/OrderedSetBase/Context/interface","docId":"rimbu_ordered/set-custom/OrderedSetBase/Context.interface"},{"type":"link","label":"OrderedSetBase.NonEmpty<T,Tp>","href":"/api/rimbu/ordered/set-custom/OrderedSetBase/NonEmpty/interface","docId":"rimbu_ordered/set-custom/OrderedSetBase/NonEmpty.interface"},{"type":"link","label":"OrderedSetBase.Types","href":"/api/rimbu/ordered/set-custom/OrderedSetBase/Types/interface","docId":"rimbu_ordered/set-custom/OrderedSetBase/Types.interface"}],"href":"/api/rimbu/ordered/set-custom/OrderedSetBase/namespace"},{"type":"link","label":"OrderedSetBase<T,Tp>","href":"/api/rimbu/ordered/set-custom/OrderedSetBase/interface","docId":"rimbu_ordered/set-custom/OrderedSetBase.interface"},{"type":"link","label":"OrderedSetBuilder<T,Tp,TpG>","href":"/api/rimbu/ordered/set-custom/OrderedSetBuilder/class","docId":"rimbu_ordered/set-custom/OrderedSetBuilder.class"},{"type":"link","label":"OrderedSetContextImpl<UT,Tp>","href":"/api/rimbu/ordered/set-custom/OrderedSetContextImpl/class","docId":"rimbu_ordered/set-custom/OrderedSetContextImpl.class"},{"type":"link","label":"OrderedSetEmpty<T,Tp,TpG>","href":"/api/rimbu/ordered/set-custom/OrderedSetEmpty/class","docId":"rimbu_ordered/set-custom/OrderedSetEmpty.class"},{"type":"link","label":"OrderedSetNonEmpty<T,Tp,TpG>","href":"/api/rimbu/ordered/set-custom/OrderedSetNonEmpty/class","docId":"rimbu_ordered/set-custom/OrderedSetNonEmpty.class"},{"type":"link","label":"OrderedSetTypes","href":"/api/rimbu/ordered/set-custom/OrderedSetTypes/interface","docId":"rimbu_ordered/set-custom/OrderedSetTypes.interface"},{"type":"link","label":"OrderedSortedSetCreators","href":"/api/rimbu/ordered/set-custom/OrderedSortedSetCreators/interface","docId":"rimbu_ordered/set-custom/OrderedSortedSetCreators.interface"}],"href":"/api/rimbu/ordered/set-custom"}],"href":"/api/rimbu/ordered"},{"type":"category","label":"@rimbu/sorted","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"SortedMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedMap.Builder<K,V>","href":"/api/rimbu/sorted/SortedMap/Builder/interface","docId":"rimbu_sorted/SortedMap/Builder.interface"},{"type":"link","label":"SortedMap.Context<UK>","href":"/api/rimbu/sorted/SortedMap/Context/interface","docId":"rimbu_sorted/SortedMap/Context.interface"},{"type":"link","label":"SortedMap.NonEmpty<K,V>","href":"/api/rimbu/sorted/SortedMap/NonEmpty/interface","docId":"rimbu_sorted/SortedMap/NonEmpty.interface"},{"type":"link","label":"SortedMap.Types","href":"/api/rimbu/sorted/SortedMap/Types/interface","docId":"rimbu_sorted/SortedMap/Types.interface"}],"href":"/api/rimbu/sorted/SortedMap/namespace"},{"type":"link","label":"SortedMap<K,V>","href":"/api/rimbu/sorted/SortedMap/interface","docId":"rimbu_sorted/SortedMap.interface"},{"type":"category","label":"SortedSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedSet.Builder<T>","href":"/api/rimbu/sorted/SortedSet/Builder/interface","docId":"rimbu_sorted/SortedSet/Builder.interface"},{"type":"link","label":"SortedSet.Context<UT>","href":"/api/rimbu/sorted/SortedSet/Context/interface","docId":"rimbu_sorted/SortedSet/Context.interface"},{"type":"link","label":"SortedSet.NonEmpty<T>","href":"/api/rimbu/sorted/SortedSet/NonEmpty/interface","docId":"rimbu_sorted/SortedSet/NonEmpty.interface"},{"type":"link","label":"SortedSet.Types","href":"/api/rimbu/sorted/SortedSet/Types/interface","docId":"rimbu_sorted/SortedSet/Types.interface"}],"href":"/api/rimbu/sorted/SortedSet/namespace"},{"type":"link","label":"SortedSet<T>","href":"/api/rimbu/sorted/SortedSet/interface","docId":"rimbu_sorted/SortedSet.interface"},{"type":"category","label":"@rimbu/sorted/map","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"SortedMap (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedMap.Builder<K,V>","href":"/api/rimbu/sorted/map/SortedMap/Builder/interface","docId":"rimbu_sorted/map/SortedMap/Builder.interface"},{"type":"link","label":"SortedMap.Context<UK>","href":"/api/rimbu/sorted/map/SortedMap/Context/interface","docId":"rimbu_sorted/map/SortedMap/Context.interface"},{"type":"link","label":"SortedMap.NonEmpty<K,V>","href":"/api/rimbu/sorted/map/SortedMap/NonEmpty/interface","docId":"rimbu_sorted/map/SortedMap/NonEmpty.interface"},{"type":"link","label":"SortedMap.Types","href":"/api/rimbu/sorted/map/SortedMap/Types/interface","docId":"rimbu_sorted/map/SortedMap/Types.interface"}],"href":"/api/rimbu/sorted/map/SortedMap/namespace"},{"type":"link","label":"SortedMap<K,V>","href":"/api/rimbu/sorted/map/SortedMap/interface","docId":"rimbu_sorted/map/SortedMap.interface"}],"href":"/api/rimbu/sorted/map"},{"type":"category","label":"@rimbu/sorted/map-custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedMapBuilder<K,V>","href":"/api/rimbu/sorted/map-custom/SortedMapBuilder/class","docId":"rimbu_sorted/map-custom/SortedMapBuilder.class"},{"type":"link","label":"SortedMapContext<UK>","href":"/api/rimbu/sorted/map-custom/SortedMapContext/class","docId":"rimbu_sorted/map-custom/SortedMapContext.class"},{"type":"link","label":"SortedMapCreators","href":"/api/rimbu/sorted/map-custom/SortedMapCreators/interface","docId":"rimbu_sorted/map-custom/SortedMapCreators.interface"},{"type":"link","label":"SortedMapEmpty<K,V>","href":"/api/rimbu/sorted/map-custom/SortedMapEmpty/class","docId":"rimbu_sorted/map-custom/SortedMapEmpty.class"},{"type":"link","label":"SortedMapInner<K,V>","href":"/api/rimbu/sorted/map-custom/SortedMapInner/class","docId":"rimbu_sorted/map-custom/SortedMapInner.class"},{"type":"link","label":"SortedMapLeaf<K,V>","href":"/api/rimbu/sorted/map-custom/SortedMapLeaf/class","docId":"rimbu_sorted/map-custom/SortedMapLeaf.class"},{"type":"link","label":"SortedMapNode<K,V>","href":"/api/rimbu/sorted/map-custom/SortedMapNode/class","docId":"rimbu_sorted/map-custom/SortedMapNode.class"}],"href":"/api/rimbu/sorted/map-custom"},{"type":"category","label":"@rimbu/sorted/set","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"SortedSet (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedSet.Builder<T>","href":"/api/rimbu/sorted/set/SortedSet/Builder/interface","docId":"rimbu_sorted/set/SortedSet/Builder.interface"},{"type":"link","label":"SortedSet.Context<UT>","href":"/api/rimbu/sorted/set/SortedSet/Context/interface","docId":"rimbu_sorted/set/SortedSet/Context.interface"},{"type":"link","label":"SortedSet.NonEmpty<T>","href":"/api/rimbu/sorted/set/SortedSet/NonEmpty/interface","docId":"rimbu_sorted/set/SortedSet/NonEmpty.interface"},{"type":"link","label":"SortedSet.Types","href":"/api/rimbu/sorted/set/SortedSet/Types/interface","docId":"rimbu_sorted/set/SortedSet/Types.interface"}],"href":"/api/rimbu/sorted/set/SortedSet/namespace"},{"type":"link","label":"SortedSet<T>","href":"/api/rimbu/sorted/set/SortedSet/interface","docId":"rimbu_sorted/set/SortedSet.interface"}],"href":"/api/rimbu/sorted/set"},{"type":"category","label":"@rimbu/sorted/set-custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedSetBuilder<T>","href":"/api/rimbu/sorted/set-custom/SortedSetBuilder/class","docId":"rimbu_sorted/set-custom/SortedSetBuilder.class"},{"type":"link","label":"SortedSetContext<UT>","href":"/api/rimbu/sorted/set-custom/SortedSetContext/class","docId":"rimbu_sorted/set-custom/SortedSetContext.class"},{"type":"link","label":"SortedSetCreators","href":"/api/rimbu/sorted/set-custom/SortedSetCreators/interface","docId":"rimbu_sorted/set-custom/SortedSetCreators.interface"},{"type":"link","label":"SortedSetEmpty<T>","href":"/api/rimbu/sorted/set-custom/SortedSetEmpty/class","docId":"rimbu_sorted/set-custom/SortedSetEmpty.class"},{"type":"link","label":"SortedSetInner<T>","href":"/api/rimbu/sorted/set-custom/SortedSetInner/class","docId":"rimbu_sorted/set-custom/SortedSetInner.class"},{"type":"link","label":"SortedSetLeaf<T>","href":"/api/rimbu/sorted/set-custom/SortedSetLeaf/class","docId":"rimbu_sorted/set-custom/SortedSetLeaf.class"},{"type":"link","label":"SortedSetNode<T>","href":"/api/rimbu/sorted/set-custom/SortedSetNode/class","docId":"rimbu_sorted/set-custom/SortedSetNode.class"}],"href":"/api/rimbu/sorted/set-custom"}],"href":"/api/rimbu/sorted"},{"type":"category","label":"@rimbu/stream","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AsyncFastIterable<T>","href":"/api/rimbu/stream/AsyncFastIterable/interface","docId":"rimbu_stream/AsyncFastIterable.interface"},{"type":"link","label":"AsyncFastIterator<T>","href":"/api/rimbu/stream/AsyncFastIterator/interface","docId":"rimbu_stream/AsyncFastIterator.interface"},{"type":"category","label":"AsyncStream (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AsyncStream.NonEmpty<T>","href":"/api/rimbu/stream/AsyncStream/NonEmpty/interface","docId":"rimbu_stream/AsyncStream/NonEmpty.interface"}],"href":"/api/rimbu/stream/AsyncStream/namespace"},{"type":"link","label":"AsyncStream<T>","href":"/api/rimbu/stream/AsyncStream/interface","docId":"rimbu_stream/AsyncStream.interface"},{"type":"category","label":"AsyncStreamSource (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"NonEmpty","href":"/api/rimbu/stream/AsyncStreamSource/NonEmpty/type","docId":"rimbu_stream/AsyncStreamSource/NonEmpty.type"}],"href":"/api/rimbu/stream/AsyncStreamSource/namespace"},{"type":"link","label":"AsyncStreamSource","href":"/api/rimbu/stream/AsyncStreamSource/type","docId":"rimbu_stream/AsyncStreamSource.type"},{"type":"category","label":"AsyncStreamable (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AsyncStreamable.NonEmpty<T>","href":"/api/rimbu/stream/AsyncStreamable/NonEmpty/interface","docId":"rimbu_stream/AsyncStreamable/NonEmpty.interface"}],"href":"/api/rimbu/stream/AsyncStreamable/namespace"},{"type":"link","label":"AsyncStreamable<T>","href":"/api/rimbu/stream/AsyncStreamable/interface","docId":"rimbu_stream/AsyncStreamable.interface"},{"type":"link","label":"FastIterable<T>","href":"/api/rimbu/stream/FastIterable/interface","docId":"rimbu_stream/FastIterable.interface"},{"type":"link","label":"FastIterator<T>","href":"/api/rimbu/stream/FastIterator/interface","docId":"rimbu_stream/FastIterator.interface"},{"type":"category","label":"Stream (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Stream.NonEmpty<T>","href":"/api/rimbu/stream/Stream/NonEmpty/interface","docId":"rimbu_stream/Stream/NonEmpty.interface"}],"href":"/api/rimbu/stream/Stream/namespace"},{"type":"link","label":"Stream<T>","href":"/api/rimbu/stream/Stream/interface","docId":"rimbu_stream/Stream.interface"},{"type":"category","label":"StreamSource (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"NonEmpty","href":"/api/rimbu/stream/StreamSource/NonEmpty/type","docId":"rimbu_stream/StreamSource/NonEmpty.type"}],"href":"/api/rimbu/stream/StreamSource/namespace"},{"type":"link","label":"StreamSource","href":"/api/rimbu/stream/StreamSource/type","docId":"rimbu_stream/StreamSource.type"},{"type":"category","label":"Streamable (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Streamable.NonEmpty<T>","href":"/api/rimbu/stream/Streamable/NonEmpty/interface","docId":"rimbu_stream/Streamable/NonEmpty.interface"}],"href":"/api/rimbu/stream/Streamable/namespace"},{"type":"link","label":"Streamable<T>","href":"/api/rimbu/stream/Streamable/interface","docId":"rimbu_stream/Streamable.interface"},{"type":"category","label":"@rimbu/stream/async","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AsyncFastIterable<T>","href":"/api/rimbu/stream/async/AsyncFastIterable/interface","docId":"rimbu_stream/async/AsyncFastIterable.interface"},{"type":"link","label":"AsyncFastIterator<T>","href":"/api/rimbu/stream/async/AsyncFastIterator/interface","docId":"rimbu_stream/async/AsyncFastIterator.interface"},{"type":"category","label":"AsyncStream (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AsyncStream.NonEmpty<T>","href":"/api/rimbu/stream/async/AsyncStream/NonEmpty/interface","docId":"rimbu_stream/async/AsyncStream/NonEmpty.interface"}],"href":"/api/rimbu/stream/async/AsyncStream/namespace"},{"type":"link","label":"AsyncStream<T>","href":"/api/rimbu/stream/async/AsyncStream/interface","docId":"rimbu_stream/async/AsyncStream.interface"},{"type":"category","label":"AsyncStreamSource (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"NonEmpty","href":"/api/rimbu/stream/async/AsyncStreamSource/NonEmpty/type","docId":"rimbu_stream/async/AsyncStreamSource/NonEmpty.type"}],"href":"/api/rimbu/stream/async/AsyncStreamSource/namespace"},{"type":"link","label":"AsyncStreamSource","href":"/api/rimbu/stream/async/AsyncStreamSource/type","docId":"rimbu_stream/async/AsyncStreamSource.type"},{"type":"category","label":"AsyncStreamable (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AsyncStreamable.NonEmpty<T>","href":"/api/rimbu/stream/async/AsyncStreamable/NonEmpty/interface","docId":"rimbu_stream/async/AsyncStreamable/NonEmpty.interface"}],"href":"/api/rimbu/stream/async/AsyncStreamable/namespace"},{"type":"link","label":"AsyncStreamable<T>","href":"/api/rimbu/stream/async/AsyncStreamable/interface","docId":"rimbu_stream/async/AsyncStreamable.interface"}],"href":"/api/rimbu/stream/async"},{"type":"category","label":"@rimbu/stream/async-custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AsyncAppendIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncAppendIterator/class","docId":"rimbu_stream/async-custom/AsyncAppendIterator.class"},{"type":"link","label":"AsyncCollectIterator<T,R>","href":"/api/rimbu/stream/async-custom/AsyncCollectIterator/class","docId":"rimbu_stream/async-custom/AsyncCollectIterator.class"},{"type":"link","label":"AsyncConcatIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncConcatIterator/class","docId":"rimbu_stream/async-custom/AsyncConcatIterator.class"},{"type":"link","label":"AsyncDropIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncDropIterator/class","docId":"rimbu_stream/async-custom/AsyncDropIterator.class"},{"type":"link","label":"AsyncDropWhileIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncDropWhileIterator/class","docId":"rimbu_stream/async-custom/AsyncDropWhileIterator.class"},{"type":"link","label":"AsyncFastIteratorBase<T>","href":"/api/rimbu/stream/async-custom/AsyncFastIteratorBase/class","docId":"rimbu_stream/async-custom/AsyncFastIteratorBase.class"},{"type":"link","label":"AsyncFilterIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncFilterIterator/class","docId":"rimbu_stream/async-custom/AsyncFilterIterator.class"},{"type":"link","label":"AsyncFilterPureIterator<T,A>","href":"/api/rimbu/stream/async-custom/AsyncFilterPureIterator/class","docId":"rimbu_stream/async-custom/AsyncFilterPureIterator.class"},{"type":"link","label":"AsyncFlatMapIterator<T,T2>","href":"/api/rimbu/stream/async-custom/AsyncFlatMapIterator/class","docId":"rimbu_stream/async-custom/AsyncFlatMapIterator.class"},{"type":"link","label":"AsyncFoldIterator<I,R>","href":"/api/rimbu/stream/async-custom/AsyncFoldIterator/class","docId":"rimbu_stream/async-custom/AsyncFoldIterator.class"},{"type":"link","label":"AsyncFromStream<T>","href":"/api/rimbu/stream/async-custom/AsyncFromStream/class","docId":"rimbu_stream/async-custom/AsyncFromStream.class"},{"type":"link","label":"AsyncIndexedIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncIndexedIterator/class","docId":"rimbu_stream/async-custom/AsyncIndexedIterator.class"},{"type":"link","label":"AsyncIndicesOfIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncIndicesOfIterator/class","docId":"rimbu_stream/async-custom/AsyncIndicesOfIterator.class"},{"type":"link","label":"AsyncIndicesWhereIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncIndicesWhereIterator/class","docId":"rimbu_stream/async-custom/AsyncIndicesWhereIterator.class"},{"type":"link","label":"AsyncIntersperseIterator<T,S>","href":"/api/rimbu/stream/async-custom/AsyncIntersperseIterator/class","docId":"rimbu_stream/async-custom/AsyncIntersperseIterator.class"},{"type":"link","label":"AsyncMapIterator<T,T2>","href":"/api/rimbu/stream/async-custom/AsyncMapIterator/class","docId":"rimbu_stream/async-custom/AsyncMapIterator.class"},{"type":"link","label":"AsyncMapPureIterator<T,A,T2>","href":"/api/rimbu/stream/async-custom/AsyncMapPureIterator/class","docId":"rimbu_stream/async-custom/AsyncMapPureIterator.class"},{"type":"link","label":"AsyncOfIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncOfIterator/class","docId":"rimbu_stream/async-custom/AsyncOfIterator.class"},{"type":"link","label":"AsyncOfStream<T>","href":"/api/rimbu/stream/async-custom/AsyncOfStream/class","docId":"rimbu_stream/async-custom/AsyncOfStream.class"},{"type":"link","label":"AsyncPrependIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncPrependIterator/class","docId":"rimbu_stream/async-custom/AsyncPrependIterator.class"},{"type":"link","label":"AsyncReduceAllIterator<I,R>","href":"/api/rimbu/stream/async-custom/AsyncReduceAllIterator/class","docId":"rimbu_stream/async-custom/AsyncReduceAllIterator.class"},{"type":"link","label":"AsyncReduceIterator<I,R>","href":"/api/rimbu/stream/async-custom/AsyncReduceIterator/class","docId":"rimbu_stream/async-custom/AsyncReduceIterator.class"},{"type":"link","label":"AsyncRepeatIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncRepeatIterator/class","docId":"rimbu_stream/async-custom/AsyncRepeatIterator.class"},{"type":"link","label":"AsyncSplitOnIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncSplitOnIterator/class","docId":"rimbu_stream/async-custom/AsyncSplitOnIterator.class"},{"type":"link","label":"AsyncSplitWhereIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncSplitWhereIterator/class","docId":"rimbu_stream/async-custom/AsyncSplitWhereIterator.class"},{"type":"link","label":"AsyncStreamBase<T>","href":"/api/rimbu/stream/async-custom/AsyncStreamBase/class","docId":"rimbu_stream/async-custom/AsyncStreamBase.class"},{"type":"link","label":"AsyncStreamConstructors","href":"/api/rimbu/stream/async-custom/AsyncStreamConstructors/interface","docId":"rimbu_stream/async-custom/AsyncStreamConstructors.interface"},{"type":"link","label":"AsyncStreamConstructorsImpl","href":"/api/rimbu/stream/AsyncStreamConstructorsImpl/var","docId":"rimbu_stream/async-custom/AsyncStreamConstructorsImpl.var"},{"type":"link","label":"AsyncTakeIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncTakeIterator/class","docId":"rimbu_stream/async-custom/AsyncTakeIterator.class"},{"type":"link","label":"AsyncTakeWhileIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncTakeWhileIterator/class","docId":"rimbu_stream/async-custom/AsyncTakeWhileIterator.class"},{"type":"link","label":"AsyncUnfoldIterator<T>","href":"/api/rimbu/stream/async-custom/AsyncUnfoldIterator/class","docId":"rimbu_stream/async-custom/AsyncUnfoldIterator.class"},{"type":"link","label":"AsyncZipAllWithItererator<I,F,R>","href":"/api/rimbu/stream/async-custom/AsyncZipAllWithItererator/class","docId":"rimbu_stream/async-custom/AsyncZipAllWithItererator.class"},{"type":"link","label":"AsyncZipWithIterator<I,R>","href":"/api/rimbu/stream/async-custom/AsyncZipWithIterator/class","docId":"rimbu_stream/async-custom/AsyncZipWithIterator.class"},{"type":"link","label":"FromAsyncIterator<T>","href":"/api/rimbu/stream/async-custom/FromAsyncIterator/class","docId":"rimbu_stream/async-custom/FromAsyncIterator.class"},{"type":"link","label":"FromIterator<T>","href":"/api/rimbu/stream/async-custom/FromIterator/class","docId":"rimbu_stream/async-custom/FromIterator.class"},{"type":"link","label":"FromPromise<T>","href":"/api/rimbu/stream/async-custom/FromPromise/class","docId":"rimbu_stream/async-custom/FromPromise.class"},{"type":"link","label":"FromResource<T,R>","href":"/api/rimbu/stream/async-custom/FromResource/class","docId":"rimbu_stream/async-custom/FromResource.class"},{"type":"link","label":"FromResourceIterator<T,R>","href":"/api/rimbu/stream/async-custom/FromResourceIterator/class","docId":"rimbu_stream/async-custom/FromResourceIterator.class"},{"type":"link","label":"FromSource<T>","href":"/api/rimbu/stream/async-custom/FromSource/class","docId":"rimbu_stream/async-custom/FromSource.class"},{"type":"link","label":"emptyAsyncFastIterator","href":"/api/rimbu/stream/emptyAsyncFastIterator/var","docId":"rimbu_stream/async-custom/emptyAsyncFastIterator.var"},{"type":"link","label":"emptyAsyncStream","href":"/api/rimbu/stream/emptyAsyncStream/var","docId":"rimbu_stream/async-custom/emptyAsyncStream.var"},{"type":"link","label":"fixedDoneAsyncIteratorResult","href":"/api/rimbu/stream/fixedDoneAsyncIteratorResult/var","docId":"rimbu_stream/async-custom/fixedDoneAsyncIteratorResult.var"},{"type":"link","label":"fromAsyncStreamSource","href":"/api/rimbu/stream/fromAsyncStreamSource/var","docId":"rimbu_stream/async-custom/fromAsyncStreamSource.var"}],"href":"/api/rimbu/stream/async-custom"},{"type":"category","label":"@rimbu/stream/custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AlwaysIterator<T>","href":"/api/rimbu/stream/custom/AlwaysIterator/class","docId":"rimbu_stream/custom/AlwaysIterator.class"},{"type":"link","label":"AlwaysStream<T>","href":"/api/rimbu/stream/custom/AlwaysStream/class","docId":"rimbu_stream/custom/AlwaysStream.class"},{"type":"link","label":"AppendIterator<T>","href":"/api/rimbu/stream/custom/AppendIterator/class","docId":"rimbu_stream/custom/AppendIterator.class"},{"type":"link","label":"ArrayIterator<T>","href":"/api/rimbu/stream/custom/ArrayIterator/class","docId":"rimbu_stream/custom/ArrayIterator.class"},{"type":"link","label":"ArrayReverseIterator<T>","href":"/api/rimbu/stream/custom/ArrayReverseIterator/class","docId":"rimbu_stream/custom/ArrayReverseIterator.class"},{"type":"link","label":"ArrayStream<T>","href":"/api/rimbu/stream/custom/ArrayStream/class","docId":"rimbu_stream/custom/ArrayStream.class"},{"type":"link","label":"CollectIterator<T,R>","href":"/api/rimbu/stream/custom/CollectIterator/class","docId":"rimbu_stream/custom/CollectIterator.class"},{"type":"link","label":"ConcatIterator<T>","href":"/api/rimbu/stream/custom/ConcatIterator/class","docId":"rimbu_stream/custom/ConcatIterator.class"},{"type":"link","label":"DropIterator<T>","href":"/api/rimbu/stream/custom/DropIterator/class","docId":"rimbu_stream/custom/DropIterator.class"},{"type":"link","label":"DropWhileIterator<T>","href":"/api/rimbu/stream/custom/DropWhileIterator/class","docId":"rimbu_stream/custom/DropWhileIterator.class"},{"type":"link","label":"FastIteratorBase<T>","href":"/api/rimbu/stream/custom/FastIteratorBase/class","docId":"rimbu_stream/custom/FastIteratorBase.class"},{"type":"link","label":"FilterApplyIterator<T,A>","href":"/api/rimbu/stream/custom/FilterApplyIterator/class","docId":"rimbu_stream/custom/FilterApplyIterator.class"},{"type":"link","label":"FilterApplyStream<T,A>","href":"/api/rimbu/stream/custom/FilterApplyStream/class","docId":"rimbu_stream/custom/FilterApplyStream.class"},{"type":"link","label":"FilterIterator<T>","href":"/api/rimbu/stream/custom/FilterIterator/class","docId":"rimbu_stream/custom/FilterIterator.class"},{"type":"link","label":"FilterPureIterator<T,A>","href":"/api/rimbu/stream/custom/FilterPureIterator/class","docId":"rimbu_stream/custom/FilterPureIterator.class"},{"type":"link","label":"FlatMapIterator<T,T2>","href":"/api/rimbu/stream/custom/FlatMapIterator/class","docId":"rimbu_stream/custom/FlatMapIterator.class"},{"type":"link","label":"FromIterable<T>","href":"/api/rimbu/stream/custom/FromIterable/class","docId":"rimbu_stream/custom/FromIterable.class"},{"type":"link","label":"FromStream<T>","href":"/api/rimbu/stream/custom/FromStream/class","docId":"rimbu_stream/custom/FromStream.class"},{"type":"link","label":"IndexedIterator<T>","href":"/api/rimbu/stream/custom/IndexedIterator/class","docId":"rimbu_stream/custom/IndexedIterator.class"},{"type":"link","label":"IndicesOfIterator<T>","href":"/api/rimbu/stream/custom/IndicesOfIterator/class","docId":"rimbu_stream/custom/IndicesOfIterator.class"},{"type":"link","label":"IndicesWhereIterator<T>","href":"/api/rimbu/stream/custom/IndicesWhereIterator/class","docId":"rimbu_stream/custom/IndicesWhereIterator.class"},{"type":"link","label":"IntersperseIterator<T>","href":"/api/rimbu/stream/custom/IntersperseIterator/class","docId":"rimbu_stream/custom/IntersperseIterator.class"},{"type":"link","label":"MapApplyIterator<T,A,R>","href":"/api/rimbu/stream/custom/MapApplyIterator/class","docId":"rimbu_stream/custom/MapApplyIterator.class"},{"type":"link","label":"MapApplyStream<T,A,R>","href":"/api/rimbu/stream/custom/MapApplyStream/class","docId":"rimbu_stream/custom/MapApplyStream.class"},{"type":"link","label":"MapIterator<T,T2>","href":"/api/rimbu/stream/custom/MapIterator/class","docId":"rimbu_stream/custom/MapIterator.class"},{"type":"link","label":"MapPureIterator<T,A,T2>","href":"/api/rimbu/stream/custom/MapPureIterator/class","docId":"rimbu_stream/custom/MapPureIterator.class"},{"type":"link","label":"PrependIterator<T>","href":"/api/rimbu/stream/custom/PrependIterator/class","docId":"rimbu_stream/custom/PrependIterator.class"},{"type":"link","label":"RandomIntIterator","href":"/api/rimbu/stream/custom/RandomIntIterator/class","docId":"rimbu_stream/custom/RandomIntIterator.class"},{"type":"link","label":"RandomIterator","href":"/api/rimbu/stream/custom/RandomIterator/class","docId":"rimbu_stream/custom/RandomIterator.class"},{"type":"link","label":"RangeDownIterator","href":"/api/rimbu/stream/custom/RangeDownIterator/class","docId":"rimbu_stream/custom/RangeDownIterator.class"},{"type":"link","label":"RangeStream","href":"/api/rimbu/stream/custom/RangeStream/class","docId":"rimbu_stream/custom/RangeStream.class"},{"type":"link","label":"RangeUpIterator","href":"/api/rimbu/stream/custom/RangeUpIterator/class","docId":"rimbu_stream/custom/RangeUpIterator.class"},{"type":"link","label":"ReduceAllIterator<I,R>","href":"/api/rimbu/stream/custom/ReduceAllIterator/class","docId":"rimbu_stream/custom/ReduceAllIterator.class"},{"type":"link","label":"ReduceIterator<I,R>","href":"/api/rimbu/stream/custom/ReduceIterator/class","docId":"rimbu_stream/custom/ReduceIterator.class"},{"type":"link","label":"RepeatIterator<T>","href":"/api/rimbu/stream/custom/RepeatIterator/class","docId":"rimbu_stream/custom/RepeatIterator.class"},{"type":"link","label":"SplitOnIterator<T>","href":"/api/rimbu/stream/custom/SplitOnIterator/class","docId":"rimbu_stream/custom/SplitOnIterator.class"},{"type":"link","label":"SplitWhereIterator<T>","href":"/api/rimbu/stream/custom/SplitWhereIterator/class","docId":"rimbu_stream/custom/SplitWhereIterator.class"},{"type":"link","label":"StreamBase<T>","href":"/api/rimbu/stream/custom/StreamBase/class","docId":"rimbu_stream/custom/StreamBase.class"},{"type":"link","label":"StreamConstructors","href":"/api/rimbu/stream/custom/StreamConstructors/interface","docId":"rimbu_stream/custom/StreamConstructors.interface"},{"type":"link","label":"StreamConstructorsImpl","href":"/api/rimbu/stream/StreamConstructorsImpl/var","docId":"rimbu_stream/custom/StreamConstructorsImpl.var"},{"type":"link","label":"TakeIterator<T>","href":"/api/rimbu/stream/custom/TakeIterator/class","docId":"rimbu_stream/custom/TakeIterator.class"},{"type":"link","label":"TakeWhileIterator<T>","href":"/api/rimbu/stream/custom/TakeWhileIterator/class","docId":"rimbu_stream/custom/TakeWhileIterator.class"},{"type":"link","label":"UnfoldIterator<T>","href":"/api/rimbu/stream/custom/UnfoldIterator/class","docId":"rimbu_stream/custom/UnfoldIterator.class"},{"type":"link","label":"ZipAllWithItererator<I,F,R>","href":"/api/rimbu/stream/custom/ZipAllWithItererator/class","docId":"rimbu_stream/custom/ZipAllWithItererator.class"},{"type":"link","label":"ZipWithIterator<I,R>","href":"/api/rimbu/stream/custom/ZipWithIterator/class","docId":"rimbu_stream/custom/ZipWithIterator.class"},{"type":"link","label":"emptyFastIterator","href":"/api/rimbu/stream/emptyFastIterator/var","docId":"rimbu_stream/custom/emptyFastIterator.var"},{"type":"link","label":"emptyStream","href":"/api/rimbu/stream/emptyStream/var","docId":"rimbu_stream/custom/emptyStream.var"},{"type":"link","label":"fixedDoneIteratorResult","href":"/api/rimbu/stream/fixedDoneIteratorResult/var","docId":"rimbu_stream/custom/fixedDoneIteratorResult.var"},{"type":"link","label":"fromStreamSource","href":"/api/rimbu/stream/fromStreamSource/var","docId":"rimbu_stream/custom/fromStreamSource.var"}],"href":"/api/rimbu/stream/custom"}],"href":"/api/rimbu/stream"},{"type":"category","label":"@rimbu/table","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"HashTableHashColumn (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashTableHashColumn.Builder<R,C,V>","href":"/api/rimbu/table/HashTableHashColumn/Builder/interface","docId":"rimbu_table/HashTableHashColumn/Builder.interface"},{"type":"link","label":"HashTableHashColumn.Context<UR,UC>","href":"/api/rimbu/table/HashTableHashColumn/Context/interface","docId":"rimbu_table/HashTableHashColumn/Context.interface"},{"type":"link","label":"HashTableHashColumn.NonEmpty<R,C,V>","href":"/api/rimbu/table/HashTableHashColumn/NonEmpty/interface","docId":"rimbu_table/HashTableHashColumn/NonEmpty.interface"},{"type":"link","label":"HashTableHashColumn.Types","href":"/api/rimbu/table/HashTableHashColumn/Types/interface","docId":"rimbu_table/HashTableHashColumn/Types.interface"}],"href":"/api/rimbu/table/HashTableHashColumn/namespace"},{"type":"link","label":"HashTableHashColumn<R,C,V>","href":"/api/rimbu/table/HashTableHashColumn/interface","docId":"rimbu_table/HashTableHashColumn.interface"},{"type":"category","label":"HashTableSortedColumn (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashTableSortedColumn.Builder<R,C,V>","href":"/api/rimbu/table/HashTableSortedColumn/Builder/interface","docId":"rimbu_table/HashTableSortedColumn/Builder.interface"},{"type":"link","label":"HashTableSortedColumn.Context<UR,UC>","href":"/api/rimbu/table/HashTableSortedColumn/Context/interface","docId":"rimbu_table/HashTableSortedColumn/Context.interface"},{"type":"link","label":"HashTableSortedColumn.NonEmpty<R,C,V>","href":"/api/rimbu/table/HashTableSortedColumn/NonEmpty/interface","docId":"rimbu_table/HashTableSortedColumn/NonEmpty.interface"},{"type":"link","label":"HashTableSortedColumn.Types","href":"/api/rimbu/table/HashTableSortedColumn/Types/interface","docId":"rimbu_table/HashTableSortedColumn/Types.interface"}],"href":"/api/rimbu/table/HashTableSortedColumn/namespace"},{"type":"link","label":"HashTableSortedColumn<R,C,V>","href":"/api/rimbu/table/HashTableSortedColumn/interface","docId":"rimbu_table/HashTableSortedColumn.interface"},{"type":"category","label":"SortedTableHashColumn (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedTableHashColumn.Builder<R,C,V>","href":"/api/rimbu/table/SortedTableHashColumn/Builder/interface","docId":"rimbu_table/SortedTableHashColumn/Builder.interface"},{"type":"link","label":"SortedTableHashColumn.Context<UR,UC>","href":"/api/rimbu/table/SortedTableHashColumn/Context/interface","docId":"rimbu_table/SortedTableHashColumn/Context.interface"},{"type":"link","label":"SortedTableHashColumn.NonEmpty<R,C,V>","href":"/api/rimbu/table/SortedTableHashColumn/NonEmpty/interface","docId":"rimbu_table/SortedTableHashColumn/NonEmpty.interface"},{"type":"link","label":"SortedTableHashColumn.Types","href":"/api/rimbu/table/SortedTableHashColumn/Types/interface","docId":"rimbu_table/SortedTableHashColumn/Types.interface"}],"href":"/api/rimbu/table/SortedTableHashColumn/namespace"},{"type":"link","label":"SortedTableHashColumn<R,C,V>","href":"/api/rimbu/table/SortedTableHashColumn/interface","docId":"rimbu_table/SortedTableHashColumn.interface"},{"type":"category","label":"SortedTableSortedColumn (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedTableSortedColumn.Builder<R,C,V>","href":"/api/rimbu/table/SortedTableSortedColumn/Builder/interface","docId":"rimbu_table/SortedTableSortedColumn/Builder.interface"},{"type":"link","label":"SortedTableSortedColumn.Context<UR,UC>","href":"/api/rimbu/table/SortedTableSortedColumn/Context/interface","docId":"rimbu_table/SortedTableSortedColumn/Context.interface"},{"type":"link","label":"SortedTableSortedColumn.NonEmpty<R,C,V>","href":"/api/rimbu/table/SortedTableSortedColumn/NonEmpty/interface","docId":"rimbu_table/SortedTableSortedColumn/NonEmpty.interface"},{"type":"link","label":"SortedTableSortedColumn.Types","href":"/api/rimbu/table/SortedTableSortedColumn/Types/interface","docId":"rimbu_table/SortedTableSortedColumn/Types.interface"}],"href":"/api/rimbu/table/SortedTableSortedColumn/namespace"},{"type":"link","label":"SortedTableSortedColumn<R,C,V>","href":"/api/rimbu/table/SortedTableSortedColumn/interface","docId":"rimbu_table/SortedTableSortedColumn.interface"},{"type":"category","label":"Table (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Table.Builder<R,C,V>","href":"/api/rimbu/table/Table/Builder/interface","docId":"rimbu_table/Table/Builder.interface"},{"type":"link","label":"Table.Context<UR,UC>","href":"/api/rimbu/table/Table/Context/interface","docId":"rimbu_table/Table/Context.interface"},{"type":"link","label":"Table.NonEmpty<R,C,V>","href":"/api/rimbu/table/Table/NonEmpty/interface","docId":"rimbu_table/Table/NonEmpty.interface"},{"type":"link","label":"Table.Types","href":"/api/rimbu/table/Table/Types/interface","docId":"rimbu_table/Table/Types.interface"}],"href":"/api/rimbu/table/Table/namespace"},{"type":"link","label":"Table<R,C,V>","href":"/api/rimbu/table/Table/interface","docId":"rimbu_table/Table.interface"},{"type":"category","label":"VariantTable (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantTable.NonEmpty<R,C,V>","href":"/api/rimbu/table/VariantTable/NonEmpty/interface","docId":"rimbu_table/VariantTable/NonEmpty.interface"},{"type":"link","label":"VariantTable.Types","href":"/api/rimbu/table/VariantTable/Types/interface","docId":"rimbu_table/VariantTable/Types.interface"}],"href":"/api/rimbu/table/VariantTable/namespace"},{"type":"link","label":"VariantTable<R,C,V>","href":"/api/rimbu/table/VariantTable/interface","docId":"rimbu_table/VariantTable.interface"},{"type":"category","label":"@rimbu/table/custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ContextImplTypes","href":"/api/rimbu/table/custom/ContextImplTypes/interface","docId":"rimbu_table/custom/ContextImplTypes.interface"},{"type":"link","label":"HashTableHashColumnCreators","href":"/api/rimbu/table/custom/HashTableHashColumnCreators/interface","docId":"rimbu_table/custom/HashTableHashColumnCreators.interface"},{"type":"link","label":"HashTableSortedColumnCreators","href":"/api/rimbu/table/custom/HashTableSortedColumnCreators/interface","docId":"rimbu_table/custom/HashTableSortedColumnCreators.interface"},{"type":"link","label":"SortedTableHashColumnCreators","href":"/api/rimbu/table/custom/SortedTableHashColumnCreators/interface","docId":"rimbu_table/custom/SortedTableHashColumnCreators.interface"},{"type":"link","label":"SortedTableSortedColumnCreators","href":"/api/rimbu/table/custom/SortedTableSortedColumnCreators/interface","docId":"rimbu_table/custom/SortedTableSortedColumnCreators.interface"},{"type":"category","label":"TableBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"TableBase.Builder<R,C,V,Tp>","href":"/api/rimbu/table/custom/TableBase/Builder/interface","docId":"rimbu_table/custom/TableBase/Builder.interface"},{"type":"link","label":"TableBase.Context<UR,UC,Tp>","href":"/api/rimbu/table/custom/TableBase/Context/interface","docId":"rimbu_table/custom/TableBase/Context.interface"},{"type":"link","label":"TableBase.Factory<Tp,UR,UC>","href":"/api/rimbu/table/custom/TableBase/Factory/interface","docId":"rimbu_table/custom/TableBase/Factory.interface"},{"type":"link","label":"TableBase.NonEmpty<R,C,V,Tp>","href":"/api/rimbu/table/custom/TableBase/NonEmpty/interface","docId":"rimbu_table/custom/TableBase/NonEmpty.interface"},{"type":"link","label":"TableBase.Types","href":"/api/rimbu/table/custom/TableBase/Types/interface","docId":"rimbu_table/custom/TableBase/Types.interface"}],"href":"/api/rimbu/table/custom/TableBase/namespace"},{"type":"link","label":"TableBase<R,C,V,Tp>","href":"/api/rimbu/table/custom/TableBase/interface","docId":"rimbu_table/custom/TableBase.interface"},{"type":"link","label":"TableBuilder<R,C,V,Tp,TpR>","href":"/api/rimbu/table/custom/TableBuilder/class","docId":"rimbu_table/custom/TableBuilder.class"},{"type":"link","label":"TableContext<UR,UC,N,Tp>","href":"/api/rimbu/table/custom/TableContext/class","docId":"rimbu_table/custom/TableContext.class"},{"type":"link","label":"TableEmpty<R,C,V,Tp>","href":"/api/rimbu/table/custom/TableEmpty/class","docId":"rimbu_table/custom/TableEmpty.class"},{"type":"link","label":"TableNonEmpty<R,C,V,Tp,TpR>","href":"/api/rimbu/table/custom/TableNonEmpty/class","docId":"rimbu_table/custom/TableNonEmpty.class"},{"type":"category","label":"VariantTableBase (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"VariantTableBase.NonEmpty<R,C,V,Tp>","href":"/api/rimbu/table/custom/VariantTableBase/NonEmpty/interface","docId":"rimbu_table/custom/VariantTableBase/NonEmpty.interface"},{"type":"link","label":"VariantTableBase.Types","href":"/api/rimbu/table/custom/VariantTableBase/Types/interface","docId":"rimbu_table/custom/VariantTableBase/Types.interface"}],"href":"/api/rimbu/table/custom/VariantTableBase/namespace"},{"type":"link","label":"VariantTableBase<R,C,V,Tp>","href":"/api/rimbu/table/custom/VariantTableBase/interface","docId":"rimbu_table/custom/VariantTableBase.interface"}],"href":"/api/rimbu/table/custom"},{"type":"category","label":"@rimbu/table/hash-row","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"HashTableHashColumn (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashTableHashColumn.Builder<R,C,V>","href":"/api/rimbu/table/hash-row/HashTableHashColumn/Builder/interface","docId":"rimbu_table/hash-row/HashTableHashColumn/Builder.interface"},{"type":"link","label":"HashTableHashColumn.Context<UR,UC>","href":"/api/rimbu/table/hash-row/HashTableHashColumn/Context/interface","docId":"rimbu_table/hash-row/HashTableHashColumn/Context.interface"},{"type":"link","label":"HashTableHashColumn.NonEmpty<R,C,V>","href":"/api/rimbu/table/hash-row/HashTableHashColumn/NonEmpty/interface","docId":"rimbu_table/hash-row/HashTableHashColumn/NonEmpty.interface"},{"type":"link","label":"HashTableHashColumn.Types","href":"/api/rimbu/table/hash-row/HashTableHashColumn/Types/interface","docId":"rimbu_table/hash-row/HashTableHashColumn/Types.interface"}],"href":"/api/rimbu/table/hash-row/HashTableHashColumn/namespace"},{"type":"link","label":"HashTableHashColumn<R,C,V>","href":"/api/rimbu/table/hash-row/HashTableHashColumn/interface","docId":"rimbu_table/hash-row/HashTableHashColumn.interface"},{"type":"category","label":"HashTableSortedColumn (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashTableSortedColumn.Builder<R,C,V>","href":"/api/rimbu/table/hash-row/HashTableSortedColumn/Builder/interface","docId":"rimbu_table/hash-row/HashTableSortedColumn/Builder.interface"},{"type":"link","label":"HashTableSortedColumn.Context<UR,UC>","href":"/api/rimbu/table/hash-row/HashTableSortedColumn/Context/interface","docId":"rimbu_table/hash-row/HashTableSortedColumn/Context.interface"},{"type":"link","label":"HashTableSortedColumn.NonEmpty<R,C,V>","href":"/api/rimbu/table/hash-row/HashTableSortedColumn/NonEmpty/interface","docId":"rimbu_table/hash-row/HashTableSortedColumn/NonEmpty.interface"},{"type":"link","label":"HashTableSortedColumn.Types","href":"/api/rimbu/table/hash-row/HashTableSortedColumn/Types/interface","docId":"rimbu_table/hash-row/HashTableSortedColumn/Types.interface"}],"href":"/api/rimbu/table/hash-row/HashTableSortedColumn/namespace"},{"type":"link","label":"HashTableSortedColumn<R,C,V>","href":"/api/rimbu/table/hash-row/HashTableSortedColumn/interface","docId":"rimbu_table/hash-row/HashTableSortedColumn.interface"}],"href":"/api/rimbu/table/hash-row"},{"type":"category","label":"@rimbu/table/sorted-row","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"SortedTableHashColumn (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedTableHashColumn.Builder<R,C,V>","href":"/api/rimbu/table/sorted-row/SortedTableHashColumn/Builder/interface","docId":"rimbu_table/sorted-row/SortedTableHashColumn/Builder.interface"},{"type":"link","label":"SortedTableHashColumn.Context<UR,UC>","href":"/api/rimbu/table/sorted-row/SortedTableHashColumn/Context/interface","docId":"rimbu_table/sorted-row/SortedTableHashColumn/Context.interface"},{"type":"link","label":"SortedTableHashColumn.NonEmpty<R,C,V>","href":"/api/rimbu/table/sorted-row/SortedTableHashColumn/NonEmpty/interface","docId":"rimbu_table/sorted-row/SortedTableHashColumn/NonEmpty.interface"},{"type":"link","label":"SortedTableHashColumn.Types","href":"/api/rimbu/table/sorted-row/SortedTableHashColumn/Types/interface","docId":"rimbu_table/sorted-row/SortedTableHashColumn/Types.interface"}],"href":"/api/rimbu/table/sorted-row/SortedTableHashColumn/namespace"},{"type":"link","label":"SortedTableHashColumn<R,C,V>","href":"/api/rimbu/table/sorted-row/SortedTableHashColumn/interface","docId":"rimbu_table/sorted-row/SortedTableHashColumn.interface"},{"type":"category","label":"SortedTableSortedColumn (namespace)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SortedTableSortedColumn.Builder<R,C,V>","href":"/api/rimbu/table/sorted-row/SortedTableSortedColumn/Builder/interface","docId":"rimbu_table/sorted-row/SortedTableSortedColumn/Builder.interface"},{"type":"link","label":"SortedTableSortedColumn.Context<UR,UC>","href":"/api/rimbu/table/sorted-row/SortedTableSortedColumn/Context/interface","docId":"rimbu_table/sorted-row/SortedTableSortedColumn/Context.interface"},{"type":"link","label":"SortedTableSortedColumn.NonEmpty<R,C,V>","href":"/api/rimbu/table/sorted-row/SortedTableSortedColumn/NonEmpty/interface","docId":"rimbu_table/sorted-row/SortedTableSortedColumn/NonEmpty.interface"},{"type":"link","label":"SortedTableSortedColumn.Types","href":"/api/rimbu/table/sorted-row/SortedTableSortedColumn/Types/interface","docId":"rimbu_table/sorted-row/SortedTableSortedColumn/Types.interface"}],"href":"/api/rimbu/table/sorted-row/SortedTableSortedColumn/namespace"},{"type":"link","label":"SortedTableSortedColumn<R,C,V>","href":"/api/rimbu/table/sorted-row/SortedTableSortedColumn/interface","docId":"rimbu_table/sorted-row/SortedTableSortedColumn.interface"}],"href":"/api/rimbu/table/sorted-row"}],"href":"/api/rimbu/table"}]},"docs":{"index":{"id":"index","title":"Rimbu API Docs","description":"Welcome to the Rimbu API documentation! Here you will find extensive and navigable documentation for all the collection packages. All collections can be imported directly through sub-packages,","sidebar":"defaultSidebar"},"rimbu_bimap/BiMap.interface":{"id":"rimbu_bimap/BiMap.interface","title":"BiMap<K,V>","description":"A type-invariant immutable bi-directional Map where keys and values have a one-to-one mapping. See the BiMap documentation and the BiMap API documentation","sidebar":"defaultSidebar"},"rimbu_bimap/BiMap/Builder.interface":{"id":"rimbu_bimap/BiMap/Builder.interface","title":"BiMap.Builder<K,V>","description":"A mutable BiMap builder used to efficiently create new immutable instances. See the BiMap documentation and the BiMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_bimap/BiMap/Context.interface":{"id":"rimbu_bimap/BiMap/Context.interface","title":"BiMap.Context<UK,UV,Tp>","description":"The BiMap\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_bimap/BiMap/index":{"id":"rimbu_bimap/BiMap/index","title":"BiMap (namespace)","description":"A type-invariant immutable bi-directional Map where keys and values have a one-to-one mapping. See the BiMap documentation and the BiMap API documentation","sidebar":"defaultSidebar"},"rimbu_bimap/BiMap/NonEmpty.interface":{"id":"rimbu_bimap/BiMap/NonEmpty.interface","title":"BiMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable bi-directional Map where keys and values have a one-to-one mapping. See the BiMap documentation and the BiMap API documentation *","sidebar":"defaultSidebar"},"rimbu_bimap/BiMap/Types.interface":{"id":"rimbu_bimap/BiMap/Types.interface","title":"BiMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_bimap/custom/BiMapBuilder.class":{"id":"rimbu_bimap/custom/BiMapBuilder.class","title":"BiMapBuilder<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimap/custom/BiMapContext.class":{"id":"rimbu_bimap/custom/BiMapContext.class","title":"BiMapContext<UK,UV,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimap/custom/BiMapCreators.interface":{"id":"rimbu_bimap/custom/BiMapCreators.interface","title":"BiMapCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimap/custom/BiMapEmpty.class":{"id":"rimbu_bimap/custom/BiMapEmpty.class","title":"BiMapEmpty<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimap/custom/BiMapFactory.interface":{"id":"rimbu_bimap/custom/BiMapFactory.interface","title":"BiMapFactory<UK,UV>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimap/custom/BiMapNonEmptyImpl.class":{"id":"rimbu_bimap/custom/BiMapNonEmptyImpl.class","title":"BiMapNonEmptyImpl<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimap/custom/index":{"id":"rimbu_bimap/custom/index","title":"@rimbu/bimap/custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimap/index":{"id":"rimbu_bimap/index","title":"@rimbu/bimap","description":"The @rimbu/bimap package provides BiMap implementations.","sidebar":"defaultSidebar"},"rimbu_bimultimap/BiMultiMap.interface":{"id":"rimbu_bimultimap/BiMultiMap.interface","title":"BiMultiMap<K,V>","description":"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. See the BiMultiMap documentation and the BiMultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_bimultimap/BiMultiMap/Builder.interface":{"id":"rimbu_bimultimap/BiMultiMap/Builder.interface","title":"BiMultiMap.Builder<K,V>","description":"A mutable BiMultiMap builder used to efficiently create new immutable instances. See the BiMultiMap documentation and the BiMultiMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_bimultimap/BiMultiMap/Context.interface":{"id":"rimbu_bimultimap/BiMultiMap/Context.interface","title":"BiMultiMap.Context<UK,UV>","description":"The BiMultiMap\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_bimultimap/BiMultiMap/index":{"id":"rimbu_bimultimap/BiMultiMap/index","title":"BiMultiMap (namespace)","description":"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. See the BiMultiMap documentation and the BiMultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_bimultimap/BiMultiMap/NonEmpty.interface":{"id":"rimbu_bimultimap/BiMultiMap/NonEmpty.interface","title":"BiMultiMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. See the BiMultiMap documentation and the BiMultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_bimultimap/BiMultiMap/Types.interface":{"id":"rimbu_bimultimap/BiMultiMap/Types.interface","title":"BiMultiMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapBase.interface":{"id":"rimbu_bimultimap/custom/BiMultiMapBase.interface","title":"BiMultiMapBase<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapBase/Builder.interface":{"id":"rimbu_bimultimap/custom/BiMultiMapBase/Builder.interface","title":"BiMultiMapBase.Builder<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapBase/Context.interface":{"id":"rimbu_bimultimap/custom/BiMultiMapBase/Context.interface","title":"BiMultiMapBase.Context<UK,UV,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapBase/Factory.interface":{"id":"rimbu_bimultimap/custom/BiMultiMapBase/Factory.interface","title":"BiMultiMapBase.Factory<UK,UV,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapBase/index":{"id":"rimbu_bimultimap/custom/BiMultiMapBase/index","title":"BiMultiMapBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapBase/NonEmpty.interface":{"id":"rimbu_bimultimap/custom/BiMultiMapBase/NonEmpty.interface","title":"BiMultiMapBase.NonEmpty<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapBase/Types.interface":{"id":"rimbu_bimultimap/custom/BiMultiMapBase/Types.interface","title":"BiMultiMapBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapBuilder.class":{"id":"rimbu_bimultimap/custom/BiMultiMapBuilder.class","title":"BiMultiMapBuilder<K,V,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapContext.class":{"id":"rimbu_bimultimap/custom/BiMultiMapContext.class","title":"BiMultiMapContext<UK,UV,N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapEmpty.class":{"id":"rimbu_bimultimap/custom/BiMultiMapEmpty.class","title":"BiMultiMapEmpty<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapGeneric/Creators.interface":{"id":"rimbu_bimultimap/custom/BiMultiMapGeneric/Creators.interface","title":"BiMultiMapGeneric.Creators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapGeneric/index":{"id":"rimbu_bimultimap/custom/BiMultiMapGeneric/index","title":"BiMultiMapGeneric (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapHashed/Creators.interface":{"id":"rimbu_bimultimap/custom/BiMultiMapHashed/Creators.interface","title":"BiMultiMapHashed.Creators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapHashed/index":{"id":"rimbu_bimultimap/custom/BiMultiMapHashed/index","title":"BiMultiMapHashed (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapNonEmpty.class":{"id":"rimbu_bimultimap/custom/BiMultiMapNonEmpty.class","title":"BiMultiMapNonEmpty<K,V,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapSorted/Creators.interface":{"id":"rimbu_bimultimap/custom/BiMultiMapSorted/Creators.interface","title":"BiMultiMapSorted.Creators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/BiMultiMapSorted/index":{"id":"rimbu_bimultimap/custom/BiMultiMapSorted/index","title":"BiMultiMapSorted (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/ContextTypesImpl.interface":{"id":"rimbu_bimultimap/custom/ContextTypesImpl.interface","title":"ContextTypesImpl","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/custom/index":{"id":"rimbu_bimultimap/custom/index","title":"@rimbu/bimultimap/custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_bimultimap/HashBiMultiMap.interface":{"id":"rimbu_bimultimap/HashBiMultiMap.interface","title":"HashBiMultiMap<K,V>","description":"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are hashed. See the BiMultiMap documentation and the HashBiMultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_bimultimap/HashBiMultiMap/Builder.interface":{"id":"rimbu_bimultimap/HashBiMultiMap/Builder.interface","title":"HashBiMultiMap.Builder<K,V>","description":"A mutable HashBiMultiMap builder used to efficiently create new immutable instances. See the BiMultiMap documentation and the HashBiMultiMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_bimultimap/HashBiMultiMap/Context.interface":{"id":"rimbu_bimultimap/HashBiMultiMap/Context.interface","title":"HashBiMultiMap.Context<UK,UV>","description":"The HashBiMultiMap\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_bimultimap/HashBiMultiMap/index":{"id":"rimbu_bimultimap/HashBiMultiMap/index","title":"HashBiMultiMap (namespace)","description":"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are hashed. See the BiMultiMap documentation and the HashBiMultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_bimultimap/HashBiMultiMap/NonEmpty.interface":{"id":"rimbu_bimultimap/HashBiMultiMap/NonEmpty.interface","title":"HashBiMultiMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are hashed. See the BiMultiMap documentation and the HashBiMultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_bimultimap/HashBiMultiMap/Types.interface":{"id":"rimbu_bimultimap/HashBiMultiMap/Types.interface","title":"HashBiMultiMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_bimultimap/index":{"id":"rimbu_bimultimap/index","title":"@rimbu/bimultimap","description":"The @rimbu/bimultimap package provides BiMultiMap implementations.","sidebar":"defaultSidebar"},"rimbu_bimultimap/SortedBiMultiMap.interface":{"id":"rimbu_bimultimap/SortedBiMultiMap.interface","title":"SortedBiMultiMap<K,V>","description":"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are sorted. See the BiMultiMap documentation and the HashBiMultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_bimultimap/SortedBiMultiMap/Builder.interface":{"id":"rimbu_bimultimap/SortedBiMultiMap/Builder.interface","title":"SortedBiMultiMap.Builder<K,V>","description":"A mutable SortedBiMultiMap builder used to efficiently create new immutable instances. See the BiMultiMap documentation and the HashBiMultiMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_bimultimap/SortedBiMultiMap/Context.interface":{"id":"rimbu_bimultimap/SortedBiMultiMap/Context.interface","title":"SortedBiMultiMap.Context<UK,UV>","description":"The SortedBiMultiMap\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_bimultimap/SortedBiMultiMap/index":{"id":"rimbu_bimultimap/SortedBiMultiMap/index","title":"SortedBiMultiMap (namespace)","description":"A type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are sorted. See the BiMultiMap documentation and the HashBiMultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_bimultimap/SortedBiMultiMap/NonEmpty.interface":{"id":"rimbu_bimultimap/SortedBiMultiMap/NonEmpty.interface","title":"SortedBiMultiMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable bi-directional MultiMap where keys and values have a many-to-many mapping. Its keys and values are sorted. See the BiMultiMap documentation and the HashBiMultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_bimultimap/SortedBiMultiMap/Types.interface":{"id":"rimbu_bimultimap/SortedBiMultiMap/Types.interface","title":"SortedBiMultiMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_collection-types/index":{"id":"rimbu_collection-types/index","title":"@rimbu/collection-types","description":"The @rimbu/collection-types package is a convenience package that exports everything from the following sub-packages:","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/Elem.interface":{"id":"rimbu_collection-types/map-custom/Elem.interface","title":"Elem<T>","description":"A higher-kind utility type providing access to the element type T.","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/EmptyBase.class":{"id":"rimbu_collection-types/map-custom/EmptyBase.class","title":"EmptyBase","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/index":{"id":"rimbu_collection-types/map-custom/index","title":"@rimbu/collection-types/map-custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/KeyValue.interface":{"id":"rimbu_collection-types/map-custom/KeyValue.interface","title":"KeyValue<K,V>","description":"A higher-kind utility type providing access to a key type K and value type V.","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/NonEmptyBase.class":{"id":"rimbu_collection-types/map-custom/NonEmptyBase.class","title":"NonEmptyBase<E>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/RMapBase.interface":{"id":"rimbu_collection-types/map-custom/RMapBase.interface","title":"RMapBase<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/RMapBase/Builder.interface":{"id":"rimbu_collection-types/map-custom/RMapBase/Builder.interface","title":"RMapBase.Builder<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/RMapBase/Context.interface":{"id":"rimbu_collection-types/map-custom/RMapBase/Context.interface","title":"RMapBase.Context<UK,Tp>","description":"The map\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/RMapBase/ContextBase.class":{"id":"rimbu_collection-types/map-custom/RMapBase/ContextBase.class","title":"ContextBase<UK,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/RMapBase/Factory.interface":{"id":"rimbu_collection-types/map-custom/RMapBase/Factory.interface","title":"RMapBase.Factory<Tp,UK>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/RMapBase/index":{"id":"rimbu_collection-types/map-custom/RMapBase/index","title":"RMapBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/RMapBase/NonEmpty.interface":{"id":"rimbu_collection-types/map-custom/RMapBase/NonEmpty.interface","title":"RMapBase.NonEmpty<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/RMapBase/Types.interface":{"id":"rimbu_collection-types/map-custom/RMapBase/Types.interface","title":"RMapBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/RMapBase/Update.type":{"id":"rimbu_collection-types/map-custom/RMapBase/Update.type","title":"Update","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/Row.interface":{"id":"rimbu_collection-types/map-custom/Row.interface","title":"Row<R,C,V>","description":"A higher-kind utility type providing access to a row type R, a column type C, and a value type V.","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/VariantMapBase.interface":{"id":"rimbu_collection-types/map-custom/VariantMapBase.interface","title":"VariantMapBase<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/VariantMapBase/index":{"id":"rimbu_collection-types/map-custom/VariantMapBase/index","title":"VariantMapBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/VariantMapBase/NonEmpty.interface":{"id":"rimbu_collection-types/map-custom/VariantMapBase/NonEmpty.interface","title":"VariantMapBase.NonEmpty<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/VariantMapBase/Types.interface":{"id":"rimbu_collection-types/map-custom/VariantMapBase/Types.interface","title":"VariantMapBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/WithElem.type":{"id":"rimbu_collection-types/map-custom/WithElem.type","title":"WithElem","description":"A utility type to set the element type to given type T.","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/WithKeyValue.type":{"id":"rimbu_collection-types/map-custom/WithKeyValue.type","title":"WithKeyValue","description":"A utility type to set the key type to given type K, and the value type to given type V.","sidebar":"defaultSidebar"},"rimbu_collection-types/map-custom/WithRow.type":{"id":"rimbu_collection-types/map-custom/WithRow.type","title":"WithRow","description":"A utility type to set the row type to given type R, the column type to given type C, and the value type to given type V.","sidebar":"defaultSidebar"},"rimbu_collection-types/map/index":{"id":"rimbu_collection-types/map/index","title":"@rimbu/collection-types/map","description":"The @rimbu/collection-types/map package provides interfaces for the variant VariantMap and generic RMap types.","sidebar":"defaultSidebar"},"rimbu_collection-types/map/RMap.interface":{"id":"rimbu_collection-types/map/RMap.interface","title":"RMap<K,V>","description":"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the RMap API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/map/RMap/Builder.interface":{"id":"rimbu_collection-types/map/RMap/Builder.interface","title":"RMap.Builder<K,V>","description":"A mutable RMap builder used to efficiently create new immutable instances. See the Map documentation and the RMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/map/RMap/Context.interface":{"id":"rimbu_collection-types/map/RMap/Context.interface","title":"RMap.Context<UK>","description":"A context instance for RMap implementations that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_collection-types/map/RMap/index":{"id":"rimbu_collection-types/map/RMap/index","title":"RMap (namespace)","description":"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the RMap API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/map/RMap/NonEmpty.interface":{"id":"rimbu_collection-types/map/RMap/NonEmpty.interface","title":"RMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the RMap API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/map/RMap/Types.interface":{"id":"rimbu_collection-types/map/RMap/Types.interface","title":"RMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_collection-types/map/VariantMap.interface":{"id":"rimbu_collection-types/map/VariantMap.interface","title":"VariantMap<K,V>","description":"A type-variant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the VariantMap API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/map/VariantMap/index":{"id":"rimbu_collection-types/map/VariantMap/index","title":"VariantMap (namespace)","description":"A type-variant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the VariantMap API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/map/VariantMap/NonEmpty.interface":{"id":"rimbu_collection-types/map/VariantMap/NonEmpty.interface","title":"VariantMap.NonEmpty<K,V>","description":"A non-empty type-variant Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the VariantMap API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/map/VariantMap/Types.interface":{"id":"rimbu_collection-types/map/VariantMap/Types.interface","title":"VariantMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/Elem.interface":{"id":"rimbu_collection-types/set-custom/Elem.interface","title":"Elem<T>","description":"A higher-kind utility type providing access to the element type T.","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/EmptyBase.class":{"id":"rimbu_collection-types/set-custom/EmptyBase.class","title":"EmptyBase","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/index":{"id":"rimbu_collection-types/set-custom/index","title":"@rimbu/collection-types/set-custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/KeyValue.interface":{"id":"rimbu_collection-types/set-custom/KeyValue.interface","title":"KeyValue<K,V>","description":"A higher-kind utility type providing access to a key type K and value type V.","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/NonEmptyBase.class":{"id":"rimbu_collection-types/set-custom/NonEmptyBase.class","title":"NonEmptyBase<E>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/Row.interface":{"id":"rimbu_collection-types/set-custom/Row.interface","title":"Row<R,C,V>","description":"A higher-kind utility type providing access to a row type R, a column type C, and a value type V.","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/RSetBase.interface":{"id":"rimbu_collection-types/set-custom/RSetBase.interface","title":"RSetBase<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/RSetBase/Builder.interface":{"id":"rimbu_collection-types/set-custom/RSetBase/Builder.interface","title":"RSetBase.Builder<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/RSetBase/Context.interface":{"id":"rimbu_collection-types/set-custom/RSetBase/Context.interface","title":"RSetBase.Context<UT,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/RSetBase/ContextBase.class":{"id":"rimbu_collection-types/set-custom/RSetBase/ContextBase.class","title":"ContextBase<UT,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/RSetBase/Factory.interface":{"id":"rimbu_collection-types/set-custom/RSetBase/Factory.interface","title":"RSetBase.Factory<Tp,UT>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/RSetBase/index":{"id":"rimbu_collection-types/set-custom/RSetBase/index","title":"RSetBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/RSetBase/NonEmpty.interface":{"id":"rimbu_collection-types/set-custom/RSetBase/NonEmpty.interface","title":"RSetBase.NonEmpty<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/RSetBase/Types.interface":{"id":"rimbu_collection-types/set-custom/RSetBase/Types.interface","title":"RSetBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/VariantSetBase.interface":{"id":"rimbu_collection-types/set-custom/VariantSetBase.interface","title":"VariantSetBase<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/VariantSetBase/index":{"id":"rimbu_collection-types/set-custom/VariantSetBase/index","title":"VariantSetBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/VariantSetBase/NonEmpty.interface":{"id":"rimbu_collection-types/set-custom/VariantSetBase/NonEmpty.interface","title":"VariantSetBase.NonEmpty<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/VariantSetBase/Types.interface":{"id":"rimbu_collection-types/set-custom/VariantSetBase/Types.interface","title":"VariantSetBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/WithElem.type":{"id":"rimbu_collection-types/set-custom/WithElem.type","title":"WithElem","description":"A utility type to set the element type to given type T.","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/WithKeyValue.type":{"id":"rimbu_collection-types/set-custom/WithKeyValue.type","title":"WithKeyValue","description":"A utility type to set the key type to given type K, and the value type to given type V.","sidebar":"defaultSidebar"},"rimbu_collection-types/set-custom/WithRow.type":{"id":"rimbu_collection-types/set-custom/WithRow.type","title":"WithRow","description":"A utility type to set the row type to given type R, the column type to given type C, and the value type to given type V.","sidebar":"defaultSidebar"},"rimbu_collection-types/set/index":{"id":"rimbu_collection-types/set/index","title":"@rimbu/collection-types/set","description":"The @rimbu/collection-types/set package provides interfaces for the variant VariantSet and generic RSet types.","sidebar":"defaultSidebar"},"rimbu_collection-types/set/RSet.interface":{"id":"rimbu_collection-types/set/RSet.interface","title":"RSet<T>","description":"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the RSet API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/set/RSet/Builder.interface":{"id":"rimbu_collection-types/set/RSet/Builder.interface","title":"RSet.Builder<T>","description":"A mutable Set builder used to efficiently create new immutable instances. See the Set documentation and the RSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/set/RSet/Context.interface":{"id":"rimbu_collection-types/set/RSet/Context.interface","title":"RSet.Context<UT>","description":"A context instance for Map implementations that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_collection-types/set/RSet/index":{"id":"rimbu_collection-types/set/RSet/index","title":"RSet (namespace)","description":"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the RSet API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/set/RSet/NonEmpty.interface":{"id":"rimbu_collection-types/set/RSet/NonEmpty.interface","title":"RSet.NonEmpty<T>","description":"A non-empty type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the RSet API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/set/RSet/Types.interface":{"id":"rimbu_collection-types/set/RSet/Types.interface","title":"RSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_collection-types/set/VariantSet.interface":{"id":"rimbu_collection-types/set/VariantSet.interface","title":"VariantSet<T>","description":"A type-variant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the VariantSet API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/set/VariantSet/index":{"id":"rimbu_collection-types/set/VariantSet/index","title":"VariantSet (namespace)","description":"A type-variant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the VariantSet API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/set/VariantSet/NonEmpty.interface":{"id":"rimbu_collection-types/set/VariantSet/NonEmpty.interface","title":"VariantSet.NonEmpty<T>","description":"A non-empty type-variant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the VariantSet API documentation","sidebar":"defaultSidebar"},"rimbu_collection-types/set/VariantSet/Types.interface":{"id":"rimbu_collection-types/set/VariantSet/Types.interface","title":"VariantSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_common/ArrayNonEmpty.type":{"id":"rimbu_common/ArrayNonEmpty.type","title":"ArrayNonEmpty","description":"Accepts all arrays with at least one element.","sidebar":"defaultSidebar"},"rimbu_common/AsyncCollectFun.type":{"id":"rimbu_common/AsyncCollectFun.type","title":"AsyncCollectFun","description":"A potentially asynchronous function used in collect methods to collect values from a collection. This is basically a single-pass map and filter.","sidebar":"defaultSidebar"},"rimbu_common/AsyncOptLazy.type":{"id":"rimbu_common/AsyncOptLazy.type","title":"AsyncOptLazy","description":"A potentially lazy and/or asynchronous value of type T.","sidebar":"defaultSidebar"},"rimbu_common/AsyncOptLazy/index":{"id":"rimbu_common/AsyncOptLazy/index","title":"AsyncOptLazy (namespace)","description":"A potentially lazy and/or asynchronous value of type T."},"rimbu_common/AsyncReducer.type":{"id":"rimbu_common/AsyncReducer.type","title":"AsyncReducer","description":"An AsyncReducer is a stand-alone asynchronous calculation that takes input values of type I, and, when requested, produces an output value of type O.","sidebar":"defaultSidebar"},"rimbu_common/AsyncReducer/Base.class":{"id":"rimbu_common/AsyncReducer/Base.class","title":"Base<I,O,S>","description":"A base class that can be used to easily create AsyncReducer instances.","sidebar":"defaultSidebar"},"rimbu_common/AsyncReducer/Impl.interface":{"id":"rimbu_common/AsyncReducer/Impl.interface","title":"AsyncReducer.Impl<I,O,S>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_common/AsyncReducer/index":{"id":"rimbu_common/AsyncReducer/index","title":"AsyncReducer (namespace)","description":"An AsyncReducer is a stand-alone asynchronous calculation that takes input values of type I, and, when requested, produces an output value of type O.","sidebar":"defaultSidebar"},"rimbu_common/CollectFun.type":{"id":"rimbu_common/CollectFun.type","title":"CollectFun","description":"A function used in collect methods to collect values from a collection. This is basically a single-pass map and filter.","sidebar":"defaultSidebar"},"rimbu_common/CollectFun/index":{"id":"rimbu_common/CollectFun/index","title":"CollectFun (namespace)","description":"A function used in collect methods to collect values from a collection. This is basically a single-pass map and filter.","sidebar":"defaultSidebar"},"rimbu_common/CollectFun/Skip.type":{"id":"rimbu_common/CollectFun/Skip.type","title":"Skip","description":"Indicates, when returned from a collect function, to skip the value.","sidebar":"defaultSidebar"},"rimbu_common/CollectFun/Skip.var":{"id":"rimbu_common/CollectFun/Skip.var","title":"Skip","description":"Indicates, when returned from a collect function, to skip the value.","sidebar":"defaultSidebar"},"rimbu_common/Comp.interface":{"id":"rimbu_common/Comp.interface","title":"Comp<K>","description":"An object providing methods to compare two values of type K.","sidebar":"defaultSidebar"},"rimbu_common/Comp/index":{"id":"rimbu_common/Comp/index","title":"Comp (namespace)","description":"An object providing methods to compare two values of type K."},"rimbu_common/Eq.type":{"id":"rimbu_common/Eq.type","title":"Eq","description":"A function returning true if given v1 and v2 should be considered equal.","sidebar":"defaultSidebar"},"rimbu_common/Eq/index":{"id":"rimbu_common/Eq/index","title":"Eq (namespace)","description":"A function returning true if given v1 and v2 should be considered equal.","sidebar":"defaultSidebar"},"rimbu_common/Eq/objectIs.var":{"id":"rimbu_common/Eq/objectIs.var","title":"objectIs","description":"An Eq instance that uses Object.is to determine if two objects are equal.","sidebar":"defaultSidebar"},"rimbu_common/ErrBase/CustomError.class":{"id":"rimbu_common/ErrBase/CustomError.class","title":"CustomError","description":"A custom error instance.","sidebar":"defaultSidebar"},"rimbu_common/ErrBase/ForcedError.class":{"id":"rimbu_common/ErrBase/ForcedError.class","title":"ForcedError","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_common/ErrBase/index":{"id":"rimbu_common/ErrBase/index","title":"ErrBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_common/index":{"id":"rimbu_common/index","title":"@rimbu/common","description":"The @rimbu/common package provides many commonly used types and utilities that can also be of use to Rimbu users.","sidebar":"defaultSidebar"},"rimbu_common/IndexRange.type":{"id":"rimbu_common/IndexRange.type","title":"IndexRange","description":"A flexible range specification for numeric indices. If a start or end is defined, a tuple can be used where the second item is a boolean indicating whether that end is inclusive or exclusive.","sidebar":"defaultSidebar"},"rimbu_common/IndexRange/index":{"id":"rimbu_common/IndexRange/index","title":"IndexRange (namespace)","description":"A flexible range specification for numeric indices. If a start or end is defined, a tuple can be used where the second item is a boolean indicating whether that end is inclusive or exclusive."},"rimbu_common/MaybePromise.type":{"id":"rimbu_common/MaybePromise.type","title":"MaybePromise","description":"A type that is either a value T or a promise yielding a value of type T.","sidebar":"defaultSidebar"},"rimbu_common/OptLazy.type":{"id":"rimbu_common/OptLazy.type","title":"OptLazy","description":"A potentially lazy value of type T.","sidebar":"defaultSidebar"},"rimbu_common/OptLazyOr.type":{"id":"rimbu_common/OptLazyOr.type","title":"OptLazyOr","description":"A potentially lazy value that, in case of a lazy function, received a default value that it can return.","sidebar":"defaultSidebar"},"rimbu_common/Range.type":{"id":"rimbu_common/Range.type","title":"Range","description":"A range definition for any type of (orderable) value. If a start or end is defined, a tuple can be used where the second item is a boolean indicating whether that end is inclusive (true) or exclusive (false).","sidebar":"defaultSidebar"},"rimbu_common/Range/index":{"id":"rimbu_common/Range/index","title":"Range (namespace)","description":"A range definition for any type of (orderable) value. If a start or end is defined, a tuple can be used where the second item is a boolean indicating whether that end is inclusive (true) or exclusive (false)."},"rimbu_common/Reducer.type":{"id":"rimbu_common/Reducer.type","title":"Reducer","description":"A Reducer is a stand-alone calculation that takes input values of type I, and, when requested, produces an output value of type O.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/and.var":{"id":"rimbu_common/Reducer/and.var","title":"and","description":"Returns a Reducer that takes boolean values and outputs true if all input values are true, and false otherwise.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/average.var":{"id":"rimbu_common/Reducer/average.var","title":"average","description":"A Reducer that calculates the average of all given numberic input values.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/Base.class":{"id":"rimbu_common/Reducer/Base.class","title":"Base<I,O,S>","description":"A base class that can be used to easily create Reducer instances.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/count.var":{"id":"rimbu_common/Reducer/count.var","title":"count","description":"Returns a Reducer that remembers the amount of input items provided.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/first.var":{"id":"rimbu_common/Reducer/first.var","title":"first","description":"Returns a Reducer that remembers the first input value.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/firstWhere.var":{"id":"rimbu_common/Reducer/firstWhere.var","title":"firstWhere","description":"Returns a Reducer that remembers the first input value for which the given pred function returns true.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/Impl.interface":{"id":"rimbu_common/Reducer/Impl.interface","title":"Reducer.Impl<I,O,S>","description":"The Implementation interface for a Reducer, which also exposes the internal state type.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/index":{"id":"rimbu_common/Reducer/index","title":"Reducer (namespace)","description":"A Reducer is a stand-alone calculation that takes input values of type I, and, when requested, produces an output value of type O.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/Init.type":{"id":"rimbu_common/Reducer/Init.type","title":"Init","description":"Ensures that all non-primitive type use lazy initialization to prevent accidental instance sharing.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/isEmpty.var":{"id":"rimbu_common/Reducer/isEmpty.var","title":"isEmpty","description":"Returns a Reducer that outputs true if no input values are received, false otherwise.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/last.var":{"id":"rimbu_common/Reducer/last.var","title":"last","description":"Returns a Reducer that remembers the last input value.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/lastWhere.var":{"id":"rimbu_common/Reducer/lastWhere.var","title":"lastWhere","description":"Returns a Reducer that remembers the last input value for which the given pred function returns true.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/max.var":{"id":"rimbu_common/Reducer/max.var","title":"max","description":"Returns a Reducer that remembers the maximum value of the numberic inputs.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/maxBy.var":{"id":"rimbu_common/Reducer/maxBy.var","title":"maxBy","description":"Returns a Reducer that remembers the maximum value of the inputs using the given compFun to compare input values","sidebar":"defaultSidebar"},"rimbu_common/Reducer/min.var":{"id":"rimbu_common/Reducer/min.var","title":"min","description":"Returns a Reducer that remembers the minimum value of the numberic inputs.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/minBy.var":{"id":"rimbu_common/Reducer/minBy.var","title":"minBy","description":"Returns a Reducer that remembers the minimum value of the inputs using the given compFun to compare input values","sidebar":"defaultSidebar"},"rimbu_common/Reducer/nonEmpty.var":{"id":"rimbu_common/Reducer/nonEmpty.var","title":"nonEmpty","description":"Returns a Reducer that outputs true if one or more input values are received, false otherwise.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/or.var":{"id":"rimbu_common/Reducer/or.var","title":"or","description":"Returns a Reducer that takes boolean values and outputs true if one or more input values are true, and false otherwise.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/product.var":{"id":"rimbu_common/Reducer/product.var","title":"product","description":"A Reducer that calculates the product of all given numeric input values.","sidebar":"defaultSidebar"},"rimbu_common/Reducer/sum.var":{"id":"rimbu_common/Reducer/sum.var","title":"sum","description":"A Reducer that sums all given numeric input values.","sidebar":"defaultSidebar"},"rimbu_common/RelatedTo.type":{"id":"rimbu_common/RelatedTo.type","title":"RelatedTo","description":"Accepts all types of T and U where T extends U or U extends T.","sidebar":"defaultSidebar"},"rimbu_common/StringNonEmpty.type":{"id":"rimbu_common/StringNonEmpty.type","title":"StringNonEmpty","description":"Accepts all strings with at least one character.","sidebar":"defaultSidebar"},"rimbu_common/SubOf.type":{"id":"rimbu_common/SubOf.type","title":"SubOf","description":"Accepts all types of T and S where S extends T, and results in the lower bound S.","sidebar":"defaultSidebar"},"rimbu_common/SuperOf.type":{"id":"rimbu_common/SuperOf.type","title":"SuperOf","description":"Accepts all types of T and U where T extends U, and result in the upper bound U.","sidebar":"defaultSidebar"},"rimbu_common/ToJSON.interface":{"id":"rimbu_common/ToJSON.interface","title":"ToJSON<V,D>","description":"Utility type to convert some object to a JSON serializable format.","sidebar":"defaultSidebar"},"rimbu_common/TraverseState.interface":{"id":"rimbu_common/TraverseState.interface","title":"TraverseState","description":"An object used to track the state of a traversal, e.g. a forEach.","sidebar":"defaultSidebar"},"rimbu_common/Update.type":{"id":"rimbu_common/Update.type","title":"Update","description":"A value of type T, or a function taking a value of type T and returning a new value of type T.","sidebar":"defaultSidebar"},"rimbu_core/index":{"id":"rimbu_core/index","title":"@rimbu/core","description":"The @rimbu/core package is a convenience package that exports everything from the following packages:"},"rimbu_deep/Immutable.type":{"id":"rimbu_deep/Immutable.type","title":"Immutable","description":"An immutably typed version of given type T. Makes all properties or elements read only.","sidebar":"defaultSidebar"},"rimbu_deep/index":{"id":"rimbu_deep/index","title":"@rimbu/deep","description":"The @rimbu/deep package provides utilities to patch and match plain JavaScript objects..","sidebar":"defaultSidebar"},"rimbu_deep/Literal.interface":{"id":"rimbu_deep/Literal.interface","title":"Literal<T>","description":"Type to represent Literal values for the match and patch functions.","sidebar":"defaultSidebar"},"rimbu_deep/Literal/index":{"id":"rimbu_deep/Literal/index","title":"Literal (namespace)","description":"Type to represent Literal values for the match and patch functions.","sidebar":"defaultSidebar"},"rimbu_deep/Literal/NoIterable.interface":{"id":"rimbu_deep/Literal/NoIterable.interface","title":"Literal.NoIterable","description":"Excludes Iterable types","sidebar":"defaultSidebar"},"rimbu_deep/Literal/Obj.type":{"id":"rimbu_deep/Literal/Obj.type","title":"Obj","description":"A plain object that is not iterable","sidebar":"defaultSidebar"},"rimbu_deep/Literal/Value.type":{"id":"rimbu_deep/Literal/Value.type","title":"Value","description":"Type to determine whether a value needs to be a Literal instance or may be a Literal instance.","sidebar":"defaultSidebar"},"rimbu_deep/Match.type":{"id":"rimbu_deep/Match.type","title":"Match","description":"Type to determine the allowed input type for the match functions.","sidebar":"defaultSidebar"},"rimbu_deep/Match/Compare.type":{"id":"rimbu_deep/Match/Compare.type","title":"Compare","description":"Type representing matchers for values that are not objects or arrays","sidebar":"defaultSidebar"},"rimbu_deep/Match/index":{"id":"rimbu_deep/Match/index","title":"Match (namespace)","description":"Type to determine the allowed input type for the match functions.","sidebar":"defaultSidebar"},"rimbu_deep/Match/MatchArray.type":{"id":"rimbu_deep/Match/MatchArray.type","title":"MatchArray","description":"Type representing allowed matchers for arrays","sidebar":"defaultSidebar"},"rimbu_deep/Match/MatchObj.type":{"id":"rimbu_deep/Match/MatchObj.type","title":"MatchObj","description":"Type to determine the allowed input type for match functions given an object type T.","sidebar":"defaultSidebar"},"rimbu_deep/Match/Multi.type":{"id":"rimbu_deep/Match/Multi.type","title":"Multi","description":"Type representing at least one Match object for type T","sidebar":"defaultSidebar"},"rimbu_deep/Patch.type":{"id":"rimbu_deep/Patch.type","title":"Patch","description":"Type to determine the allowed input type for the patch function.","sidebar":"defaultSidebar"},"rimbu_deep/Patch/index":{"id":"rimbu_deep/Patch/index","title":"Patch (namespace)","description":"Type to determine the allowed input type for the patch function.","sidebar":"defaultSidebar"},"rimbu_deep/Patch/MAP.var":{"id":"rimbu_deep/Patch/MAP.var","title":"MAP","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_deep/Patch/Multi.type":{"id":"rimbu_deep/Patch/Multi.type","title":"Multi","description":"Type representing at least one Patch object for type T","sidebar":"defaultSidebar"},"rimbu_deep/Patch/PatchArray.type":{"id":"rimbu_deep/Patch/PatchArray.type","title":"PatchArray","description":"Type representing allowed patches for arrays","sidebar":"defaultSidebar"},"rimbu_deep/Patch/PatchObj.type":{"id":"rimbu_deep/Patch/PatchObj.type","title":"PatchObj","description":"Type to determine the allowed input type for the patch function given an object type T.","sidebar":"defaultSidebar"},"rimbu_deep/Patch/Update.type":{"id":"rimbu_deep/Patch/Update.type","title":"Update","description":"Type representing patches for values that are not objects or arrays","sidebar":"defaultSidebar"},"rimbu_deep/Path.type":{"id":"rimbu_deep/Path.type","title":"Path","description":"A string representing a path into an (nested) object of type T.","sidebar":"defaultSidebar"},"rimbu_deep/Path/index":{"id":"rimbu_deep/Path/index","title":"Path (namespace)","description":"A string representing a path into an (nested) object of type T.","sidebar":"defaultSidebar"},"rimbu_deep/Path/Result.type":{"id":"rimbu_deep/Path/Result.type","title":"Result","description":"The result type when selecting from object type T a path with type P.","sidebar":"defaultSidebar"},"rimbu_deep/Tuple.type":{"id":"rimbu_deep/Tuple.type","title":"Tuple","description":"A readonly array of fixed length and types.","sidebar":"defaultSidebar"},"rimbu_deep/Tuple/index":{"id":"rimbu_deep/Tuple/index","title":"Tuple (namespace)","description":"A readonly array of fixed length and types.","sidebar":"defaultSidebar"},"rimbu_deep/Tuple/NonEmptySource.type":{"id":"rimbu_deep/Tuple/NonEmptySource.type","title":"NonEmptySource","description":"A non-empty readonly array that can serve as a source for a Tuple.","sidebar":"defaultSidebar"},"rimbu_deep/Tuple/Source.type":{"id":"rimbu_deep/Tuple/Source.type","title":"Source","description":"A readonly array that can serve as a source for a Tuple.","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraph.interface":{"id":"rimbu_graph/ArrowGraph.interface","title":"ArrowGraph<N>","description":"An type-invariant immutable arrow (directed) graph. See the Graph documentation and the ArrowGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraph/Builder.interface":{"id":"rimbu_graph/ArrowGraph/Builder.interface","title":"ArrowGraph.Builder<N>","description":"A mutable ArrowGraph builder used to efficiently create new immutable instances. See the Graph documentation and the ArrowGraph.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraph/Context.interface":{"id":"rimbu_graph/ArrowGraph/Context.interface","title":"ArrowGraph.Context<UN>","description":"The ArrowGraph\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraph/index":{"id":"rimbu_graph/ArrowGraph/index","title":"ArrowGraph (namespace)","description":"An type-invariant immutable arrow (directed) graph. See the Graph documentation and the ArrowGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraph/NonEmpty.interface":{"id":"rimbu_graph/ArrowGraph/NonEmpty.interface","title":"ArrowGraph.NonEmpty<N>","description":"A non-empty type-invariant immutable arrow (directed) graph. See the Graph documentation and the ArrowGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraph/Types.interface":{"id":"rimbu_graph/ArrowGraph/Types.interface","title":"ArrowGraph.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraphHashed.interface":{"id":"rimbu_graph/ArrowGraphHashed.interface","title":"ArrowGraphHashed<N>","description":"An type-invariant immutable valued arrow (directed) graph. The connections are internally maintained using hashed collections See the Graph documentation and the ArrowGraphHashed API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraphHashed/Builder.interface":{"id":"rimbu_graph/ArrowGraphHashed/Builder.interface","title":"ArrowGraphHashed.Builder<N>","description":"A mutable ArrowGraphHashed builder used to efficiently create new immutable instances. See the Graph documentation and the ArrowGraphHashed.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraphHashed/Context.interface":{"id":"rimbu_graph/ArrowGraphHashed/Context.interface","title":"ArrowGraphHashed.Context<UN>","description":"The ArrowGraphHashed\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraphHashed/index":{"id":"rimbu_graph/ArrowGraphHashed/index","title":"ArrowGraphHashed (namespace)","description":"An type-invariant immutable valued arrow (directed) graph. The connections are internally maintained using hashed collections See the Graph documentation and the ArrowGraphHashed API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraphHashed/NonEmpty.interface":{"id":"rimbu_graph/ArrowGraphHashed/NonEmpty.interface","title":"ArrowGraphHashed.NonEmpty<N>","description":"A non-empty type-invariant immutable valued arrow (directed) graph. The connections are internally maintained using hashed collections See the Graph documentation and the ArrowGraphHashed API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraphHashed/Types.interface":{"id":"rimbu_graph/ArrowGraphHashed/Types.interface","title":"ArrowGraphHashed.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraphSorted.interface":{"id":"rimbu_graph/ArrowGraphSorted.interface","title":"ArrowGraphSorted<N>","description":"An type-invariant immutable valued arrow (directed) graph. The connections are internally maintained using sorted collections See the Graph documentation and the ArrowGraphSorted API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraphSorted/Builder.interface":{"id":"rimbu_graph/ArrowGraphSorted/Builder.interface","title":"ArrowGraphSorted.Builder<N>","description":"A mutable ArrowGraphSorted builder used to efficiently create new immutable instances. See the Graph documentation and the ArrowGraphSorted.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraphSorted/Context.interface":{"id":"rimbu_graph/ArrowGraphSorted/Context.interface","title":"ArrowGraphSorted.Context<UN>","description":"The ArrowGraphSorted\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraphSorted/index":{"id":"rimbu_graph/ArrowGraphSorted/index","title":"ArrowGraphSorted (namespace)","description":"An type-invariant immutable valued arrow (directed) graph. The connections are internally maintained using sorted collections See the Graph documentation and the ArrowGraphSorted API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraphSorted/NonEmpty.interface":{"id":"rimbu_graph/ArrowGraphSorted/NonEmpty.interface","title":"ArrowGraphSorted.NonEmpty<N>","description":"A non-empty type-invariant immutable valued arrow (directed) graph. The connections are internally maintained using sorted collections See the Graph documentation and the ArrowGraphSorted API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowGraphSorted/Types.interface":{"id":"rimbu_graph/ArrowGraphSorted/Types.interface","title":"ArrowGraphSorted.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraph.interface":{"id":"rimbu_graph/ArrowValuedGraph.interface","title":"ArrowValuedGraph<N,V>","description":"An type-invariant immutable valued arrow (directed) graph. See the Graph documentation and the ArrowValuedGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraph/Builder.interface":{"id":"rimbu_graph/ArrowValuedGraph/Builder.interface","title":"ArrowValuedGraph.Builder<N,V>","description":"A mutable ArrowValuedGraph builder used to efficiently create new immutable instances. See the Graph documentation and the ArrowValuedGraph.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraph/Context.interface":{"id":"rimbu_graph/ArrowValuedGraph/Context.interface","title":"ArrowValuedGraph.Context<UN>","description":"The ArrowValuedGraph\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraph/index":{"id":"rimbu_graph/ArrowValuedGraph/index","title":"ArrowValuedGraph (namespace)","description":"An type-invariant immutable valued arrow (directed) graph. See the Graph documentation and the ArrowValuedGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraph/NonEmpty.interface":{"id":"rimbu_graph/ArrowValuedGraph/NonEmpty.interface","title":"ArrowValuedGraph.NonEmpty<N,V>","description":"A non-empty type-invariant immutable valued arrow (directed) graph. See the Graph documentation and the ArrowValuedGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraph/Types.interface":{"id":"rimbu_graph/ArrowValuedGraph/Types.interface","title":"ArrowValuedGraph.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraphHashed.interface":{"id":"rimbu_graph/ArrowValuedGraphHashed.interface","title":"ArrowValuedGraphHashed<N,V>","description":"An type-invariant immutable valued arrow (directed) graph. The nodes are internally maintained using HashMaps See the Graph documentation and the ArrowValuedGraphHashed API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraphHashed/Builder.interface":{"id":"rimbu_graph/ArrowValuedGraphHashed/Builder.interface","title":"ArrowValuedGraphHashed.Builder<N,V>","description":"A mutable ArrowValuedGraphHashed builder used to efficiently create new immutable instances. See the Graph documentation and the ArrowValuedGraphHashed.BuilderAPI documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraphHashed/Context.interface":{"id":"rimbu_graph/ArrowValuedGraphHashed/Context.interface","title":"ArrowValuedGraphHashed.Context<UN>","description":"The ArrowValuedGraphHashed\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraphHashed/index":{"id":"rimbu_graph/ArrowValuedGraphHashed/index","title":"ArrowValuedGraphHashed (namespace)","description":"An type-invariant immutable valued arrow (directed) graph. The nodes are internally maintained using HashMaps See the Graph documentation and the ArrowValuedGraphHashed API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraphHashed/NonEmpty.interface":{"id":"rimbu_graph/ArrowValuedGraphHashed/NonEmpty.interface","title":"ArrowValuedGraphHashed.NonEmpty<N,V>","description":"A non-empty type-invariant immutable valued arrow (directed) graph. The nodes are internally maintained using HashMaps See the Graph documentation and the ArrowValuedGraphHashed API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraphHashed/Types.interface":{"id":"rimbu_graph/ArrowValuedGraphHashed/Types.interface","title":"ArrowValuedGraphHashed.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraphSorted.interface":{"id":"rimbu_graph/ArrowValuedGraphSorted.interface","title":"ArrowValuedGraphSorted<N,V>","description":"An type-invariant immutable valued arrow (directed) graph. The nodes are internally maintained using SortedMaps See the Graph documentation and the ArrowValuedGraphSorted API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraphSorted/Builder.interface":{"id":"rimbu_graph/ArrowValuedGraphSorted/Builder.interface","title":"ArrowValuedGraphSorted.Builder<N,V>","description":"A mutable ArrowValuedGraphSorted builder used to efficiently create new immutable instances. See the Graph documentation and the ArrowValuedGraphSorted.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraphSorted/Context.interface":{"id":"rimbu_graph/ArrowValuedGraphSorted/Context.interface","title":"ArrowValuedGraphSorted.Context<UN>","description":"The ArrowValuedGraphSorted\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraphSorted/index":{"id":"rimbu_graph/ArrowValuedGraphSorted/index","title":"ArrowValuedGraphSorted (namespace)","description":"An type-invariant immutable valued arrow (directed) graph. The nodes are internally maintained using SortedMaps See the Graph documentation and the ArrowValuedGraphSorted API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraphSorted/NonEmpty.interface":{"id":"rimbu_graph/ArrowValuedGraphSorted/NonEmpty.interface","title":"ArrowValuedGraphSorted.NonEmpty<N,V>","description":"A non-empty type-invariant immutable valued arrow (directed) graph. The nodes are internally maintained using SortedMaps See the Graph documentation and the ArrowValuedGraphSorted API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ArrowValuedGraphSorted/Types.interface":{"id":"rimbu_graph/ArrowValuedGraphSorted/Types.interface","title":"ArrowValuedGraphSorted.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowGraphBase.interface":{"id":"rimbu_graph/custom/ArrowGraphBase.interface","title":"ArrowGraphBase<N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowGraphBase/Builder.interface":{"id":"rimbu_graph/custom/ArrowGraphBase/Builder.interface","title":"ArrowGraphBase.Builder<N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowGraphBase/Context.interface":{"id":"rimbu_graph/custom/ArrowGraphBase/Context.interface","title":"ArrowGraphBase.Context<UN,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowGraphBase/index":{"id":"rimbu_graph/custom/ArrowGraphBase/index","title":"ArrowGraphBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowGraphBase/NonEmpty.interface":{"id":"rimbu_graph/custom/ArrowGraphBase/NonEmpty.interface","title":"ArrowGraphBase.NonEmpty<N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowGraphBase/Types.interface":{"id":"rimbu_graph/custom/ArrowGraphBase/Types.interface","title":"ArrowGraphBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowGraphHashedCreators.interface":{"id":"rimbu_graph/custom/ArrowGraphHashedCreators.interface","title":"ArrowGraphHashedCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowGraphSortedCreators.interface":{"id":"rimbu_graph/custom/ArrowGraphSortedCreators.interface","title":"ArrowGraphSortedCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowValuedGraphBase.interface":{"id":"rimbu_graph/custom/ArrowValuedGraphBase.interface","title":"ArrowValuedGraphBase<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowValuedGraphBase/Builder.interface":{"id":"rimbu_graph/custom/ArrowValuedGraphBase/Builder.interface","title":"ArrowValuedGraphBase.Builder<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowValuedGraphBase/Context.interface":{"id":"rimbu_graph/custom/ArrowValuedGraphBase/Context.interface","title":"ArrowValuedGraphBase.Context<UN,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowValuedGraphBase/index":{"id":"rimbu_graph/custom/ArrowValuedGraphBase/index","title":"ArrowValuedGraphBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowValuedGraphBase/NonEmpty.interface":{"id":"rimbu_graph/custom/ArrowValuedGraphBase/NonEmpty.interface","title":"ArrowValuedGraphBase.NonEmpty<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowValuedGraphBase/Types.interface":{"id":"rimbu_graph/custom/ArrowValuedGraphBase/Types.interface","title":"ArrowValuedGraphBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowValuedGraphHashedCreators.interface":{"id":"rimbu_graph/custom/ArrowValuedGraphHashedCreators.interface","title":"ArrowValuedGraphHashedCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ArrowValuedGraphSortedCreators.interface":{"id":"rimbu_graph/custom/ArrowValuedGraphSortedCreators.interface","title":"ArrowValuedGraphSortedCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeGraphBase.interface":{"id":"rimbu_graph/custom/EdgeGraphBase.interface","title":"EdgeGraphBase<N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeGraphBase/Builder.interface":{"id":"rimbu_graph/custom/EdgeGraphBase/Builder.interface","title":"EdgeGraphBase.Builder<N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeGraphBase/Context.interface":{"id":"rimbu_graph/custom/EdgeGraphBase/Context.interface","title":"EdgeGraphBase.Context<UN,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeGraphBase/index":{"id":"rimbu_graph/custom/EdgeGraphBase/index","title":"EdgeGraphBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeGraphBase/NonEmpty.interface":{"id":"rimbu_graph/custom/EdgeGraphBase/NonEmpty.interface","title":"EdgeGraphBase.NonEmpty<N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeGraphBase/Types.interface":{"id":"rimbu_graph/custom/EdgeGraphBase/Types.interface","title":"EdgeGraphBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeGraphHashedCreators.interface":{"id":"rimbu_graph/custom/EdgeGraphHashedCreators.interface","title":"EdgeGraphHashedCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeGraphSortedCreators.interface":{"id":"rimbu_graph/custom/EdgeGraphSortedCreators.interface","title":"EdgeGraphSortedCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeValuedGraphBase.interface":{"id":"rimbu_graph/custom/EdgeValuedGraphBase.interface","title":"EdgeValuedGraphBase<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeValuedGraphBase/Builder.interface":{"id":"rimbu_graph/custom/EdgeValuedGraphBase/Builder.interface","title":"EdgeValuedGraphBase.Builder<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeValuedGraphBase/Context.interface":{"id":"rimbu_graph/custom/EdgeValuedGraphBase/Context.interface","title":"EdgeValuedGraphBase.Context<UN,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeValuedGraphBase/index":{"id":"rimbu_graph/custom/EdgeValuedGraphBase/index","title":"EdgeValuedGraphBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeValuedGraphBase/NonEmpty.interface":{"id":"rimbu_graph/custom/EdgeValuedGraphBase/NonEmpty.interface","title":"EdgeValuedGraphBase.NonEmpty<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeValuedGraphBase/Types.interface":{"id":"rimbu_graph/custom/EdgeValuedGraphBase/Types.interface","title":"EdgeValuedGraphBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeValuedGraphHashedCreators.interface":{"id":"rimbu_graph/custom/EdgeValuedGraphHashedCreators.interface","title":"EdgeValuedGraphHashedCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/EdgeValuedGrapSortedCreators.interface":{"id":"rimbu_graph/custom/EdgeValuedGrapSortedCreators.interface","title":"EdgeValuedGrapSortedCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphBase.interface":{"id":"rimbu_graph/custom/GraphBase.interface","title":"GraphBase<N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphBase/Builder.interface":{"id":"rimbu_graph/custom/GraphBase/Builder.interface","title":"GraphBase.Builder<N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphBase/Context.interface":{"id":"rimbu_graph/custom/GraphBase/Context.interface","title":"GraphBase.Context<UN,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphBase/Factory.interface":{"id":"rimbu_graph/custom/GraphBase/Factory.interface","title":"GraphBase.Factory<Tp,UN>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphBase/index":{"id":"rimbu_graph/custom/GraphBase/index","title":"GraphBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphBase/NonEmpty.interface":{"id":"rimbu_graph/custom/GraphBase/NonEmpty.interface","title":"GraphBase.NonEmpty<N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphBase/Types.interface":{"id":"rimbu_graph/custom/GraphBase/Types.interface","title":"GraphBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphBuilder.class":{"id":"rimbu_graph/custom/GraphBuilder.class","title":"GraphBuilder<N,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphConnect.interface":{"id":"rimbu_graph/custom/GraphConnect.interface","title":"GraphConnect<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphConnectNonEmpty.interface":{"id":"rimbu_graph/custom/GraphConnectNonEmpty.interface","title":"GraphConnectNonEmpty<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphContext.class":{"id":"rimbu_graph/custom/GraphContext.class","title":"GraphContext<UN,TT,Dir,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphElement.type":{"id":"rimbu_graph/custom/GraphElement.type","title":"GraphElement","description":"A graph element is either an isolated node as a 1-tuple, or a link between nodes represented as a Link instance.","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphElement/index":{"id":"rimbu_graph/custom/GraphElement/index","title":"GraphElement (namespace)","description":"A graph element is either an isolated node as a 1-tuple, or a link between nodes represented as a Link instance."},"rimbu_graph/custom/GraphEmpty.class":{"id":"rimbu_graph/custom/GraphEmpty.class","title":"GraphEmpty<N,V,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphEmptyBase.class":{"id":"rimbu_graph/custom/GraphEmptyBase.class","title":"GraphEmptyBase","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphNonEmpty.class":{"id":"rimbu_graph/custom/GraphNonEmpty.class","title":"GraphNonEmpty<N,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphTypesContextImpl.interface":{"id":"rimbu_graph/custom/GraphTypesContextImpl.interface","title":"GraphTypesContextImpl","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/GraphValues.interface":{"id":"rimbu_graph/custom/GraphValues.interface","title":"GraphValues<N,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/index":{"id":"rimbu_graph/custom/index","title":"@rimbu/graph/custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/Link.type":{"id":"rimbu_graph/custom/Link.type","title":"Link","description":"A potentially valued connection between two nodes, being a 2-valued or 3-valued tuple of which the first two elements are nodes","sidebar":"defaultSidebar"},"rimbu_graph/custom/Link/index":{"id":"rimbu_graph/custom/Link/index","title":"Link (namespace)","description":"A potentially valued connection between two nodes, being a 2-valued or 3-valued tuple of which the first two elements are nodes","sidebar":"defaultSidebar"},"rimbu_graph/custom/Link/Target.type":{"id":"rimbu_graph/custom/Link/Target.type","title":"Target","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphBase.interface":{"id":"rimbu_graph/custom/ValuedGraphBase.interface","title":"ValuedGraphBase<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphBase/Builder.interface":{"id":"rimbu_graph/custom/ValuedGraphBase/Builder.interface","title":"ValuedGraphBase.Builder<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphBase/Context.interface":{"id":"rimbu_graph/custom/ValuedGraphBase/Context.interface","title":"ValuedGraphBase.Context<UN,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphBase/Factory.interface":{"id":"rimbu_graph/custom/ValuedGraphBase/Factory.interface","title":"ValuedGraphBase.Factory<Tp,UN>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphBase/index":{"id":"rimbu_graph/custom/ValuedGraphBase/index","title":"ValuedGraphBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphBase/NonEmpty.interface":{"id":"rimbu_graph/custom/ValuedGraphBase/NonEmpty.interface","title":"ValuedGraphBase.NonEmpty<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphBase/Types.interface":{"id":"rimbu_graph/custom/ValuedGraphBase/Types.interface","title":"ValuedGraphBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphBuilder.class":{"id":"rimbu_graph/custom/ValuedGraphBuilder.class","title":"ValuedGraphBuilder<N,V,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphContext.class":{"id":"rimbu_graph/custom/ValuedGraphContext.class","title":"ValuedGraphContext<UN,TT,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphElement.type":{"id":"rimbu_graph/custom/ValuedGraphElement.type","title":"ValuedGraphElement","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphElement/index":{"id":"rimbu_graph/custom/ValuedGraphElement/index","title":"ValuedGraphElement (namespace)","description":"undocumented"},"rimbu_graph/custom/ValuedGraphEmpty.class":{"id":"rimbu_graph/custom/ValuedGraphEmpty.class","title":"ValuedGraphEmpty<N,V,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphNonEmpty.class":{"id":"rimbu_graph/custom/ValuedGraphNonEmpty.class","title":"ValuedGraphNonEmpty<N,V,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedGraphTypesContextImpl.interface":{"id":"rimbu_graph/custom/ValuedGraphTypesContextImpl.interface","title":"ValuedGraphTypesContextImpl","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedLink.type":{"id":"rimbu_graph/custom/ValuedLink.type","title":"ValuedLink","description":"A valued connection between two nodes, being a 3-valued tuple of which the first two elements are nodes and the last element a value","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedLink/index":{"id":"rimbu_graph/custom/ValuedLink/index","title":"ValuedLink (namespace)","description":"A valued connection between two nodes, being a 3-valued tuple of which the first two elements are nodes and the last element a value","sidebar":"defaultSidebar"},"rimbu_graph/custom/ValuedLink/Target.type":{"id":"rimbu_graph/custom/ValuedLink/Target.type","title":"Target","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/VariantGraphBase.interface":{"id":"rimbu_graph/custom/VariantGraphBase.interface","title":"VariantGraphBase<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/VariantGraphBase/index":{"id":"rimbu_graph/custom/VariantGraphBase/index","title":"VariantGraphBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/VariantGraphBase/NonEmpty.interface":{"id":"rimbu_graph/custom/VariantGraphBase/NonEmpty.interface","title":"VariantGraphBase.NonEmpty<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/VariantGraphBase/Types.interface":{"id":"rimbu_graph/custom/VariantGraphBase/Types.interface","title":"VariantGraphBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/custom/VariantValuedGraphBase.interface":{"id":"rimbu_graph/custom/VariantValuedGraphBase.interface","title":"VariantValuedGraphBase<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/VariantValuedGraphBase/index":{"id":"rimbu_graph/custom/VariantValuedGraphBase/index","title":"VariantValuedGraphBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/VariantValuedGraphBase/NonEmpty.interface":{"id":"rimbu_graph/custom/VariantValuedGraphBase/NonEmpty.interface","title":"VariantValuedGraphBase.NonEmpty<N,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/custom/VariantValuedGraphBase/Types.interface":{"id":"rimbu_graph/custom/VariantValuedGraphBase/Types.interface","title":"VariantValuedGraphBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/custom/WithGraphValues.type":{"id":"rimbu_graph/custom/WithGraphValues.type","title":"WithGraphValues","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraph.interface":{"id":"rimbu_graph/EdgeGraph.interface","title":"EdgeGraph<N>","description":"An type-invariant immutable edge (undirected) graph. See the Graph documentation and the EdgeGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraph/Builder.interface":{"id":"rimbu_graph/EdgeGraph/Builder.interface","title":"EdgeGraph.Builder<N>","description":"A mutable EdgeGraph builder used to efficiently create new immutable instances. See the Graph documentation and the EdgeGraph.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraph/Context.interface":{"id":"rimbu_graph/EdgeGraph/Context.interface","title":"EdgeGraph.Context<UN>","description":"The EdgeGraph\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraph/index":{"id":"rimbu_graph/EdgeGraph/index","title":"EdgeGraph (namespace)","description":"An type-invariant immutable edge (undirected) graph. See the Graph documentation and the EdgeGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraph/NonEmpty.interface":{"id":"rimbu_graph/EdgeGraph/NonEmpty.interface","title":"EdgeGraph.NonEmpty<N>","description":"A non-empty type-invariant immutable edge (undirected) graph.","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraph/Types.interface":{"id":"rimbu_graph/EdgeGraph/Types.interface","title":"EdgeGraph.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraphHashed.interface":{"id":"rimbu_graph/EdgeGraphHashed.interface","title":"EdgeGraphHashed<N>","description":"An type-invariant immutable valued edge (undirected) graph. The connections are internally maintained using hashed collections See the Graph documentation and the EdgeGraphHashed API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraphHashed/Builder.interface":{"id":"rimbu_graph/EdgeGraphHashed/Builder.interface","title":"EdgeGraphHashed.Builder<N>","description":"A mutable EdgeGraphHashed builder used to efficiently create new immutable instances. See the Graph documentation and the EdgeGraphHashed.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraphHashed/Context.interface":{"id":"rimbu_graph/EdgeGraphHashed/Context.interface","title":"EdgeGraphHashed.Context<UN>","description":"The EdgeGraphHashed\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraphHashed/index":{"id":"rimbu_graph/EdgeGraphHashed/index","title":"EdgeGraphHashed (namespace)","description":"An type-invariant immutable valued edge (undirected) graph. The connections are internally maintained using hashed collections See the Graph documentation and the EdgeGraphHashed API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraphHashed/NonEmpty.interface":{"id":"rimbu_graph/EdgeGraphHashed/NonEmpty.interface","title":"EdgeGraphHashed.NonEmpty<N>","description":"A non-empty type-invariant immutable valued edge (undirected) graph. The connections are internally maintained using hashed collections See the Graph documentation and the EdgeGraphHashed API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraphHashed/Types.interface":{"id":"rimbu_graph/EdgeGraphHashed/Types.interface","title":"EdgeGraphHashed.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraphSorted.interface":{"id":"rimbu_graph/EdgeGraphSorted.interface","title":"EdgeGraphSorted<N>","description":"An type-invariant immutable valued edge (undirected) graph. The connections are internally maintained using sorted collections See the Graph documentation and the EdgeGraphSorted API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraphSorted/Builder.interface":{"id":"rimbu_graph/EdgeGraphSorted/Builder.interface","title":"EdgeGraphSorted.Builder<N>","description":"A mutable EdgeGraphSorted builder used to efficiently create new immutable instances. See the Graph documentation and the EdgeGraphSorted.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraphSorted/Context.interface":{"id":"rimbu_graph/EdgeGraphSorted/Context.interface","title":"EdgeGraphSorted.Context<UN>","description":"The EdgeGraphSorted\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraphSorted/index":{"id":"rimbu_graph/EdgeGraphSorted/index","title":"EdgeGraphSorted (namespace)","description":"An type-invariant immutable valued edge (undirected) graph. The connections are internally maintained using sorted collections See the Graph documentation and the EdgeGraphSorted API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraphSorted/NonEmpty.interface":{"id":"rimbu_graph/EdgeGraphSorted/NonEmpty.interface","title":"EdgeGraphSorted.NonEmpty<N>","description":"A non-empty type-invariant immutable valued edge (undirected) graph. The connections are internally maintained using sorted collections See the Graph documentation and the EdgeGraphSorted API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeGraphSorted/Types.interface":{"id":"rimbu_graph/EdgeGraphSorted/Types.interface","title":"EdgeGraphSorted.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraph.interface":{"id":"rimbu_graph/EdgeValuedGraph.interface","title":"EdgeValuedGraph<N,V>","description":"An type-invariant immutable valued edge (undirected) graph. See the Graph documentation and the EdgeValuedGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraph/Builder.interface":{"id":"rimbu_graph/EdgeValuedGraph/Builder.interface","title":"EdgeValuedGraph.Builder<N,V>","description":"A mutable EdgeValuedGraph builder used to efficiently create new immutable instances. See the Graph documentation and the EdgeValuedGraph.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraph/Context.interface":{"id":"rimbu_graph/EdgeValuedGraph/Context.interface","title":"EdgeValuedGraph.Context<UN>","description":"The EdgeValuedGraph\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraph/index":{"id":"rimbu_graph/EdgeValuedGraph/index","title":"EdgeValuedGraph (namespace)","description":"An type-invariant immutable valued edge (undirected) graph. See the Graph documentation and the EdgeValuedGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraph/NonEmpty.interface":{"id":"rimbu_graph/EdgeValuedGraph/NonEmpty.interface","title":"EdgeValuedGraph.NonEmpty<N,V>","description":"A non-empty type-invariant immutable valued edge (undirected) graph. See the Graph documentation and the EdgeValuedGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraph/Types.interface":{"id":"rimbu_graph/EdgeValuedGraph/Types.interface","title":"EdgeValuedGraph.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraphHashed.interface":{"id":"rimbu_graph/EdgeValuedGraphHashed.interface","title":"EdgeValuedGraphHashed<N,V>","description":"An type-invariant immutable valued edge (undirected) graph. The nodes are internally maintained using HashMaps See the Graph documentation and the EdgeValuedGraphHashed API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraphHashed/Builder.interface":{"id":"rimbu_graph/EdgeValuedGraphHashed/Builder.interface","title":"EdgeValuedGraphHashed.Builder<N,V>","description":"A mutable EdgeValuedGraphHashed builder used to efficiently create new immutable instances. See the Graph documentation and the EdgeValuedGraphHashed.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraphHashed/Context.interface":{"id":"rimbu_graph/EdgeValuedGraphHashed/Context.interface","title":"EdgeValuedGraphHashed.Context<UN>","description":"The EdgeValuedGraphHashed\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraphHashed/index":{"id":"rimbu_graph/EdgeValuedGraphHashed/index","title":"EdgeValuedGraphHashed (namespace)","description":"An type-invariant immutable valued edge (undirected) graph. The nodes are internally maintained using HashMaps See the Graph documentation and the EdgeValuedGraphHashed API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraphHashed/NonEmpty.interface":{"id":"rimbu_graph/EdgeValuedGraphHashed/NonEmpty.interface","title":"EdgeValuedGraphHashed.NonEmpty<N,V>","description":"A non-empty type-invariant immutable valued edge (undirected) graph. The nodes are internally maintained using HashMaps See the Graph documentation and the EdgeValuedGraphHashed API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraphHashed/Types.interface":{"id":"rimbu_graph/EdgeValuedGraphHashed/Types.interface","title":"EdgeValuedGraphHashed.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraphSorted.interface":{"id":"rimbu_graph/EdgeValuedGraphSorted.interface","title":"EdgeValuedGraphSorted<N,V>","description":"An type-invariant immutable valued edge (undirected) graph. The nodes are internally maintained using SortedMaps See the Graph documentation and the EdgeValuedGraphSorted API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraphSorted/Builder.interface":{"id":"rimbu_graph/EdgeValuedGraphSorted/Builder.interface","title":"EdgeValuedGraphSorted.Builder<N,V>","description":"A mutable EdgeValuedGraphSorted builder used to efficiently create new immutable instances. See the Graph documentation and the EdgeValuedGraphSorted.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraphSorted/Context.interface":{"id":"rimbu_graph/EdgeValuedGraphSorted/Context.interface","title":"EdgeValuedGraphSorted.Context<UN>","description":"The EdgeValuedGraphSorted\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraphSorted/index":{"id":"rimbu_graph/EdgeValuedGraphSorted/index","title":"EdgeValuedGraphSorted (namespace)","description":"An type-invariant immutable valued edge (undirected) graph. The nodes are internally maintained using SortedMaps See the Graph documentation and the EdgeValuedGraphSorted API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraphSorted/NonEmpty.interface":{"id":"rimbu_graph/EdgeValuedGraphSorted/NonEmpty.interface","title":"EdgeValuedGraphSorted.NonEmpty<N,V>","description":"A non-empty type-invariant immutable valued edge (undirected) graph. The nodes are internally maintained using SortedMaps See the Graph documentation and the EdgeValuedGraphSorted API documentation","sidebar":"defaultSidebar"},"rimbu_graph/EdgeValuedGraphSorted/Types.interface":{"id":"rimbu_graph/EdgeValuedGraphSorted/Types.interface","title":"EdgeValuedGraphSorted.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/Graph.interface":{"id":"rimbu_graph/Graph.interface","title":"Graph<N>","description":"An type-invariant immutable graph. See the Graph documentation and the Graph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/Graph/Builder.interface":{"id":"rimbu_graph/Graph/Builder.interface","title":"Graph.Builder<N>","description":"A mutable Graph builder used to efficiently create new immutable instances. See the Graph documentation and the Graph.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/Graph/Context.interface":{"id":"rimbu_graph/Graph/Context.interface","title":"Graph.Context<UN>","description":"The EdgeValuedGraGraphphSorted\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/Graph/index":{"id":"rimbu_graph/Graph/index","title":"Graph (namespace)","description":"An type-invariant immutable graph. See the Graph documentation and the Graph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/Graph/NonEmpty.interface":{"id":"rimbu_graph/Graph/NonEmpty.interface","title":"Graph.NonEmpty<N>","description":"A non-empty type-invariant immutable graph. See the Graph documentation and the Graph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/Graph/Types.interface":{"id":"rimbu_graph/Graph/Types.interface","title":"Graph.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/index":{"id":"rimbu_graph/index","title":"@rimbu/graph","description":"The @rimbu/graph package provides many types of Graph implementations.","sidebar":"defaultSidebar"},"rimbu_graph/Traverse/index":{"id":"rimbu_graph/Traverse/index","title":"Traverse (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_graph/Traverse/LinkType.type":{"id":"rimbu_graph/Traverse/LinkType.type","title":"LinkType","description":"Utility type to determine if a graph has valued or unvalued links","sidebar":"defaultSidebar"},"rimbu_graph/ValuedGraph.interface":{"id":"rimbu_graph/ValuedGraph.interface","title":"ValuedGraph<N,V>","description":"An type-invariant immutable valued graph. See the Graph documentation and the ValuedGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ValuedGraph/Builder.interface":{"id":"rimbu_graph/ValuedGraph/Builder.interface","title":"ValuedGraph.Builder<N,V>","description":"A mutable ValuedGraph builder used to efficiently create new immutable instances. See the Graph documentation and the ValuedGraph.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ValuedGraph/Context.interface":{"id":"rimbu_graph/ValuedGraph/Context.interface","title":"ValuedGraph.Context<UN>","description":"The ValuedGraph\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_graph/ValuedGraph/index":{"id":"rimbu_graph/ValuedGraph/index","title":"ValuedGraph (namespace)","description":"An type-invariant immutable valued graph. See the Graph documentation and the ValuedGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ValuedGraph/NonEmpty.interface":{"id":"rimbu_graph/ValuedGraph/NonEmpty.interface","title":"ValuedGraph.NonEmpty<N,V>","description":"A non-empty type-invariant immutable valued graph. See the Graph documentation and the ValuedGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/ValuedGraph/Types.interface":{"id":"rimbu_graph/ValuedGraph/Types.interface","title":"ValuedGraph.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/VariantGraph.interface":{"id":"rimbu_graph/VariantGraph.interface","title":"VariantGraph<N>","description":"An type-variant immutable graph. See the Graph documentation and the VariantGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/VariantGraph/index":{"id":"rimbu_graph/VariantGraph/index","title":"VariantGraph (namespace)","description":"An type-variant immutable graph. See the Graph documentation and the VariantGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/VariantGraph/NonEmpty.interface":{"id":"rimbu_graph/VariantGraph/NonEmpty.interface","title":"VariantGraph.NonEmpty<N>","description":"A non-empty type-variant immutable graph. See the Graph documentation and the VariantGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/VariantGraph/Types.interface":{"id":"rimbu_graph/VariantGraph/Types.interface","title":"VariantGraph.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_graph/VariantValuedGraph.interface":{"id":"rimbu_graph/VariantValuedGraph.interface","title":"VariantValuedGraph<N,V>","description":"An type-variant immutable valued graph. See the Graph documentation and the VariantValuedGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/VariantValuedGraph/index":{"id":"rimbu_graph/VariantValuedGraph/index","title":"VariantValuedGraph (namespace)","description":"An type-variant immutable valued graph. See the Graph documentation and the VariantValuedGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/VariantValuedGraph/NonEmpty.interface":{"id":"rimbu_graph/VariantValuedGraph/NonEmpty.interface","title":"VariantValuedGraph.NonEmpty<N,V>","description":"A non-empty type-variant immutable valued graph. See the Graph documentation and the VariantValuedGraph API documentation","sidebar":"defaultSidebar"},"rimbu_graph/VariantValuedGraph/Types.interface":{"id":"rimbu_graph/VariantValuedGraph/Types.interface","title":"VariantValuedGraph.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_hashed/Hasher.interface":{"id":"rimbu_hashed/Hasher.interface","title":"Hasher<UK>","description":"Interface used to hash objects for hashed collections.","sidebar":"defaultSidebar"},"rimbu_hashed/Hasher/index":{"id":"rimbu_hashed/Hasher/index","title":"Hasher (namespace)","description":"Interface used to hash objects for hashed collections."},"rimbu_hashed/index":{"id":"rimbu_hashed/index","title":"@rimbu/hashed","description":"The @rimbu/hashed package provides implementations of the HashSet and HashMap.","sidebar":"defaultSidebar"},"rimbu_hashed/map-custom/HashMapBlock.class":{"id":"rimbu_hashed/map-custom/HashMapBlock.class","title":"HashMapBlock<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/map-custom/HashMapBlockBuilder.class":{"id":"rimbu_hashed/map-custom/HashMapBlockBuilder.class","title":"HashMapBlockBuilder<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/map-custom/HashMapCollision.class":{"id":"rimbu_hashed/map-custom/HashMapCollision.class","title":"HashMapCollision<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/map-custom/HashMapCollisionBuilder.class":{"id":"rimbu_hashed/map-custom/HashMapCollisionBuilder.class","title":"HashMapCollisionBuilder<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/map-custom/HashMapContext.class":{"id":"rimbu_hashed/map-custom/HashMapContext.class","title":"HashMapContext<UK>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/map-custom/HashMapCreators.interface":{"id":"rimbu_hashed/map-custom/HashMapCreators.interface","title":"HashMapCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/map-custom/HashMapEmpty.class":{"id":"rimbu_hashed/map-custom/HashMapEmpty.class","title":"HashMapEmpty<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/map-custom/HashMapNonEmptyBase.class":{"id":"rimbu_hashed/map-custom/HashMapNonEmptyBase.class","title":"HashMapNonEmptyBase<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/map-custom/index":{"id":"rimbu_hashed/map-custom/index","title":"@rimbu/hashed/map-custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/map-custom/MapBlockBuilderEntry.type":{"id":"rimbu_hashed/map-custom/MapBlockBuilderEntry.type","title":"MapBlockBuilderEntry","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/map-custom/MapEntrySet.type":{"id":"rimbu_hashed/map-custom/MapEntrySet.type","title":"MapEntrySet","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/map/Hasher.interface":{"id":"rimbu_hashed/map/Hasher.interface","title":"Hasher<UK>","description":"Interface used to hash objects for hashed collections.","sidebar":"defaultSidebar"},"rimbu_hashed/map/Hasher/index":{"id":"rimbu_hashed/map/Hasher/index","title":"Hasher (namespace)","description":"Interface used to hash objects for hashed collections."},"rimbu_hashed/map/HashMap.interface":{"id":"rimbu_hashed/map/HashMap.interface","title":"HashMap<K,V>","description":"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys.","sidebar":"defaultSidebar"},"rimbu_hashed/map/HashMap/Builder.interface":{"id":"rimbu_hashed/map/HashMap/Builder.interface","title":"HashMap.Builder<K,V>","description":"A mutable HashMap builder used to efficiently create new immutable instances. See the Map documentation and the HashMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_hashed/map/HashMap/Context.interface":{"id":"rimbu_hashed/map/HashMap/Context.interface","title":"HashMap.Context<UK>","description":"A context instance for a HashMap that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_hashed/map/HashMap/index":{"id":"rimbu_hashed/map/HashMap/index","title":"HashMap (namespace)","description":"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys.","sidebar":"defaultSidebar"},"rimbu_hashed/map/HashMap/NonEmpty.interface":{"id":"rimbu_hashed/map/HashMap/NonEmpty.interface","title":"HashMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys.","sidebar":"defaultSidebar"},"rimbu_hashed/map/HashMap/Types.interface":{"id":"rimbu_hashed/map/HashMap/Types.interface","title":"HashMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_hashed/map/index":{"id":"rimbu_hashed/map/index","title":"@rimbu/hashed/map","description":"The @rimbu/hashed/map package provides the HashMap implementation.","sidebar":"defaultSidebar"},"rimbu_hashed/set-custom/HashSetBlock.class":{"id":"rimbu_hashed/set-custom/HashSetBlock.class","title":"HashSetBlock<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/set-custom/HashSetBlockBuilder.class":{"id":"rimbu_hashed/set-custom/HashSetBlockBuilder.class","title":"HashSetBlockBuilder<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/set-custom/HashSetCollision.class":{"id":"rimbu_hashed/set-custom/HashSetCollision.class","title":"HashSetCollision<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/set-custom/HashSetCollisionBuilder.class":{"id":"rimbu_hashed/set-custom/HashSetCollisionBuilder.class","title":"HashSetCollisionBuilder<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/set-custom/HashSetContext.class":{"id":"rimbu_hashed/set-custom/HashSetContext.class","title":"HashSetContext<UT>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/set-custom/HashSetCreators.interface":{"id":"rimbu_hashed/set-custom/HashSetCreators.interface","title":"HashSetCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/set-custom/HashSetEmpty.class":{"id":"rimbu_hashed/set-custom/HashSetEmpty.class","title":"HashSetEmpty<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/set-custom/HashSetNonEmptyBase.class":{"id":"rimbu_hashed/set-custom/HashSetNonEmptyBase.class","title":"HashSetNonEmptyBase<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/set-custom/index":{"id":"rimbu_hashed/set-custom/index","title":"@rimbu/hashed/set-custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/set-custom/SetBlockBuilderEntry.type":{"id":"rimbu_hashed/set-custom/SetBlockBuilderEntry.type","title":"SetBlockBuilderEntry","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/set-custom/SetEntrySet.type":{"id":"rimbu_hashed/set-custom/SetEntrySet.type","title":"SetEntrySet","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_hashed/set/Hasher.interface":{"id":"rimbu_hashed/set/Hasher.interface","title":"Hasher<UK>","description":"Interface used to hash objects for hashed collections.","sidebar":"defaultSidebar"},"rimbu_hashed/set/Hasher/index":{"id":"rimbu_hashed/set/Hasher/index","title":"Hasher (namespace)","description":"Interface used to hash objects for hashed collections."},"rimbu_hashed/set/HashSet.interface":{"id":"rimbu_hashed/set/HashSet.interface","title":"HashSet<T>","description":"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the HashSet API documentation","sidebar":"defaultSidebar"},"rimbu_hashed/set/HashSet/Builder.interface":{"id":"rimbu_hashed/set/HashSet/Builder.interface","title":"HashSet.Builder<T>","description":"A mutable HashSet builder used to efficiently create new immutable instances. See the Set documentation and the HashSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_hashed/set/HashSet/Context.interface":{"id":"rimbu_hashed/set/HashSet/Context.interface","title":"HashSet.Context<UT>","description":"A context instance for a HashSet that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_hashed/set/HashSet/index":{"id":"rimbu_hashed/set/HashSet/index","title":"HashSet (namespace)","description":"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the HashSet API documentation","sidebar":"defaultSidebar"},"rimbu_hashed/set/HashSet/NonEmpty.interface":{"id":"rimbu_hashed/set/HashSet/NonEmpty.interface","title":"HashSet.NonEmpty<T>","description":"A non-empty type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the HashSet API documentation","sidebar":"defaultSidebar"},"rimbu_hashed/set/HashSet/Types.interface":{"id":"rimbu_hashed/set/HashSet/Types.interface","title":"HashSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_hashed/set/index":{"id":"rimbu_hashed/set/index","title":"@rimbu/hashed/set","description":"The @rimbu/hashed/set package provides the HashSet implementation.","sidebar":"defaultSidebar"},"rimbu_list/custom/Block.interface":{"id":"rimbu_list/custom/Block.interface","title":"Block<T,TS,C>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/BlockBuilder.interface":{"id":"rimbu_list/custom/BlockBuilder.interface","title":"BlockBuilder<T,C>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/BuilderBase.interface":{"id":"rimbu_list/custom/BuilderBase.interface","title":"BuilderBase<T,C>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/CacheMap.class":{"id":"rimbu_list/custom/CacheMap.class","title":"CacheMap","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/Empty.class":{"id":"rimbu_list/custom/Empty.class","title":"Empty<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/GenBuilder.class":{"id":"rimbu_list/custom/GenBuilder.class","title":"GenBuilder<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/index":{"id":"rimbu_list/custom/index","title":"@rimbu/list/custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/LeafBlock.class":{"id":"rimbu_list/custom/LeafBlock.class","title":"LeafBlock<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/LeafBlockBuilder.class":{"id":"rimbu_list/custom/LeafBlockBuilder.class","title":"LeafBlockBuilder<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/LeafBuilder.interface":{"id":"rimbu_list/custom/LeafBuilder.interface","title":"LeafBuilder<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/LeafTree.class":{"id":"rimbu_list/custom/LeafTree.class","title":"LeafTree<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/LeafTreeBuilder.class":{"id":"rimbu_list/custom/LeafTreeBuilder.class","title":"LeafTreeBuilder<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/ListContext.class":{"id":"rimbu_list/custom/ListContext.class","title":"ListContext","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/ListCreators.interface":{"id":"rimbu_list/custom/ListCreators.interface","title":"ListCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/ListFactory.interface":{"id":"rimbu_list/custom/ListFactory.interface","title":"ListFactory","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/NonLeaf.interface":{"id":"rimbu_list/custom/NonLeaf.interface","title":"NonLeaf<T,C>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/NonLeafBlock.class":{"id":"rimbu_list/custom/NonLeafBlock.class","title":"NonLeafBlock<T,C>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/NonLeafBlockBuilder.class":{"id":"rimbu_list/custom/NonLeafBlockBuilder.class","title":"NonLeafBlockBuilder<T,C>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/NonLeafBuilder.type":{"id":"rimbu_list/custom/NonLeafBuilder.type","title":"NonLeafBuilder","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/NonLeafTree.class":{"id":"rimbu_list/custom/NonLeafTree.class","title":"NonLeafTree<T,C>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/NonLeafTreeBuilder.class":{"id":"rimbu_list/custom/NonLeafTreeBuilder.class","title":"NonLeafTreeBuilder<T,C>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/ReversedLeafBlock.class":{"id":"rimbu_list/custom/ReversedLeafBlock.class","title":"ReversedLeafBlock<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/custom/Tree.interface":{"id":"rimbu_list/custom/Tree.interface","title":"Tree<T,TS,TB,C>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_list/index":{"id":"rimbu_list/index","title":"@rimbu/list","description":"The @rimbu/list package provides the List implementation.","sidebar":"defaultSidebar"},"rimbu_list/List.interface":{"id":"rimbu_list/List.interface","title":"List<T>","description":"A random accessible immutable sequence of values of type T. See the List documentation and the List API documentation","sidebar":"defaultSidebar"},"rimbu_list/List/Builder.interface":{"id":"rimbu_list/List/Builder.interface","title":"List.Builder<T>","description":"A mutable builder to create immutable List instances in a more efficient way. See the List documentation and the List.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_list/List/Context.interface":{"id":"rimbu_list/List/Context.interface","title":"List.Context","description":"A context instance for List that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_list/List/index":{"id":"rimbu_list/List/index","title":"List (namespace)","description":"A random accessible immutable sequence of values of type T. See the List documentation and the List API documentation","sidebar":"defaultSidebar"},"rimbu_list/List/NonEmpty.interface":{"id":"rimbu_list/List/NonEmpty.interface","title":"List.NonEmpty<T>","description":"A non-empty random accessible immutable sequence of values of type T. See the List documentation and the List API documentation","sidebar":"defaultSidebar"},"rimbu_list/List/Types.interface":{"id":"rimbu_list/List/Types.interface","title":"List.Types","description":"A utility interface to extract related List types.","sidebar":"defaultSidebar"},"rimbu_multimap/custom/ContextImplTypes.interface":{"id":"rimbu_multimap/custom/ContextImplTypes.interface","title":"ContextImplTypes","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/HashMultiMapHashValueCreators.interface":{"id":"rimbu_multimap/custom/HashMultiMapHashValueCreators.interface","title":"HashMultiMapHashValueCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/HashMultiMapSortedValueCreators.interface":{"id":"rimbu_multimap/custom/HashMultiMapSortedValueCreators.interface","title":"HashMultiMapSortedValueCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/index":{"id":"rimbu_multimap/custom/index","title":"@rimbu/multimap/custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/MultiMapBase.interface":{"id":"rimbu_multimap/custom/MultiMapBase.interface","title":"MultiMapBase<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/MultiMapBase/Builder.interface":{"id":"rimbu_multimap/custom/MultiMapBase/Builder.interface","title":"MultiMapBase.Builder<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/MultiMapBase/Context.interface":{"id":"rimbu_multimap/custom/MultiMapBase/Context.interface","title":"MultiMapBase.Context<UK,UV,Tp>","description":"The multimap\'s Context instance that serves as a factory for all related immutable instances and builders.","sidebar":"defaultSidebar"},"rimbu_multimap/custom/MultiMapBase/Factory.interface":{"id":"rimbu_multimap/custom/MultiMapBase/Factory.interface","title":"MultiMapBase.Factory<Tp,UK,UV>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/MultiMapBase/index":{"id":"rimbu_multimap/custom/MultiMapBase/index","title":"MultiMapBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/MultiMapBase/NonEmpty.interface":{"id":"rimbu_multimap/custom/MultiMapBase/NonEmpty.interface","title":"MultiMapBase.NonEmpty<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/MultiMapBase/Types.interface":{"id":"rimbu_multimap/custom/MultiMapBase/Types.interface","title":"MultiMapBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multimap/custom/MultiMapBuilder.class":{"id":"rimbu_multimap/custom/MultiMapBuilder.class","title":"MultiMapBuilder<K,V,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/MultiMapContext.class":{"id":"rimbu_multimap/custom/MultiMapContext.class","title":"MultiMapContext<UK,UV,N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/MultiMapEmpty.class":{"id":"rimbu_multimap/custom/MultiMapEmpty.class","title":"MultiMapEmpty<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/MultiMapNonEmpty.class":{"id":"rimbu_multimap/custom/MultiMapNonEmpty.class","title":"MultiMapNonEmpty<K,V,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/SortedMultiMapHashValueCreators.interface":{"id":"rimbu_multimap/custom/SortedMultiMapHashValueCreators.interface","title":"SortedMultiMapHashValueCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/SortedMultiMapSortedValueCreators.interface":{"id":"rimbu_multimap/custom/SortedMultiMapSortedValueCreators.interface","title":"SortedMultiMapSortedValueCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/VariantMultiMapBase.interface":{"id":"rimbu_multimap/custom/VariantMultiMapBase.interface","title":"VariantMultiMapBase<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/VariantMultiMapBase/index":{"id":"rimbu_multimap/custom/VariantMultiMapBase/index","title":"VariantMultiMapBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/VariantMultiMapBase/NonEmpty.interface":{"id":"rimbu_multimap/custom/VariantMultiMapBase/NonEmpty.interface","title":"VariantMultiMapBase.NonEmpty<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multimap/custom/VariantMultiMapBase/Types.interface":{"id":"rimbu_multimap/custom/VariantMultiMapBase/Types.interface","title":"VariantMultiMapBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multimap/HashMultiMapHashValue.interface":{"id":"rimbu_multimap/HashMultiMapHashValue.interface","title":"HashMultiMapHashValue<K,V>","description":"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the MultiMap documentation and the HashMultiMapHashValue API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/HashMultiMapHashValue/Builder.interface":{"id":"rimbu_multimap/HashMultiMapHashValue/Builder.interface","title":"HashMultiMapHashValue.Builder<K,V>","description":"A mutable HashMultiMapHashValue builder used to efficiently create new immutable instances. See the MultiMap documentation and the HashMultiMapHashValue.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/HashMultiMapHashValue/Context.interface":{"id":"rimbu_multimap/HashMultiMapHashValue/Context.interface","title":"HashMultiMapHashValue.Context<UK,UV>","description":"A context instance for an HashMultiMapHashValue that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_multimap/HashMultiMapHashValue/index":{"id":"rimbu_multimap/HashMultiMapHashValue/index","title":"HashMultiMapHashValue (namespace)","description":"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the MultiMap documentation and the HashMultiMapHashValue API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/HashMultiMapHashValue/NonEmpty.interface":{"id":"rimbu_multimap/HashMultiMapHashValue/NonEmpty.interface","title":"HashMultiMapHashValue.NonEmpty<K,V>","description":"A non-empty type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the MultiMap documentation and the HashMultiMapHashValue API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/HashMultiMapHashValue/Types.interface":{"id":"rimbu_multimap/HashMultiMapHashValue/Types.interface","title":"HashMultiMapHashValue.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multimap/HashMultiMapSortedValue.interface":{"id":"rimbu_multimap/HashMultiMapSortedValue.interface","title":"HashMultiMapSortedValue<K,V>","description":"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the MultiMap documentation and the HashMultiMapSortedValue API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/HashMultiMapSortedValue/Builder.interface":{"id":"rimbu_multimap/HashMultiMapSortedValue/Builder.interface","title":"HashMultiMapSortedValue.Builder<K,V>","description":"A mutable HashMultiMapSortedValue builder used to efficiently create new immutable instances. See the MultiMap documentation and the HashMultiMapSortedValue.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/HashMultiMapSortedValue/Context.interface":{"id":"rimbu_multimap/HashMultiMapSortedValue/Context.interface","title":"HashMultiMapSortedValue.Context<UK,UV>","description":"A context instance for an HashMultiMapSortedValue that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_multimap/HashMultiMapSortedValue/index":{"id":"rimbu_multimap/HashMultiMapSortedValue/index","title":"HashMultiMapSortedValue (namespace)","description":"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the MultiMap documentation and the HashMultiMapSortedValue API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/HashMultiMapSortedValue/NonEmpty.interface":{"id":"rimbu_multimap/HashMultiMapSortedValue/NonEmpty.interface","title":"HashMultiMapSortedValue.NonEmpty<K,V>","description":"A non-empty type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the MultiMap documentation and the HashMultiMapSortedValue API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/HashMultiMapSortedValue/Types.interface":{"id":"rimbu_multimap/HashMultiMapSortedValue/Types.interface","title":"HashMultiMapSortedValue.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multimap/index":{"id":"rimbu_multimap/index","title":"@rimbu/multimap","description":"The @rimbu/multimap package provides implementations for various MultiMaps.","sidebar":"defaultSidebar"},"rimbu_multimap/MultiMap.interface":{"id":"rimbu_multimap/MultiMap.interface","title":"MultiMap<K,V>","description":"A type-invariant immutable MultiMap of key type K, and value type V. In the Map, each key has at least one value. See the MultiMap documentation and the MultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/MultiMap/Builder.interface":{"id":"rimbu_multimap/MultiMap/Builder.interface","title":"MultiMap.Builder<K,V>","description":"A mutable MultiMap builder used to efficiently create new immutable instances. See the MultiMap documentation and the MultiMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/MultiMap/Context.interface":{"id":"rimbu_multimap/MultiMap/Context.interface","title":"MultiMap.Context<UK,UV>","description":"A context instance for MultiMap implementations that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_multimap/MultiMap/index":{"id":"rimbu_multimap/MultiMap/index","title":"MultiMap (namespace)","description":"A type-invariant immutable MultiMap of key type K, and value type V. In the Map, each key has at least one value. See the MultiMap documentation and the MultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/MultiMap/NonEmpty.interface":{"id":"rimbu_multimap/MultiMap/NonEmpty.interface","title":"MultiMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable MultiMap of key type K, and value type V. In the Map, each key has at least one value. See the MultiMap documentation and the MultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/MultiMap/Types.interface":{"id":"rimbu_multimap/MultiMap/Types.interface","title":"MultiMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multimap/SortedMultiMapHashValue.interface":{"id":"rimbu_multimap/SortedMultiMapHashValue.interface","title":"SortedMultiMapHashValue<K,V>","description":"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the MultiMap documentation and the SortedMultiMapHashValue API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/SortedMultiMapHashValue/Builder.interface":{"id":"rimbu_multimap/SortedMultiMapHashValue/Builder.interface","title":"SortedMultiMapHashValue.Builder<K,V>","description":"A mutable SortedMultiMapHashValue builder used to efficiently create new immutable instances. See the MultiMap documentation and the SortedMultiMapHashValue.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/SortedMultiMapHashValue/Context.interface":{"id":"rimbu_multimap/SortedMultiMapHashValue/Context.interface","title":"SortedMultiMapHashValue.Context<UK,UV>","description":"A context instance for an SortedMultiMapHashValue that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_multimap/SortedMultiMapHashValue/index":{"id":"rimbu_multimap/SortedMultiMapHashValue/index","title":"SortedMultiMapHashValue (namespace)","description":"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the MultiMap documentation and the SortedMultiMapHashValue API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/SortedMultiMapHashValue/NonEmpty.interface":{"id":"rimbu_multimap/SortedMultiMapHashValue/NonEmpty.interface","title":"SortedMultiMapHashValue.NonEmpty<K,V>","description":"A non-empty type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the MultiMap documentation and the SortedMultiMapHashValue API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/SortedMultiMapHashValue/Types.interface":{"id":"rimbu_multimap/SortedMultiMapHashValue/Types.interface","title":"SortedMultiMapHashValue.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multimap/SortedMultiMapSortedValue.interface":{"id":"rimbu_multimap/SortedMultiMapSortedValue.interface","title":"SortedMultiMapSortedValue<K,V>","description":"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the MultiMap documentation and the SortedMultiMapSortedValue API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/SortedMultiMapSortedValue/Builder.interface":{"id":"rimbu_multimap/SortedMultiMapSortedValue/Builder.interface","title":"SortedMultiMapSortedValue.Builder<K,V>","description":"A mutable SortedMultiMapSortedValue builder used to efficiently create new immutable instances. See the MultiMap documentation and the SortedMultiMapSortedValue.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/SortedMultiMapSortedValue/Context.interface":{"id":"rimbu_multimap/SortedMultiMapSortedValue/Context.interface","title":"SortedMultiMapSortedValue.Context<UK,UV>","description":"A context instance for an SortedMultiMapSortedValue that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_multimap/SortedMultiMapSortedValue/index":{"id":"rimbu_multimap/SortedMultiMapSortedValue/index","title":"SortedMultiMapSortedValue (namespace)","description":"A type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the MultiMap documentation and the SortedMultiMapSortedValue API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/SortedMultiMapSortedValue/NonEmpty.interface":{"id":"rimbu_multimap/SortedMultiMapSortedValue/NonEmpty.interface","title":"SortedMultiMapSortedValue.NonEmpty<K,V>","description":"A non-empty type-invariant immutable MultiMap of key type K, and value type V. In the MultiMap, each key has at least one value. See the MultiMap documentation and the SortedMultiMapSortedValue API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/SortedMultiMapSortedValue/Types.interface":{"id":"rimbu_multimap/SortedMultiMapSortedValue/Types.interface","title":"SortedMultiMapSortedValue.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multimap/VariantMultiMap.interface":{"id":"rimbu_multimap/VariantMultiMap.interface","title":"VariantMultiMap<K,V>","description":"A type-variant immutable MultiMap of key type K, and value type V. In the Map, each key has at least one value. See the MultiMap documentation and the VariantMultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/VariantMultiMap/index":{"id":"rimbu_multimap/VariantMultiMap/index","title":"VariantMultiMap (namespace)","description":"A type-variant immutable MultiMap of key type K, and value type V. In the Map, each key has at least one value. See the MultiMap documentation and the VariantMultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/VariantMultiMap/NonEmpty.interface":{"id":"rimbu_multimap/VariantMultiMap/NonEmpty.interface","title":"VariantMultiMap.NonEmpty<K,V>","description":"A non-empty type-variant immutable MultiMap of key type K, and value type V. In the Map, each key has at least one value. See the MultiMap documentation and the VariantMultiMap API documentation","sidebar":"defaultSidebar"},"rimbu_multimap/VariantMultiMap/Types.interface":{"id":"rimbu_multimap/VariantMultiMap/Types.interface","title":"VariantMultiMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multiset/custom/ContextImplTypes.interface":{"id":"rimbu_multiset/custom/ContextImplTypes.interface","title":"ContextImplTypes","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/HashMultiSetCreators.interface":{"id":"rimbu_multiset/custom/HashMultiSetCreators.interface","title":"HashMultiSetCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/index":{"id":"rimbu_multiset/custom/index","title":"@rimbu/multiset/custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/MultiSetBase.interface":{"id":"rimbu_multiset/custom/MultiSetBase.interface","title":"MultiSetBase<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/MultiSetBase/Builder.interface":{"id":"rimbu_multiset/custom/MultiSetBase/Builder.interface","title":"MultiSetBase.Builder<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/MultiSetBase/Context.interface":{"id":"rimbu_multiset/custom/MultiSetBase/Context.interface","title":"MultiSetBase.Context<UT,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/MultiSetBase/Factory.interface":{"id":"rimbu_multiset/custom/MultiSetBase/Factory.interface","title":"MultiSetBase.Factory<Tp,UT>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/MultiSetBase/index":{"id":"rimbu_multiset/custom/MultiSetBase/index","title":"MultiSetBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/MultiSetBase/NonEmpty.interface":{"id":"rimbu_multiset/custom/MultiSetBase/NonEmpty.interface","title":"MultiSetBase.NonEmpty<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/MultiSetBase/Types.interface":{"id":"rimbu_multiset/custom/MultiSetBase/Types.interface","title":"MultiSetBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multiset/custom/MultiSetBuilder.class":{"id":"rimbu_multiset/custom/MultiSetBuilder.class","title":"MultiSetBuilder<T,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/MultiSetContext.class":{"id":"rimbu_multiset/custom/MultiSetContext.class","title":"MultiSetContext<UT,N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/MultiSetEmpty.class":{"id":"rimbu_multiset/custom/MultiSetEmpty.class","title":"MultiSetEmpty<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/MultiSetNonEmpty.class":{"id":"rimbu_multiset/custom/MultiSetNonEmpty.class","title":"MultiSetNonEmpty<T,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/SortedMultiSetCreators.interface":{"id":"rimbu_multiset/custom/SortedMultiSetCreators.interface","title":"SortedMultiSetCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/VariantMultiSetBase.interface":{"id":"rimbu_multiset/custom/VariantMultiSetBase.interface","title":"VariantMultiSetBase<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/VariantMultiSetBase/index":{"id":"rimbu_multiset/custom/VariantMultiSetBase/index","title":"VariantMultiSetBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/VariantMultiSetBase/NonEmpty.interface":{"id":"rimbu_multiset/custom/VariantMultiSetBase/NonEmpty.interface","title":"VariantMultiSetBase.NonEmpty<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_multiset/custom/VariantMultiSetBase/Types.interface":{"id":"rimbu_multiset/custom/VariantMultiSetBase/Types.interface","title":"VariantMultiSetBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multiset/HashMultiSet.interface":{"id":"rimbu_multiset/HashMultiSet.interface","title":"HashMultiSet<T>","description":"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the HashMultiSet API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/HashMultiSet/Builder.interface":{"id":"rimbu_multiset/HashMultiSet/Builder.interface","title":"HashMultiSet.Builder<T>","description":"A mutable HashMultiSet builder used to efficiently create new immutable instances. See the MultiSet documentation and the HashMultiSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/HashMultiSet/Context.interface":{"id":"rimbu_multiset/HashMultiSet/Context.interface","title":"HashMultiSet.Context<UT>","description":"A context instance for an HashMultiSet that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_multiset/HashMultiSet/index":{"id":"rimbu_multiset/HashMultiSet/index","title":"HashMultiSet (namespace)","description":"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the HashMultiSet API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/HashMultiSet/NonEmpty.interface":{"id":"rimbu_multiset/HashMultiSet/NonEmpty.interface","title":"HashMultiSet.NonEmpty<T>","description":"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the HashMultiSet API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/HashMultiSet/Types.interface":{"id":"rimbu_multiset/HashMultiSet/Types.interface","title":"HashMultiSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multiset/index":{"id":"rimbu_multiset/index","title":"@rimbu/multiset","description":"The @rimbu/multiset package provides implementations for various MultiSets.","sidebar":"defaultSidebar"},"rimbu_multiset/MultiSet.interface":{"id":"rimbu_multiset/MultiSet.interface","title":"MultiSet<T>","description":"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the MultiSet API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/MultiSet/Builder.interface":{"id":"rimbu_multiset/MultiSet/Builder.interface","title":"MultiSet.Builder<T>","description":"A mutable MultiSet builder used to efficiently create new immutable instances. See the MultiSet documentation and the MultiSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/MultiSet/Context.interface":{"id":"rimbu_multiset/MultiSet/Context.interface","title":"MultiSet.Context<UT>","description":"A context instance for MultiSet implementations that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_multiset/MultiSet/index":{"id":"rimbu_multiset/MultiSet/index","title":"MultiSet (namespace)","description":"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the MultiSet API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/MultiSet/NonEmpty.interface":{"id":"rimbu_multiset/MultiSet/NonEmpty.interface","title":"MultiSet.NonEmpty<T>","description":"A non-empty type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the MultiSet API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/MultiSet/Types.interface":{"id":"rimbu_multiset/MultiSet/Types.interface","title":"MultiSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multiset/SortedMultiSet.interface":{"id":"rimbu_multiset/SortedMultiSet.interface","title":"SortedMultiSet<T>","description":"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the SortedMultiSet API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/SortedMultiSet/Builder.interface":{"id":"rimbu_multiset/SortedMultiSet/Builder.interface","title":"SortedMultiSet.Builder<T>","description":"A mutable SortedMultiSet builder used to efficiently create new immutable instances. See the MultiSet documentation and the SortedMultiSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/SortedMultiSet/Context.interface":{"id":"rimbu_multiset/SortedMultiSet/Context.interface","title":"SortedMultiSet.Context<UT>","description":"A context instance for an SortedMultiSet that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_multiset/SortedMultiSet/index":{"id":"rimbu_multiset/SortedMultiSet/index","title":"SortedMultiSet (namespace)","description":"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the SortedMultiSet API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/SortedMultiSet/NonEmpty.interface":{"id":"rimbu_multiset/SortedMultiSet/NonEmpty.interface","title":"SortedMultiSet.NonEmpty<T>","description":"A type-invariant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the SortedMultiSet API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/SortedMultiSet/Types.interface":{"id":"rimbu_multiset/SortedMultiSet/Types.interface","title":"SortedMultiSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_multiset/VariantMultiSet.interface":{"id":"rimbu_multiset/VariantMultiSet.interface","title":"VariantMultiSet<T>","description":"A type-variant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the VariantMultiSet API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/VariantMultiSet/index":{"id":"rimbu_multiset/VariantMultiSet/index","title":"VariantMultiSet (namespace)","description":"A type-variant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the VariantMultiSet API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/VariantMultiSet/NonEmpty.interface":{"id":"rimbu_multiset/VariantMultiSet/NonEmpty.interface","title":"VariantMultiSet.NonEmpty<T>","description":"A non-empty type-variant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the VariantMultiSet API documentation","sidebar":"defaultSidebar"},"rimbu_multiset/VariantMultiSet/Types.interface":{"id":"rimbu_multiset/VariantMultiSet/Types.interface","title":"VariantMultiSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/index":{"id":"rimbu_ordered/index","title":"@rimbu/ordered","description":"The @rimbu/ordered package provides various OrderedMap and OrderedSet implementations.","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/index":{"id":"rimbu_ordered/map-custom/index","title":"@rimbu/ordered/map-custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedHashMapCreators.interface":{"id":"rimbu_ordered/map-custom/OrderedHashMapCreators.interface","title":"OrderedHashMapCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedMapBase.interface":{"id":"rimbu_ordered/map-custom/OrderedMapBase.interface","title":"OrderedMapBase<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedMapBase/Builder.interface":{"id":"rimbu_ordered/map-custom/OrderedMapBase/Builder.interface","title":"OrderedMapBase.Builder<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedMapBase/Context.interface":{"id":"rimbu_ordered/map-custom/OrderedMapBase/Context.interface","title":"OrderedMapBase.Context<UK,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedMapBase/index":{"id":"rimbu_ordered/map-custom/OrderedMapBase/index","title":"OrderedMapBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedMapBase/NonEmpty.interface":{"id":"rimbu_ordered/map-custom/OrderedMapBase/NonEmpty.interface","title":"OrderedMapBase.NonEmpty<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedMapBase/Types.interface":{"id":"rimbu_ordered/map-custom/OrderedMapBase/Types.interface","title":"OrderedMapBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedMapBuilder.class":{"id":"rimbu_ordered/map-custom/OrderedMapBuilder.class","title":"OrderedMapBuilder<K,V,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedMapContextImpl.class":{"id":"rimbu_ordered/map-custom/OrderedMapContextImpl.class","title":"OrderedMapContextImpl<UK,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedMapEmpty.class":{"id":"rimbu_ordered/map-custom/OrderedMapEmpty.class","title":"OrderedMapEmpty<K,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedMapNonEmpty.class":{"id":"rimbu_ordered/map-custom/OrderedMapNonEmpty.class","title":"OrderedMapNonEmpty<K,V,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedMapTypes.interface":{"id":"rimbu_ordered/map-custom/OrderedMapTypes.interface","title":"OrderedMapTypes","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map-custom/OrderedSortedMapCreators.interface":{"id":"rimbu_ordered/map-custom/OrderedSortedMapCreators.interface","title":"OrderedSortedMapCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/map/index":{"id":"rimbu_ordered/map/index","title":"@rimbu/ordered/map","description":"The @rimbu/ordered/map package provides various OrderedMap implementations.","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedHashMap.interface":{"id":"rimbu_ordered/map/OrderedHashMap.interface","title":"OrderedHashMap<K,V>","description":"A type-invariant immutable Ordered HashMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedHashMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedHashMap/Builder.interface":{"id":"rimbu_ordered/map/OrderedHashMap/Builder.interface","title":"OrderedHashMap.Builder<K,V>","description":"A mutable OrderedHashMap builder used to efficiently create new immutable instances. See the Map documentation and the OrderedHashMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedHashMap/Context.interface":{"id":"rimbu_ordered/map/OrderedHashMap/Context.interface","title":"OrderedHashMap.Context<UK>","description":"A context instance for an OrderedHashMap that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedHashMap/index":{"id":"rimbu_ordered/map/OrderedHashMap/index","title":"OrderedHashMap (namespace)","description":"A type-invariant immutable Ordered HashMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedHashMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedHashMap/NonEmpty.interface":{"id":"rimbu_ordered/map/OrderedHashMap/NonEmpty.interface","title":"OrderedHashMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable Ordered HashMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedHashMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedHashMap/Types.interface":{"id":"rimbu_ordered/map/OrderedHashMap/Types.interface","title":"OrderedHashMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedMap.interface":{"id":"rimbu_ordered/map/OrderedMap.interface","title":"OrderedMap<K,V>","description":"A type-invariant immutable Ordered Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedMap/Builder.interface":{"id":"rimbu_ordered/map/OrderedMap/Builder.interface","title":"OrderedMap.Builder<K,V>","description":"A mutable OrderedMap builder used to efficiently create new immutable instances. See the Map documentation and the OrderedMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedMap/Context.interface":{"id":"rimbu_ordered/map/OrderedMap/Context.interface","title":"OrderedMap.Context<UK>","description":"A context instance for an OrderedMap that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedMap/index":{"id":"rimbu_ordered/map/OrderedMap/index","title":"OrderedMap (namespace)","description":"A type-invariant immutable Ordered Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedMap/NonEmpty.interface":{"id":"rimbu_ordered/map/OrderedMap/NonEmpty.interface","title":"OrderedMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable Ordered Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedMap/Types.interface":{"id":"rimbu_ordered/map/OrderedMap/Types.interface","title":"OrderedMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedSortedMap.interface":{"id":"rimbu_ordered/map/OrderedSortedMap.interface","title":"OrderedSortedMap<K,V>","description":"A type-invariant immutable Ordered SortedMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedSortedMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedSortedMap/Builder.interface":{"id":"rimbu_ordered/map/OrderedSortedMap/Builder.interface","title":"OrderedSortedMap.Builder<K,V>","description":"A mutable OrderedSortedMap builder used to efficiently create new immutable instances. See the Map documentation and the OrderedSortedMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedSortedMap/Context.interface":{"id":"rimbu_ordered/map/OrderedSortedMap/Context.interface","title":"OrderedSortedMap.Context<UK>","description":"A context instance for an OrderedSortedMap that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedSortedMap/index":{"id":"rimbu_ordered/map/OrderedSortedMap/index","title":"OrderedSortedMap (namespace)","description":"A type-invariant immutable Ordered SortedMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedSortedMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedSortedMap/NonEmpty.interface":{"id":"rimbu_ordered/map/OrderedSortedMap/NonEmpty.interface","title":"OrderedSortedMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable Ordered SortedMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedSortedMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/map/OrderedSortedMap/Types.interface":{"id":"rimbu_ordered/map/OrderedSortedMap/Types.interface","title":"OrderedSortedMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedHashMap.interface":{"id":"rimbu_ordered/OrderedHashMap.interface","title":"OrderedHashMap<K,V>","description":"A type-invariant immutable Ordered HashMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedHashMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedHashMap/Builder.interface":{"id":"rimbu_ordered/OrderedHashMap/Builder.interface","title":"OrderedHashMap.Builder<K,V>","description":"A mutable OrderedHashMap builder used to efficiently create new immutable instances. See the Map documentation and the OrderedHashMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedHashMap/Context.interface":{"id":"rimbu_ordered/OrderedHashMap/Context.interface","title":"OrderedHashMap.Context<UK>","description":"A context instance for an OrderedHashMap that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedHashMap/index":{"id":"rimbu_ordered/OrderedHashMap/index","title":"OrderedHashMap (namespace)","description":"A type-invariant immutable Ordered HashMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedHashMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedHashMap/NonEmpty.interface":{"id":"rimbu_ordered/OrderedHashMap/NonEmpty.interface","title":"OrderedHashMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable Ordered HashMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedHashMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedHashMap/Types.interface":{"id":"rimbu_ordered/OrderedHashMap/Types.interface","title":"OrderedHashMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedHashSet.interface":{"id":"rimbu_ordered/OrderedHashSet.interface","title":"OrderedHashSet<T>","description":"A type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedHashSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedHashSet/Builder.interface":{"id":"rimbu_ordered/OrderedHashSet/Builder.interface","title":"OrderedHashSet.Builder<T>","description":"A mutable OrderedHashSet builder used to efficiently create new immutable instances. See the Set documentation and the OrderedHashSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedHashSet/Context.interface":{"id":"rimbu_ordered/OrderedHashSet/Context.interface","title":"OrderedHashSet.Context<UT>","description":"A context instance for an OrderedHashSet that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedHashSet/index":{"id":"rimbu_ordered/OrderedHashSet/index","title":"OrderedHashSet (namespace)","description":"A type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedHashSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedHashSet/NonEmpty.interface":{"id":"rimbu_ordered/OrderedHashSet/NonEmpty.interface","title":"OrderedHashSet.NonEmpty<T>","description":"A non-empty type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedHashSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedHashSet/Types.interface":{"id":"rimbu_ordered/OrderedHashSet/Types.interface","title":"OrderedHashSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedMap.interface":{"id":"rimbu_ordered/OrderedMap.interface","title":"OrderedMap<K,V>","description":"A type-invariant immutable Ordered Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedMap.var":{"id":"rimbu_ordered/OrderedMap.var","title":"OrderedMap","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedMap/Builder.interface":{"id":"rimbu_ordered/OrderedMap/Builder.interface","title":"OrderedMap.Builder<K,V>","description":"A mutable OrderedMap builder used to efficiently create new immutable instances. See the Map documentation and the OrderedMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedMap/Context.interface":{"id":"rimbu_ordered/OrderedMap/Context.interface","title":"OrderedMap.Context<UK>","description":"A context instance for an OrderedMap that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedMap/index":{"id":"rimbu_ordered/OrderedMap/index","title":"OrderedMap (namespace)","description":"A type-invariant immutable Ordered Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedMap/NonEmpty.interface":{"id":"rimbu_ordered/OrderedMap/NonEmpty.interface","title":"OrderedMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable Ordered Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedMap/Types.interface":{"id":"rimbu_ordered/OrderedMap/Types.interface","title":"OrderedMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSet.interface":{"id":"rimbu_ordered/OrderedSet.interface","title":"OrderedSet<T>","description":"A type-invariant immutable Ordered Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSet.var":{"id":"rimbu_ordered/OrderedSet.var","title":"OrderedSet","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSet/Builder.interface":{"id":"rimbu_ordered/OrderedSet/Builder.interface","title":"OrderedSet.Builder<T>","description":"A mutable OrderedSet builder used to efficiently create new immutable instances. See the Set documentation and the OrderedSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSet/Context.interface":{"id":"rimbu_ordered/OrderedSet/Context.interface","title":"OrderedSet.Context<UT>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSet/index":{"id":"rimbu_ordered/OrderedSet/index","title":"OrderedSet (namespace)","description":"A type-invariant immutable Ordered Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSet/NonEmpty.interface":{"id":"rimbu_ordered/OrderedSet/NonEmpty.interface","title":"OrderedSet.NonEmpty<T>","description":"A non-empty type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSet/Types.interface":{"id":"rimbu_ordered/OrderedSet/Types.interface","title":"OrderedSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSortedMap.interface":{"id":"rimbu_ordered/OrderedSortedMap.interface","title":"OrderedSortedMap<K,V>","description":"A type-invariant immutable Ordered SortedMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedSortedMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSortedMap/Builder.interface":{"id":"rimbu_ordered/OrderedSortedMap/Builder.interface","title":"OrderedSortedMap.Builder<K,V>","description":"A mutable OrderedSortedMap builder used to efficiently create new immutable instances. See the Map documentation and the OrderedSortedMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSortedMap/Context.interface":{"id":"rimbu_ordered/OrderedSortedMap/Context.interface","title":"OrderedSortedMap.Context<UK>","description":"A context instance for an OrderedSortedMap that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSortedMap/index":{"id":"rimbu_ordered/OrderedSortedMap/index","title":"OrderedSortedMap (namespace)","description":"A type-invariant immutable Ordered SortedMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedSortedMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSortedMap/NonEmpty.interface":{"id":"rimbu_ordered/OrderedSortedMap/NonEmpty.interface","title":"OrderedSortedMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable Ordered SortedMap of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the OrderedSortedMap API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSortedMap/Types.interface":{"id":"rimbu_ordered/OrderedSortedMap/Types.interface","title":"OrderedSortedMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSortedSet.interface":{"id":"rimbu_ordered/OrderedSortedSet.interface","title":"OrderedSortedSet<T>","description":"A type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSortedSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSortedSet/Builder.interface":{"id":"rimbu_ordered/OrderedSortedSet/Builder.interface","title":"OrderedSortedSet.Builder<T>","description":"A mutable OrderedSortedSet builder used to efficiently create new immutable instances. See the Set documentation and the OrderedSortedSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSortedSet/Context.interface":{"id":"rimbu_ordered/OrderedSortedSet/Context.interface","title":"OrderedSortedSet.Context<UT>","description":"A context instance for an OrderedSortedSet that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSortedSet/index":{"id":"rimbu_ordered/OrderedSortedSet/index","title":"OrderedSortedSet (namespace)","description":"A type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSortedSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSortedSet/NonEmpty.interface":{"id":"rimbu_ordered/OrderedSortedSet/NonEmpty.interface","title":"OrderedSortedSet.NonEmpty<T>","description":"A non-empty type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSortedSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/OrderedSortedSet/Types.interface":{"id":"rimbu_ordered/OrderedSortedSet/Types.interface","title":"OrderedSortedSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/index":{"id":"rimbu_ordered/set-custom/index","title":"@rimbu/ordered/set-custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedHashSetCreators.interface":{"id":"rimbu_ordered/set-custom/OrderedHashSetCreators.interface","title":"OrderedHashSetCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedSetBase.interface":{"id":"rimbu_ordered/set-custom/OrderedSetBase.interface","title":"OrderedSetBase<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedSetBase/Builder.interface":{"id":"rimbu_ordered/set-custom/OrderedSetBase/Builder.interface","title":"OrderedSetBase.Builder<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedSetBase/Context.interface":{"id":"rimbu_ordered/set-custom/OrderedSetBase/Context.interface","title":"OrderedSetBase.Context<UT,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedSetBase/index":{"id":"rimbu_ordered/set-custom/OrderedSetBase/index","title":"OrderedSetBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedSetBase/NonEmpty.interface":{"id":"rimbu_ordered/set-custom/OrderedSetBase/NonEmpty.interface","title":"OrderedSetBase.NonEmpty<T,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedSetBase/Types.interface":{"id":"rimbu_ordered/set-custom/OrderedSetBase/Types.interface","title":"OrderedSetBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedSetBuilder.class":{"id":"rimbu_ordered/set-custom/OrderedSetBuilder.class","title":"OrderedSetBuilder<T,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedSetContextImpl.class":{"id":"rimbu_ordered/set-custom/OrderedSetContextImpl.class","title":"OrderedSetContextImpl<UT,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedSetEmpty.class":{"id":"rimbu_ordered/set-custom/OrderedSetEmpty.class","title":"OrderedSetEmpty<T,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedSetNonEmpty.class":{"id":"rimbu_ordered/set-custom/OrderedSetNonEmpty.class","title":"OrderedSetNonEmpty<T,Tp,TpG>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedSetTypes.interface":{"id":"rimbu_ordered/set-custom/OrderedSetTypes.interface","title":"OrderedSetTypes","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set-custom/OrderedSortedSetCreators.interface":{"id":"rimbu_ordered/set-custom/OrderedSortedSetCreators.interface","title":"OrderedSortedSetCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set/index":{"id":"rimbu_ordered/set/index","title":"@rimbu/ordered/set","description":"The @rimbu/ordered/set package provides various OrderedSet implementations.","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedHashSet.interface":{"id":"rimbu_ordered/set/OrderedHashSet.interface","title":"OrderedHashSet<T>","description":"A type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedHashSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedHashSet/Builder.interface":{"id":"rimbu_ordered/set/OrderedHashSet/Builder.interface","title":"OrderedHashSet.Builder<T>","description":"A mutable OrderedHashSet builder used to efficiently create new immutable instances. See the Set documentation and the OrderedHashSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedHashSet/Context.interface":{"id":"rimbu_ordered/set/OrderedHashSet/Context.interface","title":"OrderedHashSet.Context<UT>","description":"A context instance for an OrderedHashSet that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedHashSet/index":{"id":"rimbu_ordered/set/OrderedHashSet/index","title":"OrderedHashSet (namespace)","description":"A type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedHashSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedHashSet/NonEmpty.interface":{"id":"rimbu_ordered/set/OrderedHashSet/NonEmpty.interface","title":"OrderedHashSet.NonEmpty<T>","description":"A non-empty type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedHashSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedHashSet/Types.interface":{"id":"rimbu_ordered/set/OrderedHashSet/Types.interface","title":"OrderedHashSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedSet.interface":{"id":"rimbu_ordered/set/OrderedSet.interface","title":"OrderedSet<T>","description":"A type-invariant immutable Ordered Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedSet/Builder.interface":{"id":"rimbu_ordered/set/OrderedSet/Builder.interface","title":"OrderedSet.Builder<T>","description":"A mutable OrderedSet builder used to efficiently create new immutable instances. See the Set documentation and the OrderedSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedSet/Context.interface":{"id":"rimbu_ordered/set/OrderedSet/Context.interface","title":"OrderedSet.Context<UT>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedSet/index":{"id":"rimbu_ordered/set/OrderedSet/index","title":"OrderedSet (namespace)","description":"A type-invariant immutable Ordered Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedSet/NonEmpty.interface":{"id":"rimbu_ordered/set/OrderedSet/NonEmpty.interface","title":"OrderedSet.NonEmpty<T>","description":"A non-empty type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedSet/Types.interface":{"id":"rimbu_ordered/set/OrderedSet/Types.interface","title":"OrderedSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedSortedSet.interface":{"id":"rimbu_ordered/set/OrderedSortedSet.interface","title":"OrderedSortedSet<T>","description":"A type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSortedSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedSortedSet/Builder.interface":{"id":"rimbu_ordered/set/OrderedSortedSet/Builder.interface","title":"OrderedSortedSet.Builder<T>","description":"A mutable OrderedSortedSet builder used to efficiently create new immutable instances. See the Set documentation and the OrderedSortedSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedSortedSet/Context.interface":{"id":"rimbu_ordered/set/OrderedSortedSet/Context.interface","title":"OrderedSortedSet.Context<UT>","description":"A context instance for an OrderedSortedSet that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedSortedSet/index":{"id":"rimbu_ordered/set/OrderedSortedSet/index","title":"OrderedSortedSet (namespace)","description":"A type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSortedSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedSortedSet/NonEmpty.interface":{"id":"rimbu_ordered/set/OrderedSortedSet/NonEmpty.interface","title":"OrderedSortedSet.NonEmpty<T>","description":"A non-empty type-invariant immutable Ordered SortedSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedSortedSet API documentation","sidebar":"defaultSidebar"},"rimbu_ordered/set/OrderedSortedSet/Types.interface":{"id":"rimbu_ordered/set/OrderedSortedSet/Types.interface","title":"OrderedSortedSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_sorted/index":{"id":"rimbu_sorted/index","title":"@rimbu/sorted","description":"The @rimbu/sorted package provides implementations for sorted maps and sets.","sidebar":"defaultSidebar"},"rimbu_sorted/map-custom/index":{"id":"rimbu_sorted/map-custom/index","title":"@rimbu/sorted/map-custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/map-custom/SortedMapBuilder.class":{"id":"rimbu_sorted/map-custom/SortedMapBuilder.class","title":"SortedMapBuilder<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/map-custom/SortedMapContext.class":{"id":"rimbu_sorted/map-custom/SortedMapContext.class","title":"SortedMapContext<UK>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/map-custom/SortedMapCreators.interface":{"id":"rimbu_sorted/map-custom/SortedMapCreators.interface","title":"SortedMapCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/map-custom/SortedMapEmpty.class":{"id":"rimbu_sorted/map-custom/SortedMapEmpty.class","title":"SortedMapEmpty<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/map-custom/SortedMapInner.class":{"id":"rimbu_sorted/map-custom/SortedMapInner.class","title":"SortedMapInner<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/map-custom/SortedMapLeaf.class":{"id":"rimbu_sorted/map-custom/SortedMapLeaf.class","title":"SortedMapLeaf<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/map-custom/SortedMapNode.class":{"id":"rimbu_sorted/map-custom/SortedMapNode.class","title":"SortedMapNode<K,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/map/index":{"id":"rimbu_sorted/map/index","title":"@rimbu/sorted/map","description":"The @rimbu/sorted/map package provides SortedMap implementations.","sidebar":"defaultSidebar"},"rimbu_sorted/map/SortedMap.interface":{"id":"rimbu_sorted/map/SortedMap.interface","title":"SortedMap<K,V>","description":"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the SortedMap API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/map/SortedMap/Builder.interface":{"id":"rimbu_sorted/map/SortedMap/Builder.interface","title":"SortedMap.Builder<K,V>","description":"A mutable SortedMap builder used to efficiently create new immutable instances. See the Map documentation and the SortedMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/map/SortedMap/Context.interface":{"id":"rimbu_sorted/map/SortedMap/Context.interface","title":"SortedMap.Context<UK>","description":"A context instance for a HashMap that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_sorted/map/SortedMap/index":{"id":"rimbu_sorted/map/SortedMap/index","title":"SortedMap (namespace)","description":"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the SortedMap API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/map/SortedMap/NonEmpty.interface":{"id":"rimbu_sorted/map/SortedMap/NonEmpty.interface","title":"SortedMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the SortedMap API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/map/SortedMap/Types.interface":{"id":"rimbu_sorted/map/SortedMap/Types.interface","title":"SortedMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_sorted/set-custom/index":{"id":"rimbu_sorted/set-custom/index","title":"@rimbu/sorted/set-custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/set-custom/SortedSetBuilder.class":{"id":"rimbu_sorted/set-custom/SortedSetBuilder.class","title":"SortedSetBuilder<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/set-custom/SortedSetContext.class":{"id":"rimbu_sorted/set-custom/SortedSetContext.class","title":"SortedSetContext<UT>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/set-custom/SortedSetCreators.interface":{"id":"rimbu_sorted/set-custom/SortedSetCreators.interface","title":"SortedSetCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/set-custom/SortedSetEmpty.class":{"id":"rimbu_sorted/set-custom/SortedSetEmpty.class","title":"SortedSetEmpty<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/set-custom/SortedSetInner.class":{"id":"rimbu_sorted/set-custom/SortedSetInner.class","title":"SortedSetInner<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/set-custom/SortedSetLeaf.class":{"id":"rimbu_sorted/set-custom/SortedSetLeaf.class","title":"SortedSetLeaf<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/set-custom/SortedSetNode.class":{"id":"rimbu_sorted/set-custom/SortedSetNode.class","title":"SortedSetNode<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_sorted/set/index":{"id":"rimbu_sorted/set/index","title":"@rimbu/sorted/set","description":"The @rimbu/sorted/set package provides SortedSet implementations.","sidebar":"defaultSidebar"},"rimbu_sorted/set/SortedSet.interface":{"id":"rimbu_sorted/set/SortedSet.interface","title":"SortedSet<T>","description":"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the SortedSet API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/set/SortedSet/Builder.interface":{"id":"rimbu_sorted/set/SortedSet/Builder.interface","title":"SortedSet.Builder<T>","description":"A mutable SortedSet builder used to efficiently create new immutable instances. See the Set documentation and the SortedSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/set/SortedSet/Context.interface":{"id":"rimbu_sorted/set/SortedSet/Context.interface","title":"SortedSet.Context<UT>","description":"A context instance for a SortedSet that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_sorted/set/SortedSet/index":{"id":"rimbu_sorted/set/SortedSet/index","title":"SortedSet (namespace)","description":"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the SortedSet API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/set/SortedSet/NonEmpty.interface":{"id":"rimbu_sorted/set/SortedSet/NonEmpty.interface","title":"SortedSet.NonEmpty<T>","description":"A non-empty type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the SortedSet API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/set/SortedSet/Types.interface":{"id":"rimbu_sorted/set/SortedSet/Types.interface","title":"SortedSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_sorted/SortedMap.interface":{"id":"rimbu_sorted/SortedMap.interface","title":"SortedMap<K,V>","description":"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the SortedMap API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/SortedMap/Builder.interface":{"id":"rimbu_sorted/SortedMap/Builder.interface","title":"SortedMap.Builder<K,V>","description":"A mutable SortedMap builder used to efficiently create new immutable instances. See the Map documentation and the SortedMap.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/SortedMap/Context.interface":{"id":"rimbu_sorted/SortedMap/Context.interface","title":"SortedMap.Context<UK>","description":"A context instance for a HashMap that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_sorted/SortedMap/index":{"id":"rimbu_sorted/SortedMap/index","title":"SortedMap (namespace)","description":"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the SortedMap API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/SortedMap/NonEmpty.interface":{"id":"rimbu_sorted/SortedMap/NonEmpty.interface","title":"SortedMap.NonEmpty<K,V>","description":"A non-empty type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the Map documentation and the SortedMap API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/SortedMap/Types.interface":{"id":"rimbu_sorted/SortedMap/Types.interface","title":"SortedMap.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_sorted/SortedSet.interface":{"id":"rimbu_sorted/SortedSet.interface","title":"SortedSet<T>","description":"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the SortedSet API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/SortedSet/Builder.interface":{"id":"rimbu_sorted/SortedSet/Builder.interface","title":"SortedSet.Builder<T>","description":"A mutable SortedSet builder used to efficiently create new immutable instances. See the Set documentation and the SortedSet.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/SortedSet/Context.interface":{"id":"rimbu_sorted/SortedSet/Context.interface","title":"SortedSet.Context<UT>","description":"A context instance for a SortedSet that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_sorted/SortedSet/index":{"id":"rimbu_sorted/SortedSet/index","title":"SortedSet (namespace)","description":"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the SortedSet API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/SortedSet/NonEmpty.interface":{"id":"rimbu_sorted/SortedSet/NonEmpty.interface","title":"SortedSet.NonEmpty<T>","description":"A non-empty type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the SortedSet API documentation","sidebar":"defaultSidebar"},"rimbu_sorted/SortedSet/Types.interface":{"id":"rimbu_sorted/SortedSet/Types.interface","title":"SortedSet.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncAppendIterator.class":{"id":"rimbu_stream/async-custom/AsyncAppendIterator.class","title":"AsyncAppendIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncCollectIterator.class":{"id":"rimbu_stream/async-custom/AsyncCollectIterator.class","title":"AsyncCollectIterator<T,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncConcatIterator.class":{"id":"rimbu_stream/async-custom/AsyncConcatIterator.class","title":"AsyncConcatIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncDropIterator.class":{"id":"rimbu_stream/async-custom/AsyncDropIterator.class","title":"AsyncDropIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncDropWhileIterator.class":{"id":"rimbu_stream/async-custom/AsyncDropWhileIterator.class","title":"AsyncDropWhileIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncFastIteratorBase.class":{"id":"rimbu_stream/async-custom/AsyncFastIteratorBase.class","title":"AsyncFastIteratorBase<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncFilterIterator.class":{"id":"rimbu_stream/async-custom/AsyncFilterIterator.class","title":"AsyncFilterIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncFilterPureIterator.class":{"id":"rimbu_stream/async-custom/AsyncFilterPureIterator.class","title":"AsyncFilterPureIterator<T,A>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncFlatMapIterator.class":{"id":"rimbu_stream/async-custom/AsyncFlatMapIterator.class","title":"AsyncFlatMapIterator<T,T2>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncFoldIterator.class":{"id":"rimbu_stream/async-custom/AsyncFoldIterator.class","title":"AsyncFoldIterator<I,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncFromStream.class":{"id":"rimbu_stream/async-custom/AsyncFromStream.class","title":"AsyncFromStream<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncIndexedIterator.class":{"id":"rimbu_stream/async-custom/AsyncIndexedIterator.class","title":"AsyncIndexedIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncIndicesOfIterator.class":{"id":"rimbu_stream/async-custom/AsyncIndicesOfIterator.class","title":"AsyncIndicesOfIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncIndicesWhereIterator.class":{"id":"rimbu_stream/async-custom/AsyncIndicesWhereIterator.class","title":"AsyncIndicesWhereIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncIntersperseIterator.class":{"id":"rimbu_stream/async-custom/AsyncIntersperseIterator.class","title":"AsyncIntersperseIterator<T,S>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncMapIterator.class":{"id":"rimbu_stream/async-custom/AsyncMapIterator.class","title":"AsyncMapIterator<T,T2>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncMapPureIterator.class":{"id":"rimbu_stream/async-custom/AsyncMapPureIterator.class","title":"AsyncMapPureIterator<T,A,T2>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncOfIterator.class":{"id":"rimbu_stream/async-custom/AsyncOfIterator.class","title":"AsyncOfIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncOfStream.class":{"id":"rimbu_stream/async-custom/AsyncOfStream.class","title":"AsyncOfStream<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncPrependIterator.class":{"id":"rimbu_stream/async-custom/AsyncPrependIterator.class","title":"AsyncPrependIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncReduceAllIterator.class":{"id":"rimbu_stream/async-custom/AsyncReduceAllIterator.class","title":"AsyncReduceAllIterator<I,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncReduceIterator.class":{"id":"rimbu_stream/async-custom/AsyncReduceIterator.class","title":"AsyncReduceIterator<I,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncRepeatIterator.class":{"id":"rimbu_stream/async-custom/AsyncRepeatIterator.class","title":"AsyncRepeatIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncSplitOnIterator.class":{"id":"rimbu_stream/async-custom/AsyncSplitOnIterator.class","title":"AsyncSplitOnIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncSplitWhereIterator.class":{"id":"rimbu_stream/async-custom/AsyncSplitWhereIterator.class","title":"AsyncSplitWhereIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncStreamBase.class":{"id":"rimbu_stream/async-custom/AsyncStreamBase.class","title":"AsyncStreamBase<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncStreamConstructors.interface":{"id":"rimbu_stream/async-custom/AsyncStreamConstructors.interface","title":"AsyncStreamConstructors","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncStreamConstructorsImpl.var":{"id":"rimbu_stream/async-custom/AsyncStreamConstructorsImpl.var","title":"AsyncStreamConstructorsImpl","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncTakeIterator.class":{"id":"rimbu_stream/async-custom/AsyncTakeIterator.class","title":"AsyncTakeIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncTakeWhileIterator.class":{"id":"rimbu_stream/async-custom/AsyncTakeWhileIterator.class","title":"AsyncTakeWhileIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncUnfoldIterator.class":{"id":"rimbu_stream/async-custom/AsyncUnfoldIterator.class","title":"AsyncUnfoldIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncZipAllWithItererator.class":{"id":"rimbu_stream/async-custom/AsyncZipAllWithItererator.class","title":"AsyncZipAllWithItererator<I,F,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/AsyncZipWithIterator.class":{"id":"rimbu_stream/async-custom/AsyncZipWithIterator.class","title":"AsyncZipWithIterator<I,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/emptyAsyncFastIterator.var":{"id":"rimbu_stream/async-custom/emptyAsyncFastIterator.var","title":"emptyAsyncFastIterator","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/emptyAsyncStream.var":{"id":"rimbu_stream/async-custom/emptyAsyncStream.var","title":"emptyAsyncStream","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/fixedDoneAsyncIteratorResult.var":{"id":"rimbu_stream/async-custom/fixedDoneAsyncIteratorResult.var","title":"fixedDoneAsyncIteratorResult","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/FromAsyncIterator.class":{"id":"rimbu_stream/async-custom/FromAsyncIterator.class","title":"FromAsyncIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/fromAsyncStreamSource.var":{"id":"rimbu_stream/async-custom/fromAsyncStreamSource.var","title":"fromAsyncStreamSource","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/FromIterator.class":{"id":"rimbu_stream/async-custom/FromIterator.class","title":"FromIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/FromPromise.class":{"id":"rimbu_stream/async-custom/FromPromise.class","title":"FromPromise<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/FromResource.class":{"id":"rimbu_stream/async-custom/FromResource.class","title":"FromResource<T,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/FromResourceIterator.class":{"id":"rimbu_stream/async-custom/FromResourceIterator.class","title":"FromResourceIterator<T,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/FromSource.class":{"id":"rimbu_stream/async-custom/FromSource.class","title":"FromSource<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async-custom/index":{"id":"rimbu_stream/async-custom/index","title":"@rimbu/stream/async-custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async/AsyncFastIterable.interface":{"id":"rimbu_stream/async/AsyncFastIterable.interface","title":"AsyncFastIterable<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async/AsyncFastIterator.interface":{"id":"rimbu_stream/async/AsyncFastIterator.interface","title":"AsyncFastIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async/AsyncStream.interface":{"id":"rimbu_stream/async/AsyncStream.interface","title":"AsyncStream<T>","description":"A possibly infinite asynchronous sequence of elements of type T. See the Stream documentation and the AsyncStream API documentation","sidebar":"defaultSidebar"},"rimbu_stream/async/AsyncStream/index":{"id":"rimbu_stream/async/AsyncStream/index","title":"AsyncStream (namespace)","description":"A possibly infinite asynchronous sequence of elements of type T. See the Stream documentation and the AsyncStream API documentation","sidebar":"defaultSidebar"},"rimbu_stream/async/AsyncStream/NonEmpty.interface":{"id":"rimbu_stream/async/AsyncStream/NonEmpty.interface","title":"AsyncStream.NonEmpty<T>","description":"A non-empty and possibly infinite asynchronous sequence of elements of type T. See the Stream documentation and the AsyncStream API documentation","sidebar":"defaultSidebar"},"rimbu_stream/async/AsyncStreamable.interface":{"id":"rimbu_stream/async/AsyncStreamable.interface","title":"AsyncStreamable<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async/AsyncStreamable/index":{"id":"rimbu_stream/async/AsyncStreamable/index","title":"AsyncStreamable (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async/AsyncStreamable/NonEmpty.interface":{"id":"rimbu_stream/async/AsyncStreamable/NonEmpty.interface","title":"AsyncStreamable.NonEmpty<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async/AsyncStreamSource.type":{"id":"rimbu_stream/async/AsyncStreamSource.type","title":"AsyncStreamSource","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async/AsyncStreamSource/index":{"id":"rimbu_stream/async/AsyncStreamSource/index","title":"AsyncStreamSource (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async/AsyncStreamSource/NonEmpty.type":{"id":"rimbu_stream/async/AsyncStreamSource/NonEmpty.type","title":"NonEmpty","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/async/index":{"id":"rimbu_stream/async/index","title":"@rimbu/stream/async","description":"The @rimbu/stream/async package provides the AsyncStream implementations.","sidebar":"defaultSidebar"},"rimbu_stream/AsyncFastIterable.interface":{"id":"rimbu_stream/AsyncFastIterable.interface","title":"AsyncFastIterable<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/AsyncFastIterator.interface":{"id":"rimbu_stream/AsyncFastIterator.interface","title":"AsyncFastIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/AsyncStream.interface":{"id":"rimbu_stream/AsyncStream.interface","title":"AsyncStream<T>","description":"A possibly infinite asynchronous sequence of elements of type T. See the Stream documentation and the AsyncStream API documentation","sidebar":"defaultSidebar"},"rimbu_stream/AsyncStream/index":{"id":"rimbu_stream/AsyncStream/index","title":"AsyncStream (namespace)","description":"A possibly infinite asynchronous sequence of elements of type T. See the Stream documentation and the AsyncStream API documentation","sidebar":"defaultSidebar"},"rimbu_stream/AsyncStream/NonEmpty.interface":{"id":"rimbu_stream/AsyncStream/NonEmpty.interface","title":"AsyncStream.NonEmpty<T>","description":"A non-empty and possibly infinite asynchronous sequence of elements of type T. See the Stream documentation and the AsyncStream API documentation","sidebar":"defaultSidebar"},"rimbu_stream/AsyncStreamable.interface":{"id":"rimbu_stream/AsyncStreamable.interface","title":"AsyncStreamable<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/AsyncStreamable/index":{"id":"rimbu_stream/AsyncStreamable/index","title":"AsyncStreamable (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/AsyncStreamable/NonEmpty.interface":{"id":"rimbu_stream/AsyncStreamable/NonEmpty.interface","title":"AsyncStreamable.NonEmpty<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/AsyncStreamSource.type":{"id":"rimbu_stream/AsyncStreamSource.type","title":"AsyncStreamSource","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/AsyncStreamSource/index":{"id":"rimbu_stream/AsyncStreamSource/index","title":"AsyncStreamSource (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/AsyncStreamSource/NonEmpty.type":{"id":"rimbu_stream/AsyncStreamSource/NonEmpty.type","title":"NonEmpty","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/AlwaysIterator.class":{"id":"rimbu_stream/custom/AlwaysIterator.class","title":"AlwaysIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/AlwaysStream.class":{"id":"rimbu_stream/custom/AlwaysStream.class","title":"AlwaysStream<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/AppendIterator.class":{"id":"rimbu_stream/custom/AppendIterator.class","title":"AppendIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/ArrayIterator.class":{"id":"rimbu_stream/custom/ArrayIterator.class","title":"ArrayIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/ArrayReverseIterator.class":{"id":"rimbu_stream/custom/ArrayReverseIterator.class","title":"ArrayReverseIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/ArrayStream.class":{"id":"rimbu_stream/custom/ArrayStream.class","title":"ArrayStream<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/CollectIterator.class":{"id":"rimbu_stream/custom/CollectIterator.class","title":"CollectIterator<T,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/ConcatIterator.class":{"id":"rimbu_stream/custom/ConcatIterator.class","title":"ConcatIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/DropIterator.class":{"id":"rimbu_stream/custom/DropIterator.class","title":"DropIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/DropWhileIterator.class":{"id":"rimbu_stream/custom/DropWhileIterator.class","title":"DropWhileIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/emptyFastIterator.var":{"id":"rimbu_stream/custom/emptyFastIterator.var","title":"emptyFastIterator","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/emptyStream.var":{"id":"rimbu_stream/custom/emptyStream.var","title":"emptyStream","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/FastIteratorBase.class":{"id":"rimbu_stream/custom/FastIteratorBase.class","title":"FastIteratorBase<T>","description":"A base class for FastIterator instances, that takes implements the default next function based on the abstract fastNext function.","sidebar":"defaultSidebar"},"rimbu_stream/custom/FilterApplyIterator.class":{"id":"rimbu_stream/custom/FilterApplyIterator.class","title":"FilterApplyIterator<T,A>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/FilterApplyStream.class":{"id":"rimbu_stream/custom/FilterApplyStream.class","title":"FilterApplyStream<T,A>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/FilterIterator.class":{"id":"rimbu_stream/custom/FilterIterator.class","title":"FilterIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/FilterPureIterator.class":{"id":"rimbu_stream/custom/FilterPureIterator.class","title":"FilterPureIterator<T,A>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/fixedDoneIteratorResult.var":{"id":"rimbu_stream/custom/fixedDoneIteratorResult.var","title":"fixedDoneIteratorResult","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/FlatMapIterator.class":{"id":"rimbu_stream/custom/FlatMapIterator.class","title":"FlatMapIterator<T,T2>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/FromIterable.class":{"id":"rimbu_stream/custom/FromIterable.class","title":"FromIterable<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/FromStream.class":{"id":"rimbu_stream/custom/FromStream.class","title":"FromStream<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/fromStreamSource.var":{"id":"rimbu_stream/custom/fromStreamSource.var","title":"fromStreamSource","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/index":{"id":"rimbu_stream/custom/index","title":"@rimbu/stream/custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/IndexedIterator.class":{"id":"rimbu_stream/custom/IndexedIterator.class","title":"IndexedIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/IndicesOfIterator.class":{"id":"rimbu_stream/custom/IndicesOfIterator.class","title":"IndicesOfIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/IndicesWhereIterator.class":{"id":"rimbu_stream/custom/IndicesWhereIterator.class","title":"IndicesWhereIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/IntersperseIterator.class":{"id":"rimbu_stream/custom/IntersperseIterator.class","title":"IntersperseIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/MapApplyIterator.class":{"id":"rimbu_stream/custom/MapApplyIterator.class","title":"MapApplyIterator<T,A,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/MapApplyStream.class":{"id":"rimbu_stream/custom/MapApplyStream.class","title":"MapApplyStream<T,A,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/MapIterator.class":{"id":"rimbu_stream/custom/MapIterator.class","title":"MapIterator<T,T2>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/MapPureIterator.class":{"id":"rimbu_stream/custom/MapPureIterator.class","title":"MapPureIterator<T,A,T2>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/PrependIterator.class":{"id":"rimbu_stream/custom/PrependIterator.class","title":"PrependIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/RandomIntIterator.class":{"id":"rimbu_stream/custom/RandomIntIterator.class","title":"RandomIntIterator","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/RandomIterator.class":{"id":"rimbu_stream/custom/RandomIterator.class","title":"RandomIterator","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/RangeDownIterator.class":{"id":"rimbu_stream/custom/RangeDownIterator.class","title":"RangeDownIterator","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/RangeStream.class":{"id":"rimbu_stream/custom/RangeStream.class","title":"RangeStream","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/RangeUpIterator.class":{"id":"rimbu_stream/custom/RangeUpIterator.class","title":"RangeUpIterator","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/ReduceAllIterator.class":{"id":"rimbu_stream/custom/ReduceAllIterator.class","title":"ReduceAllIterator<I,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/ReduceIterator.class":{"id":"rimbu_stream/custom/ReduceIterator.class","title":"ReduceIterator<I,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/RepeatIterator.class":{"id":"rimbu_stream/custom/RepeatIterator.class","title":"RepeatIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/SplitOnIterator.class":{"id":"rimbu_stream/custom/SplitOnIterator.class","title":"SplitOnIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/SplitWhereIterator.class":{"id":"rimbu_stream/custom/SplitWhereIterator.class","title":"SplitWhereIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/StreamBase.class":{"id":"rimbu_stream/custom/StreamBase.class","title":"StreamBase<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/StreamConstructors.interface":{"id":"rimbu_stream/custom/StreamConstructors.interface","title":"StreamConstructors","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/StreamConstructorsImpl.var":{"id":"rimbu_stream/custom/StreamConstructorsImpl.var","title":"StreamConstructorsImpl","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/TakeIterator.class":{"id":"rimbu_stream/custom/TakeIterator.class","title":"TakeIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/TakeWhileIterator.class":{"id":"rimbu_stream/custom/TakeWhileIterator.class","title":"TakeWhileIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/UnfoldIterator.class":{"id":"rimbu_stream/custom/UnfoldIterator.class","title":"UnfoldIterator<T>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/ZipAllWithItererator.class":{"id":"rimbu_stream/custom/ZipAllWithItererator.class","title":"ZipAllWithItererator<I,F,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/custom/ZipWithIterator.class":{"id":"rimbu_stream/custom/ZipWithIterator.class","title":"ZipWithIterator<I,R>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_stream/FastIterable.interface":{"id":"rimbu_stream/FastIterable.interface","title":"FastIterable<T>","description":"An interface that extends the standard Iterable interface to return a FastIterator instead of a normal Iterator.","sidebar":"defaultSidebar"},"rimbu_stream/FastIterator.interface":{"id":"rimbu_stream/FastIterator.interface","title":"FastIterator<T>","description":"An iterator that extends the default Iterator interface with methods that give more performance.","sidebar":"defaultSidebar"},"rimbu_stream/index":{"id":"rimbu_stream/index","title":"@rimbu/stream","description":"The @rimbu/stream package provides the Stream and AsyncStream implementations and many related utilities.","sidebar":"defaultSidebar"},"rimbu_stream/Stream.interface":{"id":"rimbu_stream/Stream.interface","title":"Stream<T>","description":"A possibly infinite sequence of elements of type T. See the Stream documentation and the Stream API documentation","sidebar":"defaultSidebar"},"rimbu_stream/Stream/index":{"id":"rimbu_stream/Stream/index","title":"Stream (namespace)","description":"A possibly infinite sequence of elements of type T. See the Stream documentation and the Stream API documentation","sidebar":"defaultSidebar"},"rimbu_stream/Stream/NonEmpty.interface":{"id":"rimbu_stream/Stream/NonEmpty.interface","title":"Stream.NonEmpty<T>","description":"A non-empty and possibly infinite sequence of elements of type T. See the Stream documentation and the Stream API documentation","sidebar":"defaultSidebar"},"rimbu_stream/Streamable.interface":{"id":"rimbu_stream/Streamable.interface","title":"Streamable<T>","description":"An object that can create a Stream of elements of type T.","sidebar":"defaultSidebar"},"rimbu_stream/Streamable/index":{"id":"rimbu_stream/Streamable/index","title":"Streamable (namespace)","description":"An object that can create a Stream of elements of type T.","sidebar":"defaultSidebar"},"rimbu_stream/Streamable/NonEmpty.interface":{"id":"rimbu_stream/Streamable/NonEmpty.interface","title":"Streamable.NonEmpty<T>","description":"An object that can create a non-empty Stream of elements of type T.","sidebar":"defaultSidebar"},"rimbu_stream/StreamSource.type":{"id":"rimbu_stream/StreamSource.type","title":"StreamSource","description":"Any object that is Iterable, a Stream, or can produce a Stream.","sidebar":"defaultSidebar"},"rimbu_stream/StreamSource/index":{"id":"rimbu_stream/StreamSource/index","title":"StreamSource (namespace)","description":"Any object that is Iterable, a Stream, or can produce a Stream.","sidebar":"defaultSidebar"},"rimbu_stream/StreamSource/NonEmpty.type":{"id":"rimbu_stream/StreamSource/NonEmpty.type","title":"NonEmpty","description":"Any object that is a non-empty Stream, can produce a non-empty Stream, or is a non-empty array.","sidebar":"defaultSidebar"},"rimbu_table/custom/ContextImplTypes.interface":{"id":"rimbu_table/custom/ContextImplTypes.interface","title":"ContextImplTypes","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/HashTableHashColumnCreators.interface":{"id":"rimbu_table/custom/HashTableHashColumnCreators.interface","title":"HashTableHashColumnCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/HashTableSortedColumnCreators.interface":{"id":"rimbu_table/custom/HashTableSortedColumnCreators.interface","title":"HashTableSortedColumnCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/index":{"id":"rimbu_table/custom/index","title":"@rimbu/table/custom","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/SortedTableHashColumnCreators.interface":{"id":"rimbu_table/custom/SortedTableHashColumnCreators.interface","title":"SortedTableHashColumnCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/SortedTableSortedColumnCreators.interface":{"id":"rimbu_table/custom/SortedTableSortedColumnCreators.interface","title":"SortedTableSortedColumnCreators","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/TableBase.interface":{"id":"rimbu_table/custom/TableBase.interface","title":"TableBase<R,C,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/TableBase/Builder.interface":{"id":"rimbu_table/custom/TableBase/Builder.interface","title":"TableBase.Builder<R,C,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/TableBase/Context.interface":{"id":"rimbu_table/custom/TableBase/Context.interface","title":"TableBase.Context<UR,UC,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/TableBase/Factory.interface":{"id":"rimbu_table/custom/TableBase/Factory.interface","title":"TableBase.Factory<Tp,UR,UC>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/TableBase/index":{"id":"rimbu_table/custom/TableBase/index","title":"TableBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/TableBase/NonEmpty.interface":{"id":"rimbu_table/custom/TableBase/NonEmpty.interface","title":"TableBase.NonEmpty<R,C,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/TableBase/Types.interface":{"id":"rimbu_table/custom/TableBase/Types.interface","title":"TableBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_table/custom/TableBuilder.class":{"id":"rimbu_table/custom/TableBuilder.class","title":"TableBuilder<R,C,V,Tp,TpR>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/TableContext.class":{"id":"rimbu_table/custom/TableContext.class","title":"TableContext<UR,UC,N,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/TableEmpty.class":{"id":"rimbu_table/custom/TableEmpty.class","title":"TableEmpty<R,C,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/TableNonEmpty.class":{"id":"rimbu_table/custom/TableNonEmpty.class","title":"TableNonEmpty<R,C,V,Tp,TpR>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/VariantTableBase.interface":{"id":"rimbu_table/custom/VariantTableBase.interface","title":"VariantTableBase<R,C,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/VariantTableBase/index":{"id":"rimbu_table/custom/VariantTableBase/index","title":"VariantTableBase (namespace)","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/VariantTableBase/NonEmpty.interface":{"id":"rimbu_table/custom/VariantTableBase/NonEmpty.interface","title":"VariantTableBase.NonEmpty<R,C,V,Tp>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/custom/VariantTableBase/Types.interface":{"id":"rimbu_table/custom/VariantTableBase/Types.interface","title":"VariantTableBase.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_table/hash-row/HashTableHashColumn.interface":{"id":"rimbu_table/hash-row/HashTableHashColumn.interface","title":"HashTableHashColumn<R,C,V>","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the HashTableHashColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/hash-row/HashTableHashColumn/Builder.interface":{"id":"rimbu_table/hash-row/HashTableHashColumn/Builder.interface","title":"HashTableHashColumn.Builder<R,C,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/hash-row/HashTableHashColumn/Context.interface":{"id":"rimbu_table/hash-row/HashTableHashColumn/Context.interface","title":"HashTableHashColumn.Context<UR,UC>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/hash-row/HashTableHashColumn/index":{"id":"rimbu_table/hash-row/HashTableHashColumn/index","title":"HashTableHashColumn (namespace)","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the HashTableHashColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/hash-row/HashTableHashColumn/NonEmpty.interface":{"id":"rimbu_table/hash-row/HashTableHashColumn/NonEmpty.interface","title":"HashTableHashColumn.NonEmpty<R,C,V>","description":"A non-empty type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the HashTableHashColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/hash-row/HashTableHashColumn/Types.interface":{"id":"rimbu_table/hash-row/HashTableHashColumn/Types.interface","title":"HashTableHashColumn.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_table/hash-row/HashTableSortedColumn.interface":{"id":"rimbu_table/hash-row/HashTableSortedColumn.interface","title":"HashTableSortedColumn<R,C,V>","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the HashTableSortedColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/hash-row/HashTableSortedColumn/Builder.interface":{"id":"rimbu_table/hash-row/HashTableSortedColumn/Builder.interface","title":"HashTableSortedColumn.Builder<R,C,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/hash-row/HashTableSortedColumn/Context.interface":{"id":"rimbu_table/hash-row/HashTableSortedColumn/Context.interface","title":"HashTableSortedColumn.Context<UR,UC>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/hash-row/HashTableSortedColumn/index":{"id":"rimbu_table/hash-row/HashTableSortedColumn/index","title":"HashTableSortedColumn (namespace)","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the HashTableSortedColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/hash-row/HashTableSortedColumn/NonEmpty.interface":{"id":"rimbu_table/hash-row/HashTableSortedColumn/NonEmpty.interface","title":"HashTableSortedColumn.NonEmpty<R,C,V>","description":"A non-empty type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the HashTableSortedColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/hash-row/HashTableSortedColumn/Types.interface":{"id":"rimbu_table/hash-row/HashTableSortedColumn/Types.interface","title":"HashTableSortedColumn.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_table/hash-row/index":{"id":"rimbu_table/hash-row/index","title":"@rimbu/table/hash-row","description":"The @rimbu/table/hash-row package provides tables with hashed row key implementations.","sidebar":"defaultSidebar"},"rimbu_table/HashTableHashColumn.interface":{"id":"rimbu_table/HashTableHashColumn.interface","title":"HashTableHashColumn<R,C,V>","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the HashTableHashColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/HashTableHashColumn/Builder.interface":{"id":"rimbu_table/HashTableHashColumn/Builder.interface","title":"HashTableHashColumn.Builder<R,C,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/HashTableHashColumn/Context.interface":{"id":"rimbu_table/HashTableHashColumn/Context.interface","title":"HashTableHashColumn.Context<UR,UC>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/HashTableHashColumn/index":{"id":"rimbu_table/HashTableHashColumn/index","title":"HashTableHashColumn (namespace)","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the HashTableHashColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/HashTableHashColumn/NonEmpty.interface":{"id":"rimbu_table/HashTableHashColumn/NonEmpty.interface","title":"HashTableHashColumn.NonEmpty<R,C,V>","description":"A non-empty type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the HashTableHashColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/HashTableHashColumn/Types.interface":{"id":"rimbu_table/HashTableHashColumn/Types.interface","title":"HashTableHashColumn.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_table/HashTableSortedColumn.interface":{"id":"rimbu_table/HashTableSortedColumn.interface","title":"HashTableSortedColumn<R,C,V>","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the HashTableSortedColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/HashTableSortedColumn/Builder.interface":{"id":"rimbu_table/HashTableSortedColumn/Builder.interface","title":"HashTableSortedColumn.Builder<R,C,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/HashTableSortedColumn/Context.interface":{"id":"rimbu_table/HashTableSortedColumn/Context.interface","title":"HashTableSortedColumn.Context<UR,UC>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/HashTableSortedColumn/index":{"id":"rimbu_table/HashTableSortedColumn/index","title":"HashTableSortedColumn (namespace)","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the HashTableSortedColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/HashTableSortedColumn/NonEmpty.interface":{"id":"rimbu_table/HashTableSortedColumn/NonEmpty.interface","title":"HashTableSortedColumn.NonEmpty<R,C,V>","description":"A non-empty type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the HashTableSortedColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/HashTableSortedColumn/Types.interface":{"id":"rimbu_table/HashTableSortedColumn/Types.interface","title":"HashTableSortedColumn.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_table/index":{"id":"rimbu_table/index","title":"@rimbu/table","description":"The @rimbu/table package provides implementations for tables (2-dimensional maps).","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/index":{"id":"rimbu_table/sorted-row/index","title":"@rimbu/table/sorted-row","description":"The @rimbu/table/sorted-row package provides tables with sorted row key implementations.","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/SortedTableHashColumn.interface":{"id":"rimbu_table/sorted-row/SortedTableHashColumn.interface","title":"SortedTableHashColumn<R,C,V>","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the SortedTableHashColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/SortedTableHashColumn/Builder.interface":{"id":"rimbu_table/sorted-row/SortedTableHashColumn/Builder.interface","title":"SortedTableHashColumn.Builder<R,C,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/SortedTableHashColumn/Context.interface":{"id":"rimbu_table/sorted-row/SortedTableHashColumn/Context.interface","title":"SortedTableHashColumn.Context<UR,UC>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/SortedTableHashColumn/index":{"id":"rimbu_table/sorted-row/SortedTableHashColumn/index","title":"SortedTableHashColumn (namespace)","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the SortedTableHashColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/SortedTableHashColumn/NonEmpty.interface":{"id":"rimbu_table/sorted-row/SortedTableHashColumn/NonEmpty.interface","title":"SortedTableHashColumn.NonEmpty<R,C,V>","description":"A non-empty type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value.","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/SortedTableHashColumn/Types.interface":{"id":"rimbu_table/sorted-row/SortedTableHashColumn/Types.interface","title":"SortedTableHashColumn.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/SortedTableSortedColumn.interface":{"id":"rimbu_table/sorted-row/SortedTableSortedColumn.interface","title":"SortedTableSortedColumn<R,C,V>","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the SortedTableSortedColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/SortedTableSortedColumn/Builder.interface":{"id":"rimbu_table/sorted-row/SortedTableSortedColumn/Builder.interface","title":"SortedTableSortedColumn.Builder<R,C,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/SortedTableSortedColumn/Context.interface":{"id":"rimbu_table/sorted-row/SortedTableSortedColumn/Context.interface","title":"SortedTableSortedColumn.Context<UR,UC>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/SortedTableSortedColumn/index":{"id":"rimbu_table/sorted-row/SortedTableSortedColumn/index","title":"SortedTableSortedColumn (namespace)","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the SortedTableSortedColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/SortedTableSortedColumn/NonEmpty.interface":{"id":"rimbu_table/sorted-row/SortedTableSortedColumn/NonEmpty.interface","title":"SortedTableSortedColumn.NonEmpty<R,C,V>","description":"A non-empty type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the SortedTableSortedColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/sorted-row/SortedTableSortedColumn/Types.interface":{"id":"rimbu_table/sorted-row/SortedTableSortedColumn/Types.interface","title":"SortedTableSortedColumn.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_table/SortedTableHashColumn.interface":{"id":"rimbu_table/SortedTableHashColumn.interface","title":"SortedTableHashColumn<R,C,V>","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the SortedTableHashColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/SortedTableHashColumn/Builder.interface":{"id":"rimbu_table/SortedTableHashColumn/Builder.interface","title":"SortedTableHashColumn.Builder<R,C,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/SortedTableHashColumn/Context.interface":{"id":"rimbu_table/SortedTableHashColumn/Context.interface","title":"SortedTableHashColumn.Context<UR,UC>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/SortedTableHashColumn/index":{"id":"rimbu_table/SortedTableHashColumn/index","title":"SortedTableHashColumn (namespace)","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the SortedTableHashColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/SortedTableHashColumn/NonEmpty.interface":{"id":"rimbu_table/SortedTableHashColumn/NonEmpty.interface","title":"SortedTableHashColumn.NonEmpty<R,C,V>","description":"A non-empty type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value.","sidebar":"defaultSidebar"},"rimbu_table/SortedTableHashColumn/Types.interface":{"id":"rimbu_table/SortedTableHashColumn/Types.interface","title":"SortedTableHashColumn.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_table/SortedTableSortedColumn.interface":{"id":"rimbu_table/SortedTableSortedColumn.interface","title":"SortedTableSortedColumn<R,C,V>","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the SortedTableSortedColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/SortedTableSortedColumn/Builder.interface":{"id":"rimbu_table/SortedTableSortedColumn/Builder.interface","title":"SortedTableSortedColumn.Builder<R,C,V>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/SortedTableSortedColumn/Context.interface":{"id":"rimbu_table/SortedTableSortedColumn/Context.interface","title":"SortedTableSortedColumn.Context<UR,UC>","description":"undocumented","sidebar":"defaultSidebar"},"rimbu_table/SortedTableSortedColumn/index":{"id":"rimbu_table/SortedTableSortedColumn/index","title":"SortedTableSortedColumn (namespace)","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the SortedTableSortedColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/SortedTableSortedColumn/NonEmpty.interface":{"id":"rimbu_table/SortedTableSortedColumn/NonEmpty.interface","title":"SortedTableSortedColumn.NonEmpty<R,C,V>","description":"A non-empty type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the SortedTableSortedColumn API documentation","sidebar":"defaultSidebar"},"rimbu_table/SortedTableSortedColumn/Types.interface":{"id":"rimbu_table/SortedTableSortedColumn/Types.interface","title":"SortedTableSortedColumn.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_table/Table.interface":{"id":"rimbu_table/Table.interface","title":"Table<R,C,V>","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the Table API documentation","sidebar":"defaultSidebar"},"rimbu_table/Table/Builder.interface":{"id":"rimbu_table/Table/Builder.interface","title":"Table.Builder<R,C,V>","description":"A mutable Table builder used to efficiently create new immutable instances. See the Table documentation and the Table.Builder API documentation","sidebar":"defaultSidebar"},"rimbu_table/Table/Context.interface":{"id":"rimbu_table/Table/Context.interface","title":"Table.Context<UR,UC>","description":"A context instance for Table implementations that acts as a factory for every instance of this type of collection.","sidebar":"defaultSidebar"},"rimbu_table/Table/index":{"id":"rimbu_table/Table/index","title":"Table (namespace)","description":"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the Table API documentation","sidebar":"defaultSidebar"},"rimbu_table/Table/NonEmpty.interface":{"id":"rimbu_table/Table/NonEmpty.interface","title":"Table.NonEmpty<R,C,V>","description":"A non-empty type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the Table API documentation","sidebar":"defaultSidebar"},"rimbu_table/Table/Types.interface":{"id":"rimbu_table/Table/Types.interface","title":"Table.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"},"rimbu_table/VariantTable.interface":{"id":"rimbu_table/VariantTable.interface","title":"VariantTable<R,C,V>","description":"A type-variant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the VariantTable API documentation","sidebar":"defaultSidebar"},"rimbu_table/VariantTable/index":{"id":"rimbu_table/VariantTable/index","title":"VariantTable (namespace)","description":"A type-variant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the VariantTable API documentation","sidebar":"defaultSidebar"},"rimbu_table/VariantTable/NonEmpty.interface":{"id":"rimbu_table/VariantTable/NonEmpty.interface","title":"VariantTable.NonEmpty<R,C,V>","description":"A non-empty type-variant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the Table documentation and the VariantTable API documentation","sidebar":"defaultSidebar"},"rimbu_table/VariantTable/Types.interface":{"id":"rimbu_table/VariantTable/Types.interface","title":"VariantTable.Types","description":"Utility interface that provides higher-kinded types for this collection.","sidebar":"defaultSidebar"}}}')}}]);