"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[76015],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>u});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=a.createContext({}),m=function(e){var r=a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=m(e.components);return a.createElement(l.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},h=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=m(t),h=n,u=c["".concat(l,".").concat(h)]||c[h]||d[h]||o;return t?a.createElement(u,i(i({ref:r},s),{},{components:t})):a.createElement(u,i({ref:r},s))}));function u(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=h;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p[c]="string"==typeof e?e:n,i[1]=p;for(var m=2;m<o;m++)i[m]=t[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},79788:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>b,contentTitle:()=>f,default:()=>v,frontMatter:()=>u,metadata:()=>y,toc:()=>N});var a=t(3905),n=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,s=(e,r,t)=>r in e?n(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,c=(e,r)=>{for(var t in r||(r={}))l.call(r,t)&&s(e,t,r[t]);if(p)for(var t of p(r))m.call(r,t)&&s(e,t,r[t]);return e},d=(e,r)=>o(e,i(r)),h=(e,r)=>{var t={};for(var a in e)l.call(e,a)&&r.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&p)for(var a of p(e))r.indexOf(a)<0&&m.call(e,a)&&(t[a]=e[a]);return t};const u={title:"ArrowGraphHashed.NonEmpty<N>",slug:"/rimbu/graph/ArrowGraphHashed/NonEmpty/interface"},f="interface ArrowGraphHashed.NonEmpty<N>",y={unversionedId:"rimbu_graph/ArrowGraphHashed/NonEmpty.interface",id:"rimbu_graph/ArrowGraphHashed/NonEmpty.interface",title:"ArrowGraphHashed.NonEmpty<N>",description:"A non-empty type-invariant immutable valued arrow (directed) graph. The connections are internally maintained using hashed collections See the Graph documentation and the ArrowGraphHashed API documentation",source:"@site/api/rimbu_graph/ArrowGraphHashed/NonEmpty.interface.mdx",sourceDirName:"rimbu_graph/ArrowGraphHashed",slug:"/rimbu/graph/ArrowGraphHashed/NonEmpty/interface",permalink:"/api/rimbu/graph/ArrowGraphHashed/NonEmpty/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"ArrowGraphHashed.NonEmpty<N>",slug:"/rimbu/graph/ArrowGraphHashed/NonEmpty/interface"},sidebar:"defaultSidebar",previous:{title:"ArrowGraphHashed.Context<UN>",permalink:"/api/rimbu/graph/ArrowGraphHashed/Context/interface"},next:{title:"ArrowGraphHashed.Types",permalink:"/api/rimbu/graph/ArrowGraphHashed/Types/interface"}},b={},N=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4}],g={toc:N},k="wrapper";function v(e){var r=e,{components:t}=r,n=h(r,["components"]);return(0,a.kt)(k,d(c(c({},g),n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",c({},{id:"interface-arrowgraphhashednonemptyn"}),(0,a.kt)("inlineCode",{parentName:"h1"},"interface ArrowGraphHashed.NonEmpty<N>")),(0,a.kt)("p",null,"A non-empty type-invariant immutable valued arrow (directed) graph. The connections are internally maintained using hashed collections See the ",(0,a.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,a.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/api/rimbu/graph/ArrowGraphHashed/interface"}),"ArrowGraphHashed API documentation")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Extends:")," ",(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Streamable.NonEmpty<T>")),", ",(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/graph/ArrowGraphHashed/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"ArrowGraphHashed<N>"))),(0,a.kt)("h2",c({},{id:"type-parameters"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",c({parentName:"tr"},{align:null}),"N"),(0,a.kt)("td",c({parentName:"tr"},{align:null}),"the node type")))),(0,a.kt)("h2",c({},{id:"methods"}),"Methods"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",c({},{id:"stream"}),(0,a.kt)("inlineCode",{parentName:"h3"},"stream")),(0,a.kt)("p",null,"Returns a non-empty ",(0,a.kt)("inlineCode",{parentName:"p"},"Stream")," containing all graph elements of this collection as single tuples for isolated nodes and 2-valued tuples of nodes for connections.")),(0,a.kt)("h4",c({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"stream(): "),(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,a.kt)("inlineCode",{parentName:"p"},"<GraphElement<N>>;"))),(0,a.kt)("admonition",c({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",c({parentName:"pre"},{className:"language-ts"}),"ArrowGraphHashed.of([1], [2, 3]).stream().toArray()  // => [[1], [2, 3]]\n"))),(0,a.kt)("h4",c({},{id:"overrides"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface#stream"}),"NonEmpty.stream"))))}v.isMDXComponent=!0}}]);