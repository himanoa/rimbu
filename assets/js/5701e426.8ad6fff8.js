"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[85675],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,p=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=c(a),d=r,y=s["".concat(l,".").concat(d)]||s[d]||u[d]||p;return a?n.createElement(y,i(i({ref:t},m),{},{components:a})):n.createElement(y,i({ref:t},m))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=a.length,i=new Array(p);i[0]=s;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<p;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},64317:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>b,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>y,toc:()=>f});var n=a(3905),r=Object.defineProperty,p=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,m=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,u=(e,t)=>{for(var a in t||(t={}))l.call(t,a)&&m(e,a,t[a]);if(o)for(var a of o(t))c.call(t,a)&&m(e,a,t[a]);return e};const s={title:"@rimbu/collection-types/map",slug:"/rimbu/collection-types/map"},d="package @rimbu/collection-types/map",y={unversionedId:"rimbu_collection-types/map/index",id:"rimbu_collection-types/map/index",title:"@rimbu/collection-types/map",description:"The @rimbu/collection-types/map package provides interfaces for the variant VariantMap and generic RMap types.",source:"@site/api/rimbu_collection-types/map/index.mdx",sourceDirName:"rimbu_collection-types/map",slug:"/rimbu/collection-types/map",permalink:"/api/rimbu/collection-types/map",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/collection-types/map",slug:"/rimbu/collection-types/map"},sidebar:"defaultSidebar",previous:{title:"@rimbu/collection-types",permalink:"/api/rimbu/collection-types"},next:{title:"RMap (namespace)",permalink:"/api/rimbu/collection-types/map/RMap/namespace"}},b={},f=[{value:"Interfaces",id:"interfaces",level:2},{value:"Namespaces",id:"namespaces",level:2}],k={toc:f};function h(e){var t,a=e,{components:r}=a,m=((e,t)=>{var a={};for(var n in e)l.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&c.call(e,n)&&(a[n]=e[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(t=u(u({},k),m),p(t,i({components:r,mdxType:"MDXLayout"}))),(0,n.kt)("h1",u({},{id:"package-rimbucollection-typesmap"}),(0,n.kt)("inlineCode",{parentName:"h1"},"package @rimbu/collection-types/map")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"@rimbu/collection-types/map")," package provides interfaces for the variant ",(0,n.kt)("inlineCode",{parentName:"p"},"VariantMap")," and generic ",(0,n.kt)("inlineCode",{parentName:"p"},"RMap")," types.\nSee the ",(0,n.kt)("a",u({parentName:"p"},{href:"/docs/collections/map"}),"Rimbu docs Map page")),(0,n.kt)("h2",u({},{id:"interfaces"}),"Interfaces"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/map/RMap/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"RMap<K,V>"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/map/RMap/interface"}),"RMap API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/map/VariantMap/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"VariantMap<K,V>"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-variant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/map/VariantMap/interface"}),"VariantMap API documentation"))))),(0,n.kt)("h2",u({},{id:"namespaces"}),"Namespaces"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/map/RMap/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"RMap"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/map/RMap/interface"}),"RMap API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/map/VariantMap/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"VariantMap"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-variant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/map/VariantMap/interface"}),"VariantMap API documentation"))))))}h.isMDXComponent=!0}}]);