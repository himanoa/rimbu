"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[83562],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>y});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),l=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(i.Provider,{value:r},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=l(t),m=o,y=s["".concat(i,".").concat(m)]||s[m]||f[m]||a;return t?n.createElement(y,p(p({ref:r},u),{},{components:t})):n.createElement(y,p({ref:r},u))}));function y(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,p=new Array(a);p[0]=m;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c[s]="string"==typeof e?e:o,p[1]=c;for(var l=2;l<a;l++)p[l]=t[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},95182:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>v,contentTitle:()=>b,default:()=>j,frontMatter:()=>y,metadata:()=>d,toc:()=>O});var n=t(3905),o=Object.defineProperty,a=Object.defineProperties,p=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,u=(e,r,t)=>r in e?o(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,s=(e,r)=>{for(var t in r||(r={}))i.call(r,t)&&u(e,t,r[t]);if(c)for(var t of c(r))l.call(r,t)&&u(e,t,r[t]);return e},f=(e,r)=>a(e,p(r)),m=(e,r)=>{var t={};for(var n in e)i.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&c)for(var n of c(e))r.indexOf(n)<0&&l.call(e,n)&&(t[n]=e[n]);return t};const y={title:"Selector (namespace)",slug:"/rimbu/core/Deep/Selector/namespace"},b="namespace Selector",d={unversionedId:"rimbu_core/Deep/Selector/index",id:"rimbu_core/Deep/Selector/index",title:"Selector (namespace)",description:"Type defining the allowed selectors on an object of type T. Selectors can be: - a path string into type T. - a function receiving a Protected version of type T, and returning an arbitrary value. - a tuple of Selectors for type T - an object where the property values are Selectors for type T.",source:"@site/api/rimbu_core/Deep/Selector/index.mdx",sourceDirName:"rimbu_core/Deep/Selector",slug:"/rimbu/core/Deep/Selector/namespace",permalink:"/api/rimbu/core/Deep/Selector/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"Selector (namespace)",slug:"/rimbu/core/Deep/Selector/namespace"},sidebar:"defaultSidebar",previous:{title:"Protected",permalink:"/api/rimbu/core/Deep/Protected/type"},next:{title:"Result",permalink:"/api/rimbu/core/Deep/Selector/Result/type"}},v={},O=[],g={toc:O},S="wrapper";function j(e){var r=e,{components:t}=r,o=m(r,["components"]);return(0,n.kt)(S,f(s(s({},g),o),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",s({},{id:"namespace-selector"}),(0,n.kt)("inlineCode",{parentName:"h1"},"namespace Selector")),(0,n.kt)("p",null,"Type defining the allowed selectors on an object of type ",(0,n.kt)("inlineCode",{parentName:"p"},"T"),". Selectors can be: - a path string into type ",(0,n.kt)("inlineCode",{parentName:"p"},"T"),". - a function receiving a ",(0,n.kt)("inlineCode",{parentName:"p"},"Protected")," version of type ",(0,n.kt)("inlineCode",{parentName:"p"},"T"),", and returning an arbitrary value. - a tuple of ",(0,n.kt)("inlineCode",{parentName:"p"},"Selectors")," for type ",(0,n.kt)("inlineCode",{parentName:"p"},"T")," - an object where the property values are ",(0,n.kt)("inlineCode",{parentName:"p"},"Selectors")," for type ",(0,n.kt)("inlineCode",{parentName:"p"},"T"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Companion type:")," ",(0,n.kt)("a",s({parentName:"p"},{href:"/api/rimbu/core/Deep/Selector/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Selector<T>"))))}j.isMDXComponent=!0}}]);