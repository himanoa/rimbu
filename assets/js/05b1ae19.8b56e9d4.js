"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[63178],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),s=u(r),f=i,m=s["".concat(c,".").concat(f)]||s[f]||y[f]||o;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,l=new Array(o);l[0]=s;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},1266:function(e,t,r){r.r(t),r.d(t,{assets:function(){return b},contentTitle:function(){return f},default:function(){return h},frontMatter:function(){return s},metadata:function(){return m},toc:function(){return d}});var n=r(3905),i=Object.defineProperty,o=Object.defineProperties,l=Object.getOwnPropertyDescriptors,a=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,p=(e,t,r)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,y=(e,t)=>{for(var r in t||(t={}))c.call(t,r)&&p(e,r,t[r]);if(a)for(var r of a(t))u.call(t,r)&&p(e,r,t[r]);return e};const s={title:"WithKeyValue",slug:"/rimbu/collection-types/set-custom/WithKeyValue/type"},f="type WithKeyValue<Tp,K,V>",m={unversionedId:"rimbu_collection-types/set-custom/WithKeyValue.type",id:"rimbu_collection-types/set-custom/WithKeyValue.type",title:"WithKeyValue",description:"A utility type to set the key type to given type K, and the value type to given type V.",source:"@site/api/rimbu_collection-types/set-custom/WithKeyValue.type.mdx",sourceDirName:"rimbu_collection-types/set-custom",slug:"/rimbu/collection-types/set-custom/WithKeyValue/type",permalink:"/api/rimbu/collection-types/set-custom/WithKeyValue/type",draft:!1,tags:[],version:"current",frontMatter:{title:"WithKeyValue",slug:"/rimbu/collection-types/set-custom/WithKeyValue/type"},sidebar:"defaultSidebar",previous:{title:"WithElem",permalink:"/api/rimbu/collection-types/set-custom/WithElem/type"},next:{title:"WithRow",permalink:"/api/rimbu/collection-types/set-custom/WithRow/type"}},b={},d=[{value:"Definition",id:"definition",level:2}],v={toc:d};function h(e){var t,r=e,{components:i}=r,p=((e,t)=>{var r={};for(var n in e)c.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&a)for(var n of a(e))t.indexOf(n)<0&&u.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=y(y({},v),p),o(t,l({components:i,mdxType:"MDXLayout"}))),(0,n.kt)("h1",y({},{id:"type-withkeyvaluetpkv"}),(0,n.kt)("inlineCode",{parentName:"h1"},"type WithKeyValue<Tp,K,V>")),(0,n.kt)("p",null,"A utility type to set the key type to given type K, and the value type to given type V."),(0,n.kt)("h2",y({},{id:"definition"}),"Definition"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"export declare type WithKeyValue<Tp, K, V> = Tp & "),(0,n.kt)("a",y({parentName:"p"},{href:"/api/rimbu/collection-types/map-custom/KeyValue/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"KeyValue")),(0,n.kt)("inlineCode",{parentName:"p"},"<K, V>;")))}h.isMDXComponent=!0}}]);