"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[62448],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var m=a.createContext({}),p=function(e){var n=a.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(m.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},s=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(t),s=r,g=u["".concat(m,".").concat(s)]||u[s]||c[s]||i;return t?a.createElement(g,l(l({ref:n},d),{},{components:t})):a.createElement(g,l({ref:n},d))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=s;var o={};for(var m in n)hasOwnProperty.call(n,m)&&(o[m]=n[m]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},12976:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>f,contentTitle:()=>b,default:()=>x,frontMatter:()=>g,metadata:()=>k,toc:()=>N});var a=t(3905),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,d=(e,n,t)=>n in e?r(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,u=(e,n)=>{for(var t in n||(n={}))m.call(n,t)&&d(e,t,n[t]);if(o)for(var t of o(n))p.call(n,t)&&d(e,t,n[t]);return e},c=(e,n)=>i(e,l(n)),s=(e,n)=>{var t={};for(var a in e)m.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&o)for(var a of o(e))n.indexOf(a)<0&&p.call(e,a)&&(t[a]=e[a]);return t};const g={title:"IndexRange (namespace)",slug:"/rimbu/common/IndexRange/namespace"},b="namespace IndexRange",k={unversionedId:"rimbu_common/IndexRange/index",id:"rimbu_common/IndexRange/index",title:"IndexRange (namespace)",description:"A flexible range specification for numeric indices. If a start or end is defined, a tuple can be used where the second item is a boolean indicating whether that end is inclusive or exclusive.",source:"@site/api/rimbu_common/IndexRange/index.mdx",sourceDirName:"rimbu_common/IndexRange",slug:"/rimbu/common/IndexRange/namespace",permalink:"/api/rimbu/common/IndexRange/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"IndexRange (namespace)",slug:"/rimbu/common/IndexRange/namespace"},sidebar:"defaultSidebar",previous:{title:"ForcedError",permalink:"/api/rimbu/common/ErrBase/ForcedError/class"},next:{title:"IndexRange",permalink:"/api/rimbu/common/IndexRange/type"}},f={},N=[{value:"Functions",id:"functions",level:2},{value:"<code>getIndexRangeIndices</code>",id:"getindexrangeindices",level:3},{value:"Definition",id:"definition",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>getIndicesFor</code>",id:"getindicesfor",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Parameters",id:"parameters-1",level:4}],h={toc:N},y="wrapper";function x(e){var n=e,{components:t}=n,r=s(n,["components"]);return(0,a.kt)(y,c(u(u({},h),r),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",u({},{id:"namespace-indexrange"}),(0,a.kt)("inlineCode",{parentName:"h1"},"namespace IndexRange")),(0,a.kt)("p",null,"A flexible range specification for numeric indices. If a start or end is defined, a tuple can be used where the second item is a boolean indicating whether that end is inclusive or exclusive.\nAn IndexRange can have one of the following forms:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"{ amount: number }"),(0,a.kt)("li",{parentName:"ul"},"{ start: number }"),(0,a.kt)("li",{parentName:"ul"},"{ start: number, amount: number }"),(0,a.kt)("li",{parentName:"ul"},"{ start: number, end: number }"),(0,a.kt)("li",{parentName:"ul"},"{ start: number, end: ","[number, boolean]"," }"),(0,a.kt)("li",{parentName:"ul"},"{ start: ","[number, boolean]"," }"),(0,a.kt)("li",{parentName:"ul"},"{ start: ","[number, boolean]",", amount: number }"),(0,a.kt)("li",{parentName:"ul"},"{ start: ","[number, boolean]",", end: number }"),(0,a.kt)("li",{parentName:"ul"},"{ start: ","[number, boolean]",", end: ","[number, boolean]"," }"),(0,a.kt)("li",{parentName:"ul"},"{ end: number }"),(0,a.kt)("li",{parentName:"ul"},"{ end: ","[number, boolean]"," }")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Companion type:")," ",(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/common/IndexRange/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"IndexRange"))),(0,a.kt)("h2",u({},{id:"functions"}),"Functions"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"getindexrangeindices"}),(0,a.kt)("inlineCode",{parentName:"h3"},"getIndexRangeIndices")),(0,a.kt)("p",null,"Returns, given the ",(0,a.kt)("inlineCode",{parentName:"p"},"range")," ",(0,a.kt)("inlineCode",{parentName:"p"},"IndexRange"),", a normalized tuple containing the start index, and optionally an end index.")),(0,a.kt)("h4",u({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"function getIndexRangeIndices(range: "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/common/IndexRange/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"IndexRange")),(0,a.kt)("inlineCode",{parentName:"p"},"): [number, number "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined];"))),(0,a.kt)("h4",u({},{id:"parameters"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"range")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("a",u({parentName:"td"},{href:"/api/rimbu/common/IndexRange/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"IndexRange"))),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"the ",(0,a.kt)("inlineCode",{parentName:"td"},"IndexRange")," to use"))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",u({},{id:"getindicesfor"}),(0,a.kt)("inlineCode",{parentName:"h3"},"getIndicesFor")),(0,a.kt)("p",null,"Returns, given the ",(0,a.kt)("inlineCode",{parentName:"p"},"range")," ",(0,a.kt)("inlineCode",{parentName:"p"},"IndexRange"),", and a target maximum ",(0,a.kt)("inlineCode",{parentName:"p"},"length"),", the actual index range. This can be one of three options: - 'empty': there are no elements within the range - 'all': all elements are within the range - ","[start: number, end: number]",": an inclusive range of element indices within the given range")),(0,a.kt)("h4",u({},{id:"definition-1"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"function getIndicesFor(range: "),(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/common/IndexRange/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"IndexRange")),(0,a.kt)("inlineCode",{parentName:"p"},", length: number): [number, number] "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"},"'empty'"),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," 'all';"))),(0,a.kt)("h4",u({},{id:"parameters-1"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"range")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("a",u({parentName:"td"},{href:"/api/rimbu/common/IndexRange/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"IndexRange"))),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"the ",(0,a.kt)("inlineCode",{parentName:"td"},"IndexRange")," to use")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"length")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"the target maximum length"))))))}x.isMDXComponent=!0}}]);