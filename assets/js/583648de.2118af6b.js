"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[31215],{3905:(e,r,t)=>{t.d(r,{Zo:()=>m,kt:()=>h});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=a.createContext({}),l=function(e){var r=a.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},m=function(e){var r=l(e.components);return a.createElement(c.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},s=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=l(t),s=n,h=u["".concat(c,".").concat(s)]||u[s]||d[s]||o;return t?a.createElement(h,i(i({ref:r},m),{},{components:t})):a.createElement(h,i({ref:r},m))}));function h(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=s;var p={};for(var c in r)hasOwnProperty.call(r,c)&&(p[c]=r[c]);p.originalType=e,p[u]="string"==typeof e?e:n,i[1]=p;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},62762:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>y,contentTitle:()=>f,default:()=>N,frontMatter:()=>h,metadata:()=>b,toc:()=>w});var a=t(3905),n=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,m=(e,r,t)=>r in e?n(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,u=(e,r)=>{for(var t in r||(r={}))c.call(r,t)&&m(e,t,r[t]);if(p)for(var t of p(r))l.call(r,t)&&m(e,t,r[t]);return e},d=(e,r)=>o(e,i(r)),s=(e,r)=>{var t={};for(var a in e)c.call(e,a)&&r.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&p)for(var a of p(e))r.indexOf(a)<0&&l.call(e,a)&&(t[a]=e[a]);return t};const h={title:"ArrowGraph (namespace)",slug:"/rimbu/core/ArrowGraph/namespace"},f="namespace ArrowGraph",b={unversionedId:"rimbu_core/ArrowGraph/index",id:"rimbu_core/ArrowGraph/index",title:"ArrowGraph (namespace)",description:"An type-invariant immutable arrow (directed) graph. See the Graph documentation and the ArrowGraph API documentation",source:"@site/api/rimbu_core/ArrowGraph/index.mdx",sourceDirName:"rimbu_core/ArrowGraph",slug:"/rimbu/core/ArrowGraph/namespace",permalink:"/api/rimbu/core/ArrowGraph/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"ArrowGraph (namespace)",slug:"/rimbu/core/ArrowGraph/namespace"},sidebar:"defaultSidebar",previous:{title:"@rimbu/core",permalink:"/api/rimbu/core"},next:{title:"ArrowGraph.Builder<N>",permalink:"/api/rimbu/core/ArrowGraph/Builder/interface"}},y={},w=[{value:"Interfaces",id:"interfaces",level:2}],g={toc:w},k="wrapper";function N(e){var r=e,{components:t}=r,n=s(r,["components"]);return(0,a.kt)(k,d(u(u({},g),n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",u({},{id:"namespace-arrowgraph"}),(0,a.kt)("inlineCode",{parentName:"h1"},"namespace ArrowGraph")),(0,a.kt)("p",null,"An type-invariant immutable arrow (directed) graph. See the ",(0,a.kt)("a",u({parentName:"p"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,a.kt)("a",u({parentName:"p"},{href:"https://rimbu.org/api/rimbu/graph/ArrowGraph/interface"}),"ArrowGraph API documentation")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Companion interface:")," ",(0,a.kt)("a",u({parentName:"p"},{href:"/api/rimbu/core/ArrowGraph/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"ArrowGraph<N>"))),(0,a.kt)("h2",u({},{id:"interfaces"}),"Interfaces"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("a",u({parentName:"td"},{href:"/api/rimbu/core/ArrowGraph/Builder/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"ArrowGraph.Builder<N>"))),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"A mutable ",(0,a.kt)("inlineCode",{parentName:"td"},"ArrowGraph")," builder used to efficiently create new immutable instances. See the ",(0,a.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,a.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/graph/ArrowGraph/Builder/interface"}),"ArrowGraph.Builder API documentation"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("a",u({parentName:"td"},{href:"/api/rimbu/core/ArrowGraph/Context/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"ArrowGraph.Context<UN>"))),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"The ArrowGraph's Context instance that serves as a factory for all related immutable instances and builders.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("a",u({parentName:"td"},{href:"/api/rimbu/core/ArrowGraph/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"ArrowGraph.NonEmpty<N>"))),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"A non-empty type-invariant immutable arrow (directed) graph. See the ",(0,a.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,a.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/graph/ArrowGraph/interface"}),"ArrowGraph API documentation"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),(0,a.kt)("a",u({parentName:"td"},{href:"/api/rimbu/core/ArrowGraph/Types/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"ArrowGraph.Types"))),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))))}N.isMDXComponent=!0}}]);