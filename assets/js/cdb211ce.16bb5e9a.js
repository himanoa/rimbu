"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[67909],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},m=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=c(r),s=i,d=u["".concat(l,".").concat(s)]||u[s]||f[s]||a;return r?n.createElement(d,p(p({ref:t},m),{},{components:r})):n.createElement(d,p({ref:t},m))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,p=new Array(a);p[0]=s;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:i,p[1]=o;for(var c=2;c<a;c++)p[c]=r[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},75925:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>v,contentTitle:()=>y,default:()=>g,frontMatter:()=>d,metadata:()=>b,toc:()=>h});var n=r(3905),i=Object.defineProperty,a=Object.defineProperties,p=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,m=(e,t,r)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))l.call(t,r)&&m(e,r,t[r]);if(o)for(var r of o(t))c.call(t,r)&&m(e,r,t[r]);return e},f=(e,t)=>a(e,p(t)),s=(e,t)=>{var r={};for(var n in e)l.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&c.call(e,n)&&(r[n]=e[n]);return r};const d={title:"BiMap.Types",slug:"/rimbu/bimap/BiMap/Types/interface"},y="interface BiMap.Types",b={unversionedId:"rimbu_bimap/BiMap/Types.interface",id:"rimbu_bimap/BiMap/Types.interface",title:"BiMap.Types",description:"Utility interface that provides higher-kinded types for this collection.",source:"@site/api/rimbu_bimap/BiMap/Types.interface.mdx",sourceDirName:"rimbu_bimap/BiMap",slug:"/rimbu/bimap/BiMap/Types/interface",permalink:"/api/rimbu/bimap/BiMap/Types/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"BiMap.Types",slug:"/rimbu/bimap/BiMap/Types/interface"},sidebar:"defaultSidebar",previous:{title:"BiMap.NonEmpty<K,V>",permalink:"/api/rimbu/bimap/BiMap/NonEmpty/interface"},next:{title:"BiMap<K,V>",permalink:"/api/rimbu/bimap/BiMap/interface"}},v={},h=[{value:"Properties",id:"properties",level:2},{value:"<code>nonEmpty</code>",id:"nonempty",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>normal</code>",id:"normal",level:3},{value:"Definition",id:"definition-1",level:4}],k={toc:h},O="wrapper";function g(e){var t=e,{components:r}=t,i=s(t,["components"]);return(0,n.kt)(O,f(u(u({},k),i),{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",u({},{id:"interface-bimaptypes"}),(0,n.kt)("inlineCode",{parentName:"h1"},"interface BiMap.Types")),(0,n.kt)("p",null,"Utility interface that provides higher-kinded types for this collection."),(0,n.kt)("h2",u({},{id:"properties"}),"Properties"),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",u({},{id:"nonempty"}),(0,n.kt)("inlineCode",{parentName:"h3"},"nonEmpty")),(0,n.kt)("p",null,"The 'non-empty' collection type (higher-kinded type).")),(0,n.kt)("h4",u({},{id:"definition"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly nonEmpty: "),(0,n.kt)("a",u({parentName:"p"},{href:"/api/rimbu/bimap/BiMap/NonEmpty/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"BiMap.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",u({},{id:"normal"}),(0,n.kt)("inlineCode",{parentName:"h3"},"normal")),(0,n.kt)("p",null,"The 'normal' collection type (higher-kinded type).")),(0,n.kt)("h4",u({},{id:"definition-1"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly normal: "),(0,n.kt)("a",u({parentName:"p"},{href:"/api/rimbu/bimap/BiMap/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"BiMap")),(0,n.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))))}g.isMDXComponent=!0}}]);