(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[2252],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||r;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1592:function(e,t,n){"use strict";n.d(t,{G:function(){return r}});var a=n(7294);function i(e){return e.replace(/</g,"%3C").replace(/>/g,"%3E")}function r(e){var t=i("https://g.gravizo.com/svg?\n  @startuml;\n  skinparam monochrome true;\n  skinparam backgroundColor none;\n  skinparam classBackgroundColor darkslategrey;\n  skinparam classBorderColor gray;\n  skinparam classFontColor lightgray;\n  skinparam classStereotypeFontColor darkgray;\n  skinparam arrowColor lightgray;\n  skinparam linetype ortho;\n  "+e.contents+"\n  @enduml;");return a.createElement("img",{src:t,className:"diagram"})}},3664:function(e,t,n){"use strict";n.d(t,{r:function(){return r}});var a=n(7294),i={previewwindow:"console",view:"split",editorsize:"60",codemirror:"1",moduleview:"1"};function r(e){var t=function(e){var t="",n="";for(var a in e)t+=""+n+a+"="+e[a],n="&";return""===t?"":"?"+t}(Object.assign({},i,{module:"/src/"+e.path})),n="https://codesandbox.io/embed/github/vitoke/rimbu-sandbox/tree/main"+t,r="https://codesandbox.io/s/github/vitoke/rimbu-sandbox/tree/main"+t;return a.createElement(a.Fragment,null,a.createElement("a",{target:"_blank",className:"button button--secondary",href:r,style:{marginBottom:10}},"Open file below in new window with full type-check"),a.createElement("iframe",{src:n,className:"codesandbox-iframe",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}))}},3114:function(e,t,n){"use strict";n.r(t),n.d(t,{contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return m}});var a=n(2122),i=n(9756),r=(n(7294),n(3905)),o=n(1592),l=n(3664),s=["components"],p={id:"bimultimap",slug:"./bimultimap",title:"BiMultiMap"},u=void 0,c={unversionedId:"collections/bimultimap",id:"collections/bimultimap",isDocsHomePage:!1,title:"BiMultiMap",description:"A BiMultiMap is a bidirectional MultiMap of keys and values, where each key-value association also has an inverse value-key association. There is a many-to-many mapping between keys and values.",source:"@site/docs/collections/bimultimap.mdx",sourceDirName:"collections",slug:"/collections/bimultimap",permalink:"/docs/collections/bimultimap",editUrl:"https://github.com/rimbu-org/rimbu/edit/master/website/docs/collections/bimultimap.mdx",tags:[],version:"current",frontMatter:{id:"bimultimap",slug:"./bimultimap",title:"BiMultiMap"},sidebar:"sidebar",previous:{title:"BiMap",permalink:"/docs/collections/bimap"},next:{title:"Overview",permalink:"/docs/collections/graph"}},m=[{value:"When to use",id:"when-to-use",children:[]},{value:"Exports",id:"exports",children:[]},{value:"Inheritance",id:"inheritance",children:[{value:"Creation",id:"creation",children:[]},{value:"Query",id:"query",children:[]},{value:"Motivation",id:"motivation",children:[]},{value:"Builder",id:"builder",children:[]}]}],d={toc:m};function h(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A BiMultiMap is a bidirectional MultiMap of keys and values, where each key-value association also has an inverse value-key association. There is a many-to-many mapping between keys and values."),(0,r.kt)("h2",{id:"when-to-use"},"When to use"),(0,r.kt)("p",null,"The BiMultiMap is useful when there is a many-to-many relation between to types of entities, and it is desired to query the relation in both directions."),(0,r.kt)("p",null,"For example, take a relation between persons and their hobbies. The BiMultiMap can efficiently tell you, given a person, what her hobbies are. But it can also efficiently tell you, given a hobby, which persons practice it."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Internally the BiMultiMap uses two immutable MultiMaps, making lookup operations in both directions fast. Insertion and memory usage are double that of a MultiMap."))),(0,r.kt)("h2",{id:"exports"},"Exports"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@rimbu/core")," package exports the following ",(0,r.kt)("em",{parentName:"p"},"abstract")," BiMultiMap TypeScript types:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"BiMultiMap<K, V>")),(0,r.kt)("td",{parentName:"tr",align:null},"a generic BiMultiMap between keys of type K and values of type V")))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@rimbu/core")," package exports the following ",(0,r.kt)("em",{parentName:"p"},"concrete")," BiMultiMap types:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"HashBiMultiMap<K, V>")),(0,r.kt)("td",{parentName:"tr",align:null},"a BiMultiMap implementation where keys and values are hashed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SortedBiMultiMap<K, V>")),(0,r.kt)("td",{parentName:"tr",align:null},"a BiMultiMap implementation where keys and values are sorted")))),(0,r.kt)("h2",{id:"inheritance"},"Inheritance"),(0,r.kt)(o.G,{contents:"\ninterface Streamable<[K, V]>;\nabstract BiMultiMap<K, V>;\nclass HashBiMultiMap<K, V>;\nclass SortedBiMultiMap<K, V>;\n\nStreamable <|.. BiMultiMap;\nBiMultiMap <|-- HashBiMultiMap;\nBiMultiMap <|-- SortedBiMultiMap;\n",mdxType:"UmlGraph"}),(0,r.kt)("h3",{id:"creation"},"Creation"),(0,r.kt)(l.r,{path:"bimultimap/create.ts",mdxType:"SandBox"}),(0,r.kt)("h3",{id:"query"},"Query"),(0,r.kt)(l.r,{path:"bimultimap/query.ts",mdxType:"SandBox"}),(0,r.kt)("h3",{id:"motivation"},"Motivation"),(0,r.kt)(l.r,{path:"bimultimap/motivation.ts",mdxType:"SandBox"}),(0,r.kt)("h3",{id:"builder"},"Builder"),(0,r.kt)(l.r,{path:"bimultimap/build.ts",mdxType:"SandBox"}))}h.isMDXComponent=!0}}]);