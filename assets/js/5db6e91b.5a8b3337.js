"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[64348],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),m=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=m(e.components);return a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=m(n),k=i,c=u["".concat(d,".").concat(k)]||u[k]||s[k]||r;return n?a.createElement(c,l(l({ref:t},p),{},{components:n})):a.createElement(c,l({ref:t},p))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var m=2;m<r;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1889:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>v,contentTitle:()=>k,default:()=>h,frontMatter:()=>u,metadata:()=>c,toc:()=>N});var a=n(3905),i=Object.defineProperty,r=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))d.call(t,n)&&p(e,n,t[n]);if(o)for(var n of o(t))m.call(t,n)&&p(e,n,t[n]);return e};const u={title:"SortedSetEmpty<T>",slug:"/rimbu/sorted/set-custom/SortedSetEmpty/class"},k="class SortedSetEmpty<T>",c={unversionedId:"rimbu_sorted/set-custom/SortedSetEmpty.class",id:"rimbu_sorted/set-custom/SortedSetEmpty.class",title:"SortedSetEmpty<T>",description:"undocumented",source:"@site/api/rimbu_sorted/set-custom/SortedSetEmpty.class.mdx",sourceDirName:"rimbu_sorted/set-custom",slug:"/rimbu/sorted/set-custom/SortedSetEmpty/class",permalink:"/api/rimbu/sorted/set-custom/SortedSetEmpty/class",draft:!1,tags:[],version:"current",frontMatter:{title:"SortedSetEmpty<T>",slug:"/rimbu/sorted/set-custom/SortedSetEmpty/class"},sidebar:"defaultSidebar",previous:{title:"SortedSetCreators",permalink:"/api/rimbu/sorted/set-custom/SortedSetCreators/interface"},next:{title:"SortedSetInner<T>",permalink:"/api/rimbu/sorted/set-custom/SortedSetInner/class"}},v={},N=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>isEmpty</code>",id:"isempty",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>size</code>",id:"size",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>[Symbol.iterator]</code>",id:"symboliterator",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>add</code>",id:"add",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"<code>addAll</code>",id:"addall",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"<code>assumeNonEmpty</code>",id:"assumenonempty",level:3},{value:"Definition",id:"definition-6",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"<code>difference</code>",id:"difference",level:3},{value:"Definition",id:"definition-7",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"<code>drop</code>",id:"drop",level:3},{value:"Definition",id:"definition-8",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"<code>filter</code>",id:"filter",level:3},{value:"Definition",id:"definition-9",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-9",level:4},{value:"<code>forEach</code>",id:"foreach",level:3},{value:"Definition",id:"definition-10",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Overrides",id:"overrides-10",level:4},{value:"<code>getAtIndex</code>",id:"getatindex",level:3},{value:"Definitions",id:"definitions",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Overrides",id:"overrides-11",level:4},{value:"<code>has</code>",id:"has",level:3},{value:"Definition",id:"definition-11",level:4},{value:"Overrides",id:"overrides-12",level:4},{value:"<code>intersect</code>",id:"intersect",level:3},{value:"Definition",id:"definition-12",level:4},{value:"Overrides",id:"overrides-13",level:4},{value:"<code>max</code>",id:"max",level:3},{value:"Definitions",id:"definitions-1",level:4},{value:"Overrides",id:"overrides-14",level:4},{value:"<code>min</code>",id:"min",level:3},{value:"Definitions",id:"definitions-2",level:4},{value:"Overrides",id:"overrides-15",level:4},{value:"<code>nonEmpty</code>",id:"nonempty",level:3},{value:"Definition",id:"definition-13",level:4},{value:"Overrides",id:"overrides-16",level:4},{value:"<code>remove</code>",id:"remove",level:3},{value:"Definition",id:"definition-14",level:4},{value:"Overrides",id:"overrides-17",level:4},{value:"<code>removeAll</code>",id:"removeall",level:3},{value:"Definition",id:"definition-15",level:4},{value:"Overrides",id:"overrides-18",level:4},{value:"<code>slice</code>",id:"slice",level:3},{value:"Definition",id:"definition-16",level:4},{value:"Overrides",id:"overrides-19",level:4},{value:"<code>sliceIndex</code>",id:"sliceindex",level:3},{value:"Definition",id:"definition-17",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Overrides",id:"overrides-20",level:4},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition-18",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Overrides",id:"overrides-21",level:4},{value:"<code>streamRange</code>",id:"streamrange",level:3},{value:"Definition",id:"definition-19",level:4},{value:"Overrides",id:"overrides-22",level:4},{value:"<code>streamSliceIndex</code>",id:"streamsliceindex",level:3},{value:"Definition",id:"definition-20",level:4},{value:"Overrides",id:"overrides-23",level:4},{value:"<code>symDifference</code>",id:"symdifference",level:3},{value:"Definition",id:"definition-21",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Overrides",id:"overrides-24",level:4},{value:"<code>take</code>",id:"take",level:3},{value:"Definition",id:"definition-22",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Overrides",id:"overrides-25",level:4},{value:"<code>toArray</code>",id:"toarray",level:3},{value:"Definition",id:"definition-23",level:4},{value:"Overrides",id:"overrides-26",level:4},{value:"<code>toBuilder</code>",id:"tobuilder",level:3},{value:"Definition",id:"definition-24",level:4},{value:"Overrides",id:"overrides-27",level:4},{value:"<code>toJSON</code>",id:"tojson",level:3},{value:"Definition",id:"definition-25",level:4},{value:"Overrides",id:"overrides-28",level:4},{value:"<code>toString</code>",id:"tostring",level:3},{value:"Definition",id:"definition-26",level:4},{value:"Overrides",id:"overrides-29",level:4},{value:"<code>union</code>",id:"union",level:3},{value:"Definition",id:"definition-27",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Overrides",id:"overrides-30",level:4}],f={toc:N};function h(e){var t,n=e,{components:i}=n,p=((e,t)=>{var n={};for(var a in e)d.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&m.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=s(s({},f),p),r(t,l({components:i,mdxType:"MDXLayout"}))),(0,a.kt)("h1",s({},{id:"class-sortedsetemptyt"}),(0,a.kt)("inlineCode",{parentName:"h1"},"class SortedSetEmpty<T>")),(0,a.kt)("p",null,"undocumented"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Implements:")," ",(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedSet<T>"))),(0,a.kt)("h2",s({},{id:"type-parameters"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Default"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),"T"),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"any")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"undocumented")))),(0,a.kt)("h2",s({},{id:"properties"}),"Properties"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"context"}),(0,a.kt)("inlineCode",{parentName:"h3"},"context")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly context: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/set-custom/SortedSetContext/class"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedSetContext")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"overrides"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/interface#context"}),"RSetBase.context"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"isempty"}),(0,a.kt)("inlineCode",{parentName:"h3"},"isEmpty")),(0,a.kt)("p",null,"Returns true if the collection is empty.")),(0,a.kt)("h4",s({},{id:"definition-1"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly isEmpty: boolean;"))),(0,a.kt)("h4",s({},{id:"overrides-1"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#isEmpty"}),"VariantSetBase.isEmpty"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"size"}),(0,a.kt)("inlineCode",{parentName:"h3"},"size")),(0,a.kt)("p",null,"Returns the number of values in the collection.")),(0,a.kt)("h4",s({},{id:"definition-2"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly size: number;"))),(0,a.kt)("h4",s({},{id:"overrides-2"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#size"}),"VariantSetBase.size"))),(0,a.kt)("h2",s({},{id:"methods"}),"Methods"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"symboliterator"}),(0,a.kt)("inlineCode",{parentName:"h3"},"[Symbol.iterator]")),(0,a.kt)("p",null,"Returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"FastIterator")," instance used to iterate over the values of this ",(0,a.kt)("inlineCode",{parentName:"p"},"Iterable"),".")),(0,a.kt)("h4",s({},{id:"definition-3"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[Symbol.iterator](): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/FastIterator/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"FastIterator")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"overrides-3"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/FastIterable/interface#%5BSymbol.iterator%5D"}),"FastIterable.[Symbol.iterator]"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"add"}),(0,a.kt)("inlineCode",{parentName:"h3"},"add")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-4"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"add(value: T): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedSet.NonEmpty")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"parameters"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"value")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"T")),(0,a.kt)("td",s({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",s({},{id:"overrides-4"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/interface#add"}),"RSetBase.add"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"addall"}),(0,a.kt)("inlineCode",{parentName:"h3"},"addAll")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-5"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"addAll(values: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedSet.NonEmpty")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"parameters-1"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"values")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,a.kt)("inlineCode",{parentName:"td"},"<T>")),(0,a.kt)("td",s({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",s({},{id:"overrides-5"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/interface#addAll"}),"RSetBase.addAll"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"assumenonempty"}),(0,a.kt)("inlineCode",{parentName:"h3"},"assumeNonEmpty")),(0,a.kt)("p",null,"Returns the same collection typed as non-empty.")),(0,a.kt)("h4",s({},{id:"definition-6"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"assumeNonEmpty(): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"WithElem")),(0,a.kt)("inlineCode",{parentName:"p"},"<Tp, T>['nonEmpty'];"))),(0,a.kt)("admonition",s({},{title:"throws",type:"note"}),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"RimbuError.EmptyCollectionAssumedNonEmptyError")," if the collection is empty")),(0,a.kt)("admonition",s({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"HashSet.empty().assumeNonEmpty()          // => throws RimbuError.EmptyCollectionAssumedNonEmptyError\nHashSet.from([[0, 1]]).assumeNonEmpty()   // => List.NonEmpty(0, 1, 2)\n"))),(0,a.kt)("h4",s({},{id:"overrides-6"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#assumeNonEmpty"}),"VariantSetBase.assumeNonEmpty"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"difference"}),(0,a.kt)("inlineCode",{parentName:"h3"},"difference")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-7"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"difference(): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedSet")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"overrides-7"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#difference"}),"VariantSetBase.difference"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"drop"}),(0,a.kt)("inlineCode",{parentName:"h3"},"drop")),(0,a.kt)("p",null,"Returns a SortedSet containing all but the the first ",(0,a.kt)("inlineCode",{parentName:"p"},"amount")," of value of this SortedSet.")),(0,a.kt)("h4",s({},{id:"definition-8"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"drop(amount: number): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedSet")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"parameters-2"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"amount")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the amount of elements to keep")))),(0,a.kt)("admonition",s({},{title:"note",type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"a negative ",(0,a.kt)("inlineCode",{parentName:"p"},"amount")," drops the last values instead of the first, e.g. -2 is the last 2 elements")),(0,a.kt)("admonition",s({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"const m = SortedSet.of('b', 'd', 'a', 'c').asNormal();\nconsole.log(m.drop(2).toArray())\n// => ['c', 'd']\nconsole.log(m.drop(-2).toArray())\n// => ['a', 'b']\n"))),(0,a.kt)("h4",s({},{id:"overrides-8"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface#drop"}),"SortedSet.drop"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"filter"}),(0,a.kt)("inlineCode",{parentName:"h3"},"filter")),(0,a.kt)("p",null,"Returns a collection containing only those entries that satisfy given ",(0,a.kt)("inlineCode",{parentName:"p"},"pred")," predicate.")),(0,a.kt)("h4",s({},{id:"definition-9"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"filter(pred: (value: T, index: number, halt: () => void) => boolean): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"WithElem")),(0,a.kt)("inlineCode",{parentName:"p"},"<Tp, T>['normal'];"))),(0,a.kt)("h4",s({},{id:"parameters-3"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"pred")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(value: T, index: number, halt: () => void) => boolean")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"a predicate function receiving:",(0,a.kt)("br",null)," - ",(0,a.kt)("inlineCode",{parentName:"td"},"value"),": the next value",(0,a.kt)("br",null)," - ",(0,a.kt)("inlineCode",{parentName:"td"},"index"),": the entry index",(0,a.kt)("br",null)," - ",(0,a.kt)("inlineCode",{parentName:"td"},"halt"),": a function that, when called, ensures no next elements are passed")))),(0,a.kt)("admonition",s({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"HashSet.of(1, 2, 3).filter(value < 3).toArray()\n// => [1, 2]\n"))),(0,a.kt)("h4",s({},{id:"overrides-9"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#filter"}),"VariantSetBase.filter"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"foreach"}),(0,a.kt)("inlineCode",{parentName:"h3"},"forEach")),(0,a.kt)("p",null,"Performs given function ",(0,a.kt)("inlineCode",{parentName:"p"},"f")," for each value of the collection, using given ",(0,a.kt)("inlineCode",{parentName:"p"},"state")," as initial traversal state.")),(0,a.kt)("h4",s({},{id:"definition-10"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"forEach(f: (value: T, index: number, halt: () => void) => void, state?: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"TraverseState")),(0,a.kt)("inlineCode",{parentName:"p"},"): void;"))),(0,a.kt)("h4",s({},{id:"parameters-4"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"f")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(value: T, index: number, halt: () => void) => void")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the function to perform for each element, receiving: - ",(0,a.kt)("inlineCode",{parentName:"td"},"value"),": the next element",(0,a.kt)("br",null)," - ",(0,a.kt)("inlineCode",{parentName:"td"},"index"),": the index of the element",(0,a.kt)("br",null)," - ",(0,a.kt)("inlineCode",{parentName:"td"},"halt"),": a function that, if called, ensures that no new elements are passed")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"state")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/TraverseState/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"TraverseState"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"(optional) the traverse state")))),(0,a.kt)("admonition",s({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"HashSet.of(1, 2, 3).forEach((value, i, halt) => {\nconsole.log([value, i]);\nif (i >= 1) halt();\n})\n// => logs [1, 0]  [2, 1]\n"))),(0,a.kt)("admonition",s({},{title:"note",type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"O(N)")),(0,a.kt)("h4",s({},{id:"overrides-10"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#forEach"}),"VariantSetBase.forEach"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"getatindex"}),(0,a.kt)("inlineCode",{parentName:"h3"},"getAtIndex")),(0,a.kt)("p",null,"Returns the value at the given index of the value sort order of the SortedSet, or a fallback value (default: undefined) if the index is out of bounds.")),(0,a.kt)("h4",s({},{id:"definitions"}),"Definitions"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"getAtIndex(index: number): T "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined;"))),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"getAtIndex<O>(index: number, otherwise: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"OptLazy")),(0,a.kt)("inlineCode",{parentName:"p"},"<O>): T "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;"))),(0,a.kt)("h4",s({},{id:"parameters-5"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"index")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the index in the key sort order")))),(0,a.kt)("admonition",s({},{title:"note",type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"negative index values will retrieve the values from the end of the sort order, e.g. -1 is the last value")),(0,a.kt)("admonition",s({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"const m = SortedSet.of('b', 'd', 'a', 'c').asNormal();\nconsole.log(m.getAtIndex(1))\n// => 'b'\nconsole.log(m.getAtIndex(-1))\n// => 'd'\nconsole.log(m.getAtIndex(10))\n// => undefined\nconsole.log(m.getAtIndex(10, 'q'))\n// => 'q'\n"))),(0,a.kt)("h4",s({},{id:"overrides-11"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface#getAtIndex"}),"SortedSet.getAtIndex"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"has"}),(0,a.kt)("inlineCode",{parentName:"h3"},"has")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-11"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"has(): false;"))),(0,a.kt)("h4",s({},{id:"overrides-12"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#has"}),"VariantSetBase.has"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"intersect"}),(0,a.kt)("inlineCode",{parentName:"h3"},"intersect")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-12"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"intersect(): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedSet")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"overrides-13"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#intersect"}),"VariantSetBase.intersect"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"max"}),(0,a.kt)("inlineCode",{parentName:"h3"},"max")),(0,a.kt)("p",null,"Returns the maximum value of the SortedSet, or a fallback value (default: undefined) if the SortedSet is empty.")),(0,a.kt)("h4",s({},{id:"definitions-1"}),"Definitions"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"max(): T "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined;"))),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"max<O>(otherwise: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"OptLazy")),(0,a.kt)("inlineCode",{parentName:"p"},"<O>): T "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;"))),(0,a.kt)("admonition",s({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"const m = SortedSet.of('b', 'd', 'a', 'c').asNormal();\nconsole.log(m.max())\n// => 'a'\nconsole.log(m.max('q'))\n// => 'a'\nconsole.log(SortedSet.empty().max())\n// => undefined\nconsole.log(SortedSet.empty().max('q'))\n// => 'q'\n"))),(0,a.kt)("h4",s({},{id:"overrides-14"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface#max"}),"SortedSet.max"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"min"}),(0,a.kt)("inlineCode",{parentName:"h3"},"min")),(0,a.kt)("p",null,"Returns the minimum value of the SortedSet, or a fallback value (default: undefined) if the SortedSet is empty.")),(0,a.kt)("h4",s({},{id:"definitions-2"}),"Definitions"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"min(): T "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," undefined;"))),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"min<O>(otherwise: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/OptLazy/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"OptLazy")),(0,a.kt)("inlineCode",{parentName:"p"},"<O>): T "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," O;"))),(0,a.kt)("admonition",s({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"const m = SortedSet.of('b', 'd', 'a', 'c').asNormal();\nconsole.log(m.min())\n// => 'a'\nconsole.log(m.min('q'))\n// => 'a'\nconsole.log(SortedSet.empty().min())\n// => undefined\nconsole.log(SortedSet.empty().min('q'))\n// => 'q'\n"))),(0,a.kt)("h4",s({},{id:"overrides-15"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface#min"}),"SortedSet.min"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"nonempty"}),(0,a.kt)("inlineCode",{parentName:"h3"},"nonEmpty")),(0,a.kt)("p",null,"Returns true if there is at least one entry in the collection, and instructs the compiler to treat the collection as a .NonEmpty type.")),(0,a.kt)("h4",s({},{id:"definition-13"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"nonEmpty(): this is "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/WithElem/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"WithElem")),(0,a.kt)("inlineCode",{parentName:"p"},"<Tp, T>['nonEmpty'];"))),(0,a.kt)("admonition",s({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"const m: HashSet<number> = HashSet.of(1, 2, 2)\nm.stream().first(0)     // compiler allows fallback value since the Stream may be empty\nif (m.nonEmpty()) {\nm.stream().first(0)   // compiler error: fallback value not allowed since Stream is not empty\n}\n"))),(0,a.kt)("h4",s({},{id:"overrides-16"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#nonEmpty"}),"VariantSetBase.nonEmpty"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"remove"}),(0,a.kt)("inlineCode",{parentName:"h3"},"remove")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-14"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"remove(): this;"))),(0,a.kt)("h4",s({},{id:"overrides-17"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#remove"}),"VariantSetBase.remove"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"removeall"}),(0,a.kt)("inlineCode",{parentName:"h3"},"removeAll")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-15"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"removeAll(): this;"))),(0,a.kt)("h4",s({},{id:"overrides-18"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#removeAll"}),"VariantSetBase.removeAll"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"slice"}),(0,a.kt)("inlineCode",{parentName:"h3"},"slice")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-16"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"slice(): this;"))),(0,a.kt)("h4",s({},{id:"overrides-19"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface#slice"}),"SortedSet.slice"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"sliceindex"}),(0,a.kt)("inlineCode",{parentName:"h3"},"sliceIndex")),(0,a.kt)("p",null,"Returns a SortedSet containing only those values that are within the given ",(0,a.kt)("inlineCode",{parentName:"p"},"range")," index range of the value sort order.")),(0,a.kt)("h4",s({},{id:"definition-17"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"sliceIndex(range: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/IndexRange/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"IndexRange")),(0,a.kt)("inlineCode",{parentName:"p"},"): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedSet")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"parameters-6"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"range")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/common/IndexRange/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"IndexRange"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"an ",(0,a.kt)("inlineCode",{parentName:"td"},"IndexRange")," defining the sort order indices to include.")))),(0,a.kt)("admonition",s({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"const m = SortedSet.of('b', 'd', 'a', 'c').asNormal();\nconsole.log(m.sliceIndex({ start: 1, amount: 2 }).toArray())\n// => ['b', 'c']\n"))),(0,a.kt)("h4",s({},{id:"overrides-20"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface#sliceIndex"}),"SortedSet.sliceIndex"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"stream"}),(0,a.kt)("inlineCode",{parentName:"h3"},"stream")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-18"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"stream(reversed?: boolean): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Stream")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"parameters-7"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"reversed")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"boolean")),(0,a.kt)("td",s({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",s({},{id:"overrides-21"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface#stream"}),"SortedSet.stream"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"streamrange"}),(0,a.kt)("inlineCode",{parentName:"h3"},"streamRange")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-19"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"streamRange(): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Stream")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"overrides-22"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface#streamRange"}),"SortedSet.streamRange"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"streamsliceindex"}),(0,a.kt)("inlineCode",{parentName:"h3"},"streamSliceIndex")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-20"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"streamSliceIndex(): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Stream")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"overrides-23"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface#streamSliceIndex"}),"SortedSet.streamSliceIndex"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"symdifference"}),(0,a.kt)("inlineCode",{parentName:"h3"},"symDifference")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-21"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"symDifference(other: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedSet")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"parameters-8"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"other")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,a.kt)("inlineCode",{parentName:"td"},"<T>")),(0,a.kt)("td",s({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",s({},{id:"overrides-24"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/interface#symDifference"}),"RSetBase.symDifference"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"take"}),(0,a.kt)("inlineCode",{parentName:"h3"},"take")),(0,a.kt)("p",null,"Returns a SortedSet containing the the first ",(0,a.kt)("inlineCode",{parentName:"p"},"amount")," of value of this SortedSet.")),(0,a.kt)("h4",s({},{id:"definition-22"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"take(amount: number): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedSet")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"parameters-9"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"amount")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the amount of elements to keep")))),(0,a.kt)("admonition",s({},{title:"note",type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"a negative ",(0,a.kt)("inlineCode",{parentName:"p"},"amount")," takes the last values instead of the first, e.g. -2 is the last 2 elements")),(0,a.kt)("admonition",s({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"const m = SortedSet.of('b', 'd', 'a', 'c').asNormal();\nconsole.log(m.take(2).toArray())\n// => ['a', 'b']\nconsole.log(m.take(-2).toArray())\n// => ['c', 'd']\n"))),(0,a.kt)("h4",s({},{id:"overrides-25"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface#take"}),"SortedSet.take"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"toarray"}),(0,a.kt)("inlineCode",{parentName:"h3"},"toArray")),(0,a.kt)("p",null,"Returns an array containing all values in this collection.")),(0,a.kt)("h4",s({},{id:"definition-23"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"toArray(): T[];"))),(0,a.kt)("admonition",s({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"HashSet.of(1, 2, 3).toArray()   // => [1, 2, 3]\n"))),(0,a.kt)("admonition",s({},{title:"note",type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"O(log(N))  @note it is safe to mutate the returned array, however, the array elements are not copied, thus should be treated as read-only")),(0,a.kt)("h4",s({},{id:"overrides-26"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#toArray"}),"VariantSetBase.toArray"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"tobuilder"}),(0,a.kt)("inlineCode",{parentName:"h3"},"toBuilder")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-24"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"toBuilder(): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/Builder/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedSet.Builder")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",s({},{id:"overrides-27"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/interface#toBuilder"}),"RSetBase.toBuilder"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"tojson"}),(0,a.kt)("inlineCode",{parentName:"h3"},"toJSON")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-25"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"toJSON(): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/ToJSON/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"ToJSON")),(0,a.kt)("inlineCode",{parentName:"p"},"<T[]>;"))),(0,a.kt)("h4",s({},{id:"overrides-28"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#toJSON"}),"VariantSetBase.toJSON"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"tostring"}),(0,a.kt)("inlineCode",{parentName:"h3"},"toString")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-26"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"toString(): string;"))),(0,a.kt)("h4",s({},{id:"overrides-29"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/VariantSetBase/interface#toString"}),"VariantSetBase.toString"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"union"}),(0,a.kt)("inlineCode",{parentName:"h3"},"union")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",s({},{id:"definition-27"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"union(other: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>): "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/sorted/SortedSet/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"SortedSet")),(0,a.kt)("inlineCode",{parentName:"p"},"<T> "),(0,a.kt)("code",null,"|"),(0,a.kt)("inlineCode",{parentName:"p"}," any;"))),(0,a.kt)("h4",s({},{id:"parameters-10"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"other")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,a.kt)("inlineCode",{parentName:"td"},"<T>")),(0,a.kt)("td",s({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",s({},{id:"overrides-30"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set-custom/RSetBase/interface#union"}),"RSetBase.union"))))}h.isMDXComponent=!0}}]);