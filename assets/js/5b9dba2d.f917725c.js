"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[53557],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return s}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=u(n),s=r,f=d["".concat(p,".").concat(s)]||d[s]||c[s]||i;return n?a.createElement(f,o(o({ref:t},m),{},{components:n})):a.createElement(f,o({ref:t},m))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},88613:function(e,t,n){n.r(t),n.d(t,{assets:function(){return g},contentTitle:function(){return s},default:function(){return y},frontMatter:function(){return d},metadata:function(){return f},toc:function(){return b}});var a=n(3905),r=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,c=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&m(e,n,t[n]);if(l)for(var n of l(t))u.call(t,n)&&m(e,n,t[n]);return e};const d={title:"Range (namespace)",slug:"/rimbu/common/Range/namespace"},s="namespace Range",f={unversionedId:"rimbu_common/Range/index",id:"rimbu_common/Range/index",title:"Range (namespace)",description:"A range definition for any type of (orderable) value. If a start or end is defined, a tuple can be used where the second item is a boolean indicating whether that end is inclusive (true) or exclusive (false).",source:"@site/api/rimbu_common/Range/index.mdx",sourceDirName:"rimbu_common/Range",slug:"/rimbu/common/Range/namespace",permalink:"/api/rimbu/common/Range/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"Range (namespace)",slug:"/rimbu/common/Range/namespace"}},g={},b=[{value:"Functions",id:"functions",level:2},{value:"<code>getNormalizedRange</code>",id:"getnormalizedrange",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:3},{value:"Parameters",id:"parameters",level:4}],k={toc:b};function y(e){var t,n=e,{components:r}=n,m=((e,t)=>{var n={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&l)for(var a of l(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=c(c({},k),m),i(t,o({components:r,mdxType:"MDXLayout"}))),(0,a.kt)("h1",c({},{id:"namespace-range"}),(0,a.kt)("inlineCode",{parentName:"h1"},"namespace Range")),(0,a.kt)("p",null,"A range definition for any type of (orderable) value. If a start or end is defined, a tuple can be used where the second item is a boolean indicating whether that end is inclusive (true) or exclusive (false).\nA Range of type T can have one of the following forms:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"{ end: T }"),(0,a.kt)("li",{parentName:"ul"},"{ end: ","[T, boolean]"," }"),(0,a.kt)("li",{parentName:"ul"},"{ start: T }"),(0,a.kt)("li",{parentName:"ul"},"{ start: T, end: T }"),(0,a.kt)("li",{parentName:"ul"},"{ start: T, end: ","[T, boolean]"," }"),(0,a.kt)("li",{parentName:"ul"},"{ start: ","[T, boolean]"," }"),(0,a.kt)("li",{parentName:"ul"},"{ start: ","[T, boolean]",", end: T }"),(0,a.kt)("li",{parentName:"ul"},"{ start: ","[T, boolean]",", end: ","[T, boolean]"," }")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Companion type:")," ",(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/common/Range/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"Range<T>"))),(0,a.kt)("h2",c({},{id:"functions"}),"Functions"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",c({},{id:"getnormalizedrange"}),(0,a.kt)("inlineCode",{parentName:"h3"},"getNormalizedRange")),(0,a.kt)("p",null,"Simplifies a given ",(0,a.kt)("inlineCode",{parentName:"p"},"range")," ",(0,a.kt)("inlineCode",{parentName:"p"},"Range")," input for easier processing, by returning optional start and end ranges including whether they are inclusive or exclusive")),(0,a.kt)("h4",c({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"function getNormalizedRange<T>(range: "),(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/common/Range/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"Range")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>): {"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"start?: [T, boolean];"),(0,a.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"end?: [T, boolean];"),(0,a.kt)("br",null),"\xa0","\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"};"))),(0,a.kt)("h3",c({},{id:"type-parameters"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",c({parentName:"tr"},{align:null}),"T"),(0,a.kt)("td",c({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",c({},{id:"parameters"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",c({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"range")),(0,a.kt)("td",c({parentName:"tr"},{align:null}),(0,a.kt)("a",c({parentName:"td"},{href:"/api/rimbu/common/Range/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"Range")),(0,a.kt)("inlineCode",{parentName:"td"},"<T>")),(0,a.kt)("td",c({parentName:"tr"},{align:null}),"the ",(0,a.kt)("inlineCode",{parentName:"td"},"Range")," to use"))))))}y.isMDXComponent=!0}}]);