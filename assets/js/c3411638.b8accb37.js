"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[7789],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return f}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),p=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(u.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(t),f=o,y=m["".concat(u,".").concat(f)]||m[f]||s[f]||c;return t?r.createElement(y,a(a({ref:n},l),{},{components:t})):r.createElement(y,a({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,a=new Array(c);a[0]=m;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<c;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},90267:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return f},default:function(){return v},frontMatter:function(){return m},metadata:function(){return y},toc:function(){return b}});var r=t(3905),o=Object.defineProperty,c=Object.defineProperties,a=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,l=(e,n,t)=>n in e?o(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,s=(e,n)=>{for(var t in n||(n={}))u.call(n,t)&&l(e,t,n[t]);if(i)for(var t of i(n))p.call(n,t)&&l(e,t,n[t]);return e};const m={title:"AsyncReducer",slug:"/rimbu/common/AsyncReducer/type"},f="type AsyncReducer<I,O>",y={unversionedId:"rimbu_common/AsyncReducer.type",id:"rimbu_common/AsyncReducer.type",title:"AsyncReducer",description:"An AsyncReducer is a stand-alone asynchronous calculation that takes input values of type I, and, when requested, produces an output value of type O.",source:"@site/api/rimbu_common/AsyncReducer.type.mdx",sourceDirName:"rimbu_common",slug:"/rimbu/common/AsyncReducer/type",permalink:"/api/rimbu/common/AsyncReducer/type",draft:!1,tags:[],version:"current",frontMatter:{title:"AsyncReducer",slug:"/rimbu/common/AsyncReducer/type"},sidebar:"defaultSidebar",previous:{title:"AsyncReducer.Impl<I,O,S>",permalink:"/api/rimbu/common/AsyncReducer/Impl/interface"},next:{title:"CollectFun (namespace)",permalink:"/api/rimbu/common/CollectFun/namespace"}},d={},b=[{value:"Definition",id:"definition",level:2}],O={toc:b};function v(e){var n,t=e,{components:o}=t,l=((e,n)=>{var t={};for(var r in e)u.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&i)for(var r of i(e))n.indexOf(r)<0&&p.call(e,r)&&(t[r]=e[r]);return t})(t,["components"]);return(0,r.kt)("wrapper",(n=s(s({},O),l),c(n,a({components:o,mdxType:"MDXLayout"}))),(0,r.kt)("h1",s({},{id:"type-asyncreducerio"}),(0,r.kt)("inlineCode",{parentName:"h1"},"type AsyncReducer<I,O>")),(0,r.kt)("p",null,"An ",(0,r.kt)("inlineCode",{parentName:"p"},"AsyncReducer")," is a stand-alone asynchronous calculation that takes input values of type I, and, when requested, produces an output value of type O."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Companion namespace:")," ",(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/AsyncReducer/namespace"}),"AsyncReducer")),(0,r.kt)("h2",s({},{id:"definition"}),"Definition"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"export declare type AsyncReducer<I, O = I> = "),(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/AsyncReducer/Impl/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Impl")),(0,r.kt)("inlineCode",{parentName:"p"},"<I, O, unknown>;")))}v.isMDXComponent=!0}}]);