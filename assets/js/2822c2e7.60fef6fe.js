"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[10334],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),m=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=m(r),f=n,y=c["".concat(o,".").concat(f)]||c[f]||s[f]||i;return r?a.createElement(y,p(p({ref:t},u),{},{components:r})):a.createElement(y,p({ref:t},u))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,p=new Array(i);p[0]=f;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[c]="string"==typeof e?e:n,p[1]=l;for(var m=2;m<i;m++)p[m]=r[m];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},99675:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>M,contentTitle:()=>d,default:()=>N,frontMatter:()=>y,metadata:()=>b,toc:()=>k});var a=r(3905),n=Object.defineProperty,i=Object.defineProperties,p=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,c=(e,t)=>{for(var r in t||(t={}))o.call(t,r)&&u(e,r,t[r]);if(l)for(var r of l(t))m.call(t,r)&&u(e,r,t[r]);return e},s=(e,t)=>i(e,p(t)),f=(e,t)=>{var r={};for(var a in e)o.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&l)for(var a of l(e))t.indexOf(a)<0&&m.call(e,a)&&(r[a]=e[a]);return r};const y={title:"MultiMap.NonEmpty<K,V>",slug:"/rimbu/multimap/MultiMap/NonEmpty/interface"},d="interface MultiMap.NonEmpty<K,V>",b={unversionedId:"rimbu_multimap/MultiMap/NonEmpty.interface",id:"rimbu_multimap/MultiMap/NonEmpty.interface",title:"MultiMap.NonEmpty<K,V>",description:"A non-empty type-invariant immutable MultiMap of key type K, and value type V. In the Map, each key has at least one value. See the MultiMap documentation and the MultiMap API documentation",source:"@site/api/rimbu_multimap/MultiMap/NonEmpty.interface.mdx",sourceDirName:"rimbu_multimap/MultiMap",slug:"/rimbu/multimap/MultiMap/NonEmpty/interface",permalink:"/api/rimbu/multimap/MultiMap/NonEmpty/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"MultiMap.NonEmpty<K,V>",slug:"/rimbu/multimap/MultiMap/NonEmpty/interface"},sidebar:"defaultSidebar",previous:{title:"MultiMap.Context<UK,UV>",permalink:"/api/rimbu/multimap/MultiMap/Context/interface"},next:{title:"MultiMap.Types",permalink:"/api/rimbu/multimap/MultiMap/Types/interface"}},M={},k=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition",level:4},{value:"Overrides",id:"overrides",level:4}],v={toc:k},h="wrapper";function N(e){var t=e,{components:r}=t,n=f(t,["components"]);return(0,a.kt)(h,s(c(c({},v),n),{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",c({},{id:"interface-multimapnonemptykv"}),(0,a.kt)("inlineCode",{parentName:"h1"},"interface MultiMap.NonEmpty<K,V>")),(0,a.kt)("p",null,"A non-empty type-invariant immutable MultiMap of key type K, and value type V. In the Map, each key has at least one value. See the ",(0,a.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/docs/collections/multimap"}),"MultiMap documentation")," and the ",(0,a.kt)("a",c({parentName:"p"},{href:"https://rimbu.org/api/rimbu/multimap/MultiMap/interface"}),"MultiMap API documentation")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Extends:")," ",(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Streamable.NonEmpty<T>")),", ",(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/multimap/MultiMap/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"MultiMap<K,V>"))),(0,a.kt)("h2",c({},{id:"type-parameters"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",c({parentName:"tr"},{align:null}),"K"),(0,a.kt)("td",c({parentName:"tr"},{align:null}),"the key type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",c({parentName:"tr"},{align:null}),"V"),(0,a.kt)("td",c({parentName:"tr"},{align:null}),"the value type")))),(0,a.kt)("h2",c({},{id:"methods"}),"Methods"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",c({},{id:"stream"}),(0,a.kt)("inlineCode",{parentName:"h3"},"stream")),(0,a.kt)("p",null,"Returns a non-empty ",(0,a.kt)("inlineCode",{parentName:"p"},"Stream")," of the elements in this collection.")),(0,a.kt)("h4",c({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"stream(): "),(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h4",c({},{id:"overrides"}),"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",c({parentName:"p"},{href:"/api/rimbu/stream/Streamable/NonEmpty/interface#stream"}),"NonEmpty.stream"))))}N.isMDXComponent=!0}}]);