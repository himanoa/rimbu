"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[14399],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=p(n),f=a,y=m["".concat(l,".").concat(f)]||m[f]||s[f]||i;return n?r.createElement(y,o(o({ref:t},u),{},{components:n})):r.createElement(y,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5608:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return f},default:function(){return S},frontMatter:function(){return m},metadata:function(){return y},toc:function(){return b}});var r=n(3905),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&u(e,n,t[n]);if(c)for(var n of c(t))p.call(t,n)&&u(e,n,t[n]);return e};const m={title:"VariantSet (namespace)",slug:"/rimbu/collection-types/set/VariantSet/namespace"},f="namespace VariantSet",y={unversionedId:"rimbu_collection-types/set/VariantSet/index",id:"rimbu_collection-types/set/VariantSet/index",title:"VariantSet (namespace)",description:"A type-variant immutable Set of value type T. In the Set, there are no duplicate values. See the Set documentation and the VariantSet API documentation",source:"@site/api/rimbu_collection-types/set/VariantSet/index.mdx",sourceDirName:"rimbu_collection-types/set/VariantSet",slug:"/rimbu/collection-types/set/VariantSet/namespace",permalink:"/api/rimbu/collection-types/set/VariantSet/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"VariantSet (namespace)",slug:"/rimbu/collection-types/set/VariantSet/namespace"},sidebar:"defaultSidebar",previous:{title:"RSet<T>",permalink:"/api/rimbu/collection-types/set/RSet/interface"},next:{title:"VariantSet.NonEmpty<T>",permalink:"/api/rimbu/collection-types/set/VariantSet/NonEmpty/interface"}},d={},b=[{value:"Interfaces",id:"interfaces",level:2}],h={toc:b};function S(e){var t,n=e,{components:a}=n,u=((e,t)=>{var n={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&c)for(var r of c(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=s(s({},h),u),i(t,o({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("h1",s({},{id:"namespace-variantset"}),(0,r.kt)("inlineCode",{parentName:"h1"},"namespace VariantSet")),(0,r.kt)("p",null,"A type-variant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,r.kt)("a",s({parentName:"p"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,r.kt)("a",s({parentName:"p"},{href:"https://rimbu.org/api/rimbu/collection-types/set/VariantSet/interface"}),"VariantSet API documentation")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Companion interface:")," ",(0,r.kt)("a",s({parentName:"p"},{href:"/api/rimbu/collection-types/set/VariantSet/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"VariantSet<T>"))),(0,r.kt)("h2",s({},{id:"interfaces"}),"Interfaces"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),(0,r.kt)("a",s({parentName:"td"},{href:"/api/rimbu/collection-types/set/VariantSet/NonEmpty/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"VariantSet.NonEmpty<T>"))),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"A non-empty type-variant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,r.kt)("a",s({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,r.kt)("a",s({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/set/VariantSet/interface"}),"VariantSet API documentation"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),(0,r.kt)("a",s({parentName:"td"},{href:"/api/rimbu/collection-types/set/VariantSet/Types/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"VariantSet.Types"))),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))))}S.isMDXComponent=!0}}]);