"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[6884],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),f=u(r),m=a,b=f["".concat(p,".").concat(m)]||f[m]||d[m]||i;return r?n.createElement(b,l(l({ref:t},c),{},{components:r})):n.createElement(b,l({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=f;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},68644:function(e,t,r){r.r(t),r.d(t,{assets:function(){return y},contentTitle:function(){return m},default:function(){return O},frontMatter:function(){return f},metadata:function(){return b},toc:function(){return s}});var n=r(3905),a=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,d=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&c(e,r,t[r]);if(o)for(var r of o(t))u.call(t,r)&&c(e,r,t[r]);return e};const f={title:"Value",slug:"/rimbu/deep/Literal/Value/type"},m="type Value<T>",b={unversionedId:"rimbu_deep/Literal/Value.type",id:"rimbu_deep/Literal/Value.type",title:"Value",description:"Type to determine whether a value needs to be a Literal instance or may be a Literal instance.",source:"@site/api/rimbu_deep/Literal/Value.type.mdx",sourceDirName:"rimbu_deep/Literal",slug:"/rimbu/deep/Literal/Value/type",permalink:"/api/rimbu/deep/Literal/Value/type",draft:!1,tags:[],version:"current",frontMatter:{title:"Value",slug:"/rimbu/deep/Literal/Value/type"},sidebar:"defaultSidebar",previous:{title:"Obj",permalink:"/api/rimbu/deep/Literal/Obj/type"},next:{title:"Literal<T>",permalink:"/api/rimbu/deep/Literal/interface"}},y={},s=[{value:"Definition",id:"definition",level:2}],k={toc:s};function O(e){var t,r=e,{components:a}=r,c=((e,t)=>{var r={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&u.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=d(d({},k),c),i(t,l({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",d({},{id:"type-valuet"}),(0,n.kt)("inlineCode",{parentName:"h1"},"type Value<T>")),(0,n.kt)("p",null,"Type to determine whether a value needs to be a Literal instance or may be a Literal instance."),(0,n.kt)("h2",d({},{id:"definition"}),"Definition"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"type Value<T> = T extends {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"readonly [Symbol.iterator]: any;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"} "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," "),(0,n.kt)("a",d({parentName:"p"},{href:"/api/rimbu/deep/Literal/Obj/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Obj")),(0,n.kt)("inlineCode",{parentName:"p"}," "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"},"readonly any[]"),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"},"undefined"),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"},"(() => any) ? T extends string ? T"),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," "),(0,n.kt)("a",d({parentName:"p"},{href:"/api/rimbu/deep/Literal/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Literal")),(0,n.kt)("inlineCode",{parentName:"p"},"<T> : "),(0,n.kt)("a",d({parentName:"p"},{href:"/api/rimbu/deep/Literal/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Literal")),(0,n.kt)("inlineCode",{parentName:"p"},"<T> : T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," "),(0,n.kt)("a",d({parentName:"p"},{href:"/api/rimbu/deep/Literal/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Literal")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;")))}O.isMDXComponent=!0}}]);