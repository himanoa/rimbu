"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[45046],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=u(n),k=i,h=m["".concat(o,".").concat(k)]||m[k]||s[k]||l;return n?a.createElement(h,r(r({ref:t},d),{},{components:n})):a.createElement(h,r({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=k;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[m]="string"==typeof e?e:i,r[1]=p;for(var u=2;u<l;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},35767:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>c,default:()=>b,frontMatter:()=>h,metadata:()=>f,toc:()=>v});var a=n(3905),i=Object.defineProperty,l=Object.defineProperties,r=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,m=(e,t)=>{for(var n in t||(t={}))o.call(t,n)&&d(e,n,t[n]);if(p)for(var n of p(t))u.call(t,n)&&d(e,n,t[n]);return e},s=(e,t)=>l(e,r(t)),k=(e,t)=>{var n={};for(var a in e)o.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&p)for(var a of p(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n};const h={title:"HashMultiMapHashValue.Types",slug:"/rimbu/multimap/HashMultiMapHashValue/Types/interface"},c="interface HashMultiMapHashValue.Types",f={unversionedId:"rimbu_multimap/HashMultiMapHashValue/Types.interface",id:"rimbu_multimap/HashMultiMapHashValue/Types.interface",title:"HashMultiMapHashValue.Types",description:"Utility interface that provides higher-kinded types for this collection.",source:"@site/api/rimbu_multimap/HashMultiMapHashValue/Types.interface.mdx",sourceDirName:"rimbu_multimap/HashMultiMapHashValue",slug:"/rimbu/multimap/HashMultiMapHashValue/Types/interface",permalink:"/api/rimbu/multimap/HashMultiMapHashValue/Types/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"HashMultiMapHashValue.Types",slug:"/rimbu/multimap/HashMultiMapHashValue/Types/interface"},sidebar:"defaultSidebar",previous:{title:"HashMultiMapHashValue.NonEmpty<K,V>",permalink:"/api/rimbu/multimap/HashMultiMapHashValue/NonEmpty/interface"},next:{title:"HashMultiMapHashValue<K,V>",permalink:"/api/rimbu/multimap/HashMultiMapHashValue/interface"}},y={},v=[{value:"Properties",id:"properties",level:2},{value:"<code>builder</code>",id:"builder",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>keyMap</code>",id:"keymap",level:3},{value:"Definition",id:"definition-2",level:4},{value:"<code>keyMapContext</code>",id:"keymapcontext",level:3},{value:"Definition",id:"definition-3",level:4},{value:"<code>keyMapNonEmpty</code>",id:"keymapnonempty",level:3},{value:"Definition",id:"definition-4",level:4},{value:"<code>keyMapValues</code>",id:"keymapvalues",level:3},{value:"Definition",id:"definition-5",level:4},{value:"<code>keyMapValuesContext</code>",id:"keymapvaluescontext",level:3},{value:"Definition",id:"definition-6",level:4},{value:"<code>keyMapValuesNonEmpty</code>",id:"keymapvaluesnonempty",level:3},{value:"Definition",id:"definition-7",level:4},{value:"<code>nonEmpty</code>",id:"nonempty",level:3},{value:"Definition",id:"definition-8",level:4},{value:"<code>normal</code>",id:"normal",level:3},{value:"Definition",id:"definition-9",level:4}],M={toc:v},N="wrapper";function b(e){var t=e,{components:n}=t,i=k(t,["components"]);return(0,a.kt)(N,s(m(m({},M),i),{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",m({},{id:"interface-hashmultimaphashvaluetypes"}),(0,a.kt)("inlineCode",{parentName:"h1"},"interface HashMultiMapHashValue.Types")),(0,a.kt)("p",null,"Utility interface that provides higher-kinded types for this collection."),(0,a.kt)("h2",m({},{id:"properties"}),"Properties"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"builder"}),(0,a.kt)("inlineCode",{parentName:"h3"},"builder")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly builder: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/multimap/HashMultiMapHashValue/Builder/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"HashMultiMapHashValue.Builder")),(0,a.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"context"}),(0,a.kt)("inlineCode",{parentName:"h3"},"context")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition-1"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly context: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/multimap/HashMultiMapHashValue/Context/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"HashMultiMapHashValue.Context")),(0,a.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"keymap"}),(0,a.kt)("inlineCode",{parentName:"h3"},"keyMap")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition-2"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly keyMap: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/hashed/HashMap/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"HashMap")),(0,a.kt)("inlineCode",{parentName:"p"},"<this['_K'], "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"HashSet.NonEmpty")),(0,a.kt)("inlineCode",{parentName:"p"},"<this['_V']>>;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"keymapcontext"}),(0,a.kt)("inlineCode",{parentName:"h3"},"keyMapContext")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition-3"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly keyMapContext: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/hashed/HashMap/Context/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"HashMap.Context")),(0,a.kt)("inlineCode",{parentName:"p"},"<this['_K']>;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"keymapnonempty"}),(0,a.kt)("inlineCode",{parentName:"h3"},"keyMapNonEmpty")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition-4"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly keyMapNonEmpty: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/hashed/HashMap/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"HashMap.NonEmpty")),(0,a.kt)("inlineCode",{parentName:"p"},"<this['_K'], "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"HashSet.NonEmpty")),(0,a.kt)("inlineCode",{parentName:"p"},"<this['_V']>>;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"keymapvalues"}),(0,a.kt)("inlineCode",{parentName:"h3"},"keyMapValues")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition-5"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly keyMapValues: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"HashSet")),(0,a.kt)("inlineCode",{parentName:"p"},"<this['_V']>;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"keymapvaluescontext"}),(0,a.kt)("inlineCode",{parentName:"h3"},"keyMapValuesContext")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition-6"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly keyMapValuesContext: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/Context/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"HashSet.Context")),(0,a.kt)("inlineCode",{parentName:"p"},"<this['_V']>;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"keymapvaluesnonempty"}),(0,a.kt)("inlineCode",{parentName:"h3"},"keyMapValuesNonEmpty")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition-7"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly keyMapValuesNonEmpty: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/hashed/set/HashSet/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"HashSet.NonEmpty")),(0,a.kt)("inlineCode",{parentName:"p"},"<this['_V']>;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"nonempty"}),(0,a.kt)("inlineCode",{parentName:"h3"},"nonEmpty")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition-8"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly nonEmpty: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/multimap/HashMultiMapHashValue/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"HashMultiMapHashValue.NonEmpty")),(0,a.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"normal"}),(0,a.kt)("inlineCode",{parentName:"h3"},"normal")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition-9"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly normal: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/multimap/HashMultiMapHashValue/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"HashMultiMapHashValue")),(0,a.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))))}b.isMDXComponent=!0}}]);