"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[3062],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},p=Object.keys(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),d=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,p=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=d(a),c=n,h=m["".concat(l,".").concat(c)]||m[c]||s[c]||p;return a?r.createElement(h,i(i({ref:t},u),{},{components:a})):r.createElement(h,i({ref:t},u))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=a.length,i=new Array(p);i[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[m]="string"==typeof e?e:n,i[1]=o;for(var d=2;d<p;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},31922:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>y,contentTitle:()=>f,default:()=>v,frontMatter:()=>h,metadata:()=>g,toc:()=>b});var r=a(3905),n=Object.defineProperty,p=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,u=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,m=(e,t)=>{for(var a in t||(t={}))l.call(t,a)&&u(e,a,t[a]);if(o)for(var a of o(t))d.call(t,a)&&u(e,a,t[a]);return e},s=(e,t)=>p(e,i(t)),c=(e,t)=>{var a={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&o)for(var r of o(e))t.indexOf(r)<0&&d.call(e,r)&&(a[r]=e[r]);return a};const h={title:"EdgeValuedGraphHashed.NonEmpty<N,V>",slug:"/rimbu/graph/EdgeValuedGraphHashed/NonEmpty/interface"},f="interface EdgeValuedGraphHashed.NonEmpty<N,V>",g={unversionedId:"rimbu_graph/EdgeValuedGraphHashed/NonEmpty.interface",id:"rimbu_graph/EdgeValuedGraphHashed/NonEmpty.interface",title:"EdgeValuedGraphHashed.NonEmpty<N,V>",description:"A non-empty type-invariant immutable valued edge (undirected) graph. The nodes are internally maintained using HashMaps See the Graph documentation and the EdgeValuedGraphHashed API documentation",source:"@site/api/rimbu_graph/EdgeValuedGraphHashed/NonEmpty.interface.mdx",sourceDirName:"rimbu_graph/EdgeValuedGraphHashed",slug:"/rimbu/graph/EdgeValuedGraphHashed/NonEmpty/interface",permalink:"/api/rimbu/graph/EdgeValuedGraphHashed/NonEmpty/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"EdgeValuedGraphHashed.NonEmpty<N,V>",slug:"/rimbu/graph/EdgeValuedGraphHashed/NonEmpty/interface"},sidebar:"defaultSidebar",previous:{title:"EdgeValuedGraphHashed.Context<UN>",permalink:"/api/rimbu/graph/EdgeValuedGraphHashed/Context/interface"},next:{title:"EdgeValuedGraphHashed.Types",permalink:"/api/rimbu/graph/EdgeValuedGraphHashed/Types/interface"}},y={},b=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition",level:4}],E={toc:b},N="wrapper";function v(e){var t=e,{components:a}=t,n=c(t,["components"]);return(0,r.kt)(N,s(m(m({},E),n),{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",m({},{id:"interface-edgevaluedgraphhashednonemptynv"}),(0,r.kt)("inlineCode",{parentName:"h1"},"interface EdgeValuedGraphHashed.NonEmpty<N,V>")),(0,r.kt)("p",null,"A non-empty type-invariant immutable valued edge (undirected) graph. The nodes are internally maintained using HashMaps See the ",(0,r.kt)("a",m({parentName:"p"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,r.kt)("a",m({parentName:"p"},{href:"https://rimbu.org/api/rimbu/graph/EdgeValuedGraphHashed/interface"}),"EdgeValuedGraphHashed API documentation")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Extends:")," ",(0,r.kt)("a",m({parentName:"p"},{href:"/api/rimbu/graph/EdgeValuedGraphHashed/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"EdgeValuedGraphHashed<N,V>"))),(0,r.kt)("h2",m({},{id:"type-parameters"}),"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",m({parentName:"tr"},{align:null}),"N"),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"the node type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",m({parentName:"tr"},{align:null}),"V"),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"the connection value type")))),(0,r.kt)("h2",m({},{id:"methods"}),"Methods"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("h3",m({},{id:"stream"}),(0,r.kt)("inlineCode",{parentName:"h3"},"stream")),(0,r.kt)("p",null,"Returns a non-empty Stream containing all entries of this collection as tuples of key and value.")),(0,r.kt)("h4",m({},{id:"definition"}),"Definition"),(0,r.kt)("code",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"stream(): Stream.NonEmpty<ValuedGraphElement<N, V>>;"))),(0,r.kt)("admonition",m({},{title:"example",type:"note"}),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-ts"}),"EdgeValuedGraphHashed.of([1, 2, 'a'], [2, 3, 'b']).stream().toArray()\n// => [[1, 2, 'a'], [2, 3, 'b']]\n")))))}v.isMDXComponent=!0}}]);