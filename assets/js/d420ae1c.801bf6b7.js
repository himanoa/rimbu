"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[14956],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>y});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},m=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=c(a),d=r,y=u["".concat(l,".").concat(d)]||u[d]||s[d]||i;return a?n.createElement(y,p(p({ref:t},m),{},{components:a})):n.createElement(y,p({ref:t},m))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,p=new Array(i);p[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:r,p[1]=o;for(var c=2;c<i;c++)p[c]=a[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},59569:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>f,contentTitle:()=>b,default:()=>v,frontMatter:()=>y,metadata:()=>h,toc:()=>k});var n=a(3905),r=Object.defineProperty,i=Object.defineProperties,p=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,m=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,u=(e,t)=>{for(var a in t||(t={}))l.call(t,a)&&m(e,a,t[a]);if(o)for(var a of o(t))c.call(t,a)&&m(e,a,t[a]);return e},s=(e,t)=>i(e,p(t)),d=(e,t)=>{var a={};for(var n in e)l.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&c.call(e,n)&&(a[n]=e[n]);return a};const y={title:"@rimbu/collection-types",slug:"/rimbu/collection-types"},b="package @rimbu/collection-types",h={unversionedId:"rimbu_collection-types/index",id:"rimbu_collection-types/index",title:"@rimbu/collection-types",description:"The @rimbu/collection-types package is a convenience package that exports everything from the following sub-packages:",source:"@site/api/rimbu_collection-types/index.mdx",sourceDirName:"rimbu_collection-types",slug:"/rimbu/collection-types",permalink:"/api/rimbu/collection-types",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/collection-types",slug:"/rimbu/collection-types"},sidebar:"defaultSidebar",previous:{title:"ContextTypesImpl",permalink:"/api/rimbu/bimultimap/custom/ContextTypesImpl/interface"},next:{title:"RMap (namespace)",permalink:"/api/rimbu/collection-types/RMap/namespace"}},f={},k=[{value:"Interfaces",id:"interfaces",level:2},{value:"Namespaces",id:"namespaces",level:2}],N={toc:k},g="wrapper";function v(e){var t=e,{components:a}=t,r=d(t,["components"]);return(0,n.kt)(g,s(u(u({},N),r),{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",u({},{id:"package-rimbucollection-types"}),(0,n.kt)("inlineCode",{parentName:"h1"},"package @rimbu/collection-types")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"@rimbu/collection-types")," package is a convenience package that exports everything from the following sub-packages:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",u({parentName:"p"},{href:"./collection-types/map"}),(0,n.kt)("inlineCode",{parentName:"a"},"@rimbu/collection-types/map")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",u({parentName:"p"},{href:"./collection-types/set"}),(0,n.kt)("inlineCode",{parentName:"a"},"@rimbu/collection-types/set"))),(0,n.kt)("p",{parentName:"li"},"See the ",(0,n.kt)("a",u({parentName:"p"},{href:"https://rimbu.org/docs/collections/map"}),"Rimbu docs Map page")," and the ",(0,n.kt)("a",u({parentName:"p"},{href:"https://rimbu.org/docs/collections/set"}),"Rimbu docs Set page")," for more information."))),(0,n.kt)("h2",u({},{id:"interfaces"}),"Interfaces"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/RMap/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"RMap<K,V>"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/map/RMap/interface"}),"RMap API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/RSet/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"RSet<T>"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/set/RSet/interface"}),"RSet API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/VariantMap/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"VariantMap<K,V>"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-variant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/map/VariantMap/interface"}),"VariantMap API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/VariantSet/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"VariantSet<T>"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-variant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/set/VariantSet/interface"}),"VariantSet API documentation"))))),(0,n.kt)("h2",u({},{id:"namespaces"}),"Namespaces"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/RMap/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"RMap"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/map/RMap/interface"}),"RMap API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/RSet/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"RSet"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/set/RSet/interface"}),"RSet API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/VariantMap/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"VariantMap"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-variant immutable Map of key type K, and value type V. In the Map, each key has exactly one value, and the Map cannot contain duplicate keys. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/map"}),"Map documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/map/VariantMap/interface"}),"VariantMap API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/collection-types/VariantSet/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"VariantSet"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-variant immutable Set of value type T. In the Set, there are no duplicate values. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/collection-types/set/VariantSet/interface"}),"VariantSet API documentation"))))))}v.isMDXComponent=!0}}]);