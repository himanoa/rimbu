"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[64318],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=a.createContext({}),l=function(e){var t=a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return a.createElement(d.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,d=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=l(r),s=n,h=m["".concat(d,".").concat(s)]||m[s]||u[s]||o;return r?a.createElement(h,i(i({ref:t},c),{},{components:r})):a.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=s;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p[m]="string"==typeof e?e:n,i[1]=p;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}s.displayName="MDXCreateElement"},5819:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>b,contentTitle:()=>g,default:()=>N,frontMatter:()=>h,metadata:()=>f,toc:()=>y});var a=r(3905),n=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,m=(e,t)=>{for(var r in t||(t={}))d.call(t,r)&&c(e,r,t[r]);if(p)for(var r of p(t))l.call(t,r)&&c(e,r,t[r]);return e},u=(e,t)=>o(e,i(t)),s=(e,t)=>{var r={};for(var a in e)d.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&p)for(var a of p(e))t.indexOf(a)<0&&l.call(e,a)&&(r[a]=e[a]);return r};const h={title:"EdgeGraphSorted (namespace)",slug:"/rimbu/core/EdgeGraphSorted/namespace"},g="namespace EdgeGraphSorted",f={unversionedId:"rimbu_core/EdgeGraphSorted/index",id:"rimbu_core/EdgeGraphSorted/index",title:"EdgeGraphSorted (namespace)",description:"An type-invariant immutable valued edge (undirected) graph. The connections are internally maintained using sorted collections See the Graph documentation and the EdgeGraphSorted API documentation",source:"@site/api/rimbu_core/EdgeGraphSorted/index.mdx",sourceDirName:"rimbu_core/EdgeGraphSorted",slug:"/rimbu/core/EdgeGraphSorted/namespace",permalink:"/api/rimbu/core/EdgeGraphSorted/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"EdgeGraphSorted (namespace)",slug:"/rimbu/core/EdgeGraphSorted/namespace"},sidebar:"defaultSidebar",previous:{title:"EdgeGraphHashed",permalink:"/api/rimbu/core/EdgeGraphHashed/var"},next:{title:"EdgeGraphSorted.Builder<N>",permalink:"/api/rimbu/core/EdgeGraphSorted/Builder/interface"}},b={},y=[{value:"Interfaces",id:"interfaces",level:2}],k={toc:y},E="wrapper";function N(e){var t=e,{components:r}=t,n=s(t,["components"]);return(0,a.kt)(E,u(m(m({},k),n),{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",m({},{id:"namespace-edgegraphsorted"}),(0,a.kt)("inlineCode",{parentName:"h1"},"namespace EdgeGraphSorted")),(0,a.kt)("p",null,"An type-invariant immutable valued edge (undirected) graph. The connections are internally maintained using sorted collections See the ",(0,a.kt)("a",m({parentName:"p"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,a.kt)("a",m({parentName:"p"},{href:"https://rimbu.org/api/rimbu/graph/EdgeGraphSorted/interface"}),"EdgeGraphSorted API documentation")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Companion interface:")," ",(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/core/EdgeGraphSorted/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"EdgeGraphSorted<N>"))),(0,a.kt)("h2",m({},{id:"interfaces"}),"Interfaces"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("a",m({parentName:"td"},{href:"/api/rimbu/core/EdgeGraphSorted/Builder/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"EdgeGraphSorted.Builder<N>"))),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"A mutable ",(0,a.kt)("inlineCode",{parentName:"td"},"EdgeGraphSorted")," builder used to efficiently create new immutable instances. See the ",(0,a.kt)("a",m({parentName:"td"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,a.kt)("a",m({parentName:"td"},{href:"https://rimbu.org/api/rimbu/graph/EdgeGraphSorted/Builder/interface"}),"EdgeGraphSorted.Builder API documentation"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("a",m({parentName:"td"},{href:"/api/rimbu/core/EdgeGraphSorted/Context/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"EdgeGraphSorted.Context<UN>"))),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"The EdgeGraphSorted's Context instance that serves as a factory for all related immutable instances and builders.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("a",m({parentName:"td"},{href:"/api/rimbu/core/EdgeGraphSorted/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"EdgeGraphSorted.NonEmpty<N>"))),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"A non-empty type-invariant immutable valued edge (undirected) graph. The connections are internally maintained using sorted collections See the ",(0,a.kt)("a",m({parentName:"td"},{href:"https://rimbu.org/docs/collections/graph"}),"Graph documentation")," and the ",(0,a.kt)("a",m({parentName:"td"},{href:"https://rimbu.org/api/rimbu/graph/EdgeGraphSorted/interface"}),"EdgeGraphSorted API documentation"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("a",m({parentName:"td"},{href:"/api/rimbu/core/EdgeGraphSorted/Types/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"EdgeGraphSorted.Types"))),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))))}N.isMDXComponent=!0}}]);