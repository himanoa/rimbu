"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[46765],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return k}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),m=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=m(n),k=r,s=c["".concat(o,".").concat(k)]||c[k]||d[k]||l;return n?a.createElement(s,i(i({ref:t},u),{},{components:n})):a.createElement(s,i({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},78600:function(e,t,n){n.r(t),n.d(t,{assets:function(){return N},contentTitle:function(){return k},default:function(){return h},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return y}});var a=n(3905),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))o.call(t,n)&&u(e,n,t[n]);if(p)for(var n of p(t))m.call(t,n)&&u(e,n,t[n]);return e};const c={title:"AsyncReducer (namespace)",slug:"/rimbu/common/AsyncReducer/namespace"},k="namespace AsyncReducer",s={unversionedId:"rimbu_common/AsyncReducer/index",id:"rimbu_common/AsyncReducer/index",title:"AsyncReducer (namespace)",description:"An AsyncReducer is a stand-alone asynchronous calculation that takes input values of type I, and, when requested, produces an output value of type O.",source:"@site/api/rimbu_common/AsyncReducer/index.mdx",sourceDirName:"rimbu_common/AsyncReducer",slug:"/rimbu/common/AsyncReducer/namespace",permalink:"/api/rimbu/common/AsyncReducer/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"AsyncReducer (namespace)",slug:"/rimbu/common/AsyncReducer/namespace"},sidebar:"defaultSidebar",previous:{title:"AsyncOptLazy",permalink:"/api/rimbu/common/AsyncOptLazy/type"},next:{title:"Base<I,O,S>",permalink:"/api/rimbu/common/AsyncReducer/Base/class"}},N={},y=[{value:"Interfaces",id:"interfaces",level:2},{value:"Classes",id:"classes",level:2},{value:"Functions",id:"functions",level:2},{value:"<code>create</code>",id:"create",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:3},{value:"Parameters",id:"parameters",level:4},{value:"<code>createMono</code>",id:"createmono",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>createOutput</code>",id:"createoutput",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-2",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"<code>from</code>",id:"from",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Type parameters",id:"type-parameters-3",level:3},{value:"Parameters",id:"parameters-3",level:4}],b={toc:y};function h(e){var t,n=e,{components:r}=n,u=((e,t)=>{var n={};for(var a in e)o.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&p)for(var a of p(e))t.indexOf(a)<0&&m.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=d(d({},b),u),l(t,i({components:r,mdxType:"MDXLayout"}))),(0,a.kt)("h1",d({},{id:"namespace-asyncreducer"}),(0,a.kt)("inlineCode",{parentName:"h1"},"namespace AsyncReducer")),(0,a.kt)("p",null,"An ",(0,a.kt)("inlineCode",{parentName:"p"},"AsyncReducer")," is a stand-alone asynchronous calculation that takes input values of type I, and, when requested, produces an output value of type O."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Companion type:")," ",(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/AsyncReducer/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"AsyncReducer<I,O>"))),(0,a.kt)("h2",d({},{id:"interfaces"}),"Interfaces"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/AsyncReducer/Impl/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Impl<I,O,S>"))),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"undocumented")))),(0,a.kt)("h2",d({},{id:"classes"}),"Classes"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/AsyncReducer/Base/class"}),(0,a.kt)("inlineCode",{parentName:"a"},"Base"))),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"A base class that can be used to easily create ",(0,a.kt)("inlineCode",{parentName:"td"},"AsyncReducer")," instances.")))),(0,a.kt)("h2",d({},{id:"functions"}),"Functions"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",d({},{id:"create"}),(0,a.kt)("inlineCode",{parentName:"h3"},"create")),(0,a.kt)("p",null,"Returns an ",(0,a.kt)("inlineCode",{parentName:"p"},"AsyncReducer")," with the given options:")),(0,a.kt)("h4",d({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"function create<I, O = I, S = O>(init: "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/AsyncOptLazy/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"AsyncOptLazy")),(0,a.kt)("inlineCode",{parentName:"p"},"<S>, next: (current: S, next: I, index: number, halt: () => void) => "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"p"},"<S>, stateToResult: (state: S) => "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"p"},"<O>, onClose?: (state: S, error?: unknown) => "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"p"},"<void>): "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/AsyncReducer/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,a.kt)("inlineCode",{parentName:"p"},"<I, O>;"))),(0,a.kt)("h3",d({},{id:"type-parameters"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"I"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"the input value type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"O"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"the output value type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"S"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"the internal state type")))),(0,a.kt)("h4",d({},{id:"parameters"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"init")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/AsyncOptLazy/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"AsyncOptLazy")),(0,a.kt)("inlineCode",{parentName:"td"},"<S>")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"the optionally lazy and/or promised initial state value")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"next")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(current: S, next: I, index: number, halt: () => void) => "),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"td"},"<S>")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"returns (potentially asynchronously) the next state value based on the given inputs:",(0,a.kt)("br",null)," - current: the current state",(0,a.kt)("br",null)," - next: the current input value",(0,a.kt)("br",null)," - index: the input index value",(0,a.kt)("br",null)," - halt: function that, when called, ensures no more elements are passed to the reducer")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"stateToResult")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(state: S) => "),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"td"},"<O>")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"a potentially asynchronous function that converts the current state to an output value")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"onClose")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(state: S, error?: unknown) => "),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"td"},"<void>")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"(optional) a function that will be called when the reducer will no longer receive values"))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",d({},{id:"createmono"}),(0,a.kt)("inlineCode",{parentName:"h3"},"createMono")),(0,a.kt)("p",null,"Returns an ",(0,a.kt)("inlineCode",{parentName:"p"},"AsyncReducer")," of which the input, state, and output types are the same.")),(0,a.kt)("h4",d({},{id:"definition-1"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"function createMono<T>(init: "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/AsyncOptLazy/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"AsyncOptLazy")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>, next: (current: T, next: T, index: number, halt: () => void) => "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>, stateToResult?: (state: T) => "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>, onClose?: (state: T, error?: unknown) => "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"p"},"<void>): "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/AsyncReducer/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,a.kt)("h3",d({},{id:"type-parameters-1"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"T"),(0,a.kt)("td",d({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",d({},{id:"parameters-1"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"init")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/AsyncOptLazy/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"AsyncOptLazy")),(0,a.kt)("inlineCode",{parentName:"td"},"<T>")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"the optionally lazy and/or promised initial state value")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"next")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(current: T, next: T, index: number, halt: () => void) => "),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"td"},"<T>")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"returns (potentially asynchronously) the next state value based on the given inputs:",(0,a.kt)("br",null)," - current: the current state",(0,a.kt)("br",null)," - next: the current input value",(0,a.kt)("br",null)," - index: the input index value",(0,a.kt)("br",null)," - halt: function that, when called, ensures no more elements are passed to the reducer")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"stateToResult")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(state: T) => "),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"td"},"<T>")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"a potentially asynchronous function that converts the current state to an output value")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"onClose")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(state: T, error?: unknown) => "),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"td"},"<void>")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"(optional) a function that will be called when the reducer will no longer receive values"))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",d({},{id:"createoutput"}),(0,a.kt)("inlineCode",{parentName:"h3"},"createOutput")),(0,a.kt)("p",null,"Returns an ",(0,a.kt)("inlineCode",{parentName:"p"},"AsyncReducer")," of which the state and output types are the same.")),(0,a.kt)("h4",d({},{id:"definition-2"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"function createOutput<I, O = I>(init: "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/AsyncOptLazy/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"AsyncOptLazy")),(0,a.kt)("inlineCode",{parentName:"p"},"<O>, next: (current: O, next: I, index: number, halt: () => void) => "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"p"},"<O>, stateToResult?: (state: O) => "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"p"},"<O>, onClose?: (state: O, error?: unknown) => "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"p"},"<void>): "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/AsyncReducer/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,a.kt)("inlineCode",{parentName:"p"},"<I, O>;"))),(0,a.kt)("h3",d({},{id:"type-parameters-2"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"I"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"the input value type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"O"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"the output value type")))),(0,a.kt)("h4",d({},{id:"parameters-2"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"init")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/AsyncOptLazy/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"AsyncOptLazy")),(0,a.kt)("inlineCode",{parentName:"td"},"<O>")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"the optionally lazy and/or promised initial state value")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"next")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(current: O, next: I, index: number, halt: () => void) => "),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"td"},"<O>")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"returns (potentially asynchronously) the next state value based on the given inputs:",(0,a.kt)("br",null)," - current: the current state",(0,a.kt)("br",null)," - next: the current input value",(0,a.kt)("br",null)," - index: the input index value",(0,a.kt)("br",null)," - halt: function that, when called, ensures no more elements are passed to the reducer")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"stateToResult")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(state: O) => "),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"td"},"<O>")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"a potentially asynchronous function that converts the current state to an output value")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"onClose")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"(state: O, error?: unknown) => "),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/MaybePromise/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"MaybePromise")),(0,a.kt)("inlineCode",{parentName:"td"},"<void>")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"(optional) a function that will be called when the reducer will no longer receive values"))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",d({},{id:"from"}),(0,a.kt)("inlineCode",{parentName:"h3"},"from")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",d({},{id:"definition-3"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"function from<I, O>(reducer: "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/Reducer/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"Reducer")),(0,a.kt)("inlineCode",{parentName:"p"},"<I, O>): "),(0,a.kt)("a",d({parentName:"p"},{href:"/api/rimbu/common/AsyncReducer/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"AsyncReducer")),(0,a.kt)("inlineCode",{parentName:"p"},"<I, O>;"))),(0,a.kt)("h3",d({},{id:"type-parameters-3"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"I"),(0,a.kt)("td",d({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"O"),(0,a.kt)("td",d({parentName:"tr"},{align:null}))))),(0,a.kt)("h4",d({},{id:"parameters-3"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"reducer")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("a",d({parentName:"td"},{href:"/api/rimbu/common/Reducer/type"}),(0,a.kt)("inlineCode",{parentName:"a"},"Reducer")),(0,a.kt)("inlineCode",{parentName:"td"},"<I, O>")),(0,a.kt)("td",d({parentName:"tr"},{align:null})))))))}h.isMDXComponent=!0}}]);