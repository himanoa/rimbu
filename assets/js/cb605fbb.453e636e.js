"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[98826],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),s=u(n),m=i,d=s["".concat(c,".").concat(m)]||s[m]||f[m]||o;return n?r.createElement(d,p(p({ref:t},l),{},{components:n})):r.createElement(d,p({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,p=new Array(o);p[0]=s;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,p[1]=a;for(var u=2;u<o;u++)p[u]=n[u];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},74265:function(e,t,n){n.r(t),n.d(t,{assets:function(){return y},contentTitle:function(){return m},default:function(){return h},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return b}});var r=n(3905),i=Object.defineProperty,o=Object.defineProperties,p=Object.getOwnPropertyDescriptors,a=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,l=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,f=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&l(e,n,t[n]);if(a)for(var n of a(t))u.call(t,n)&&l(e,n,t[n]);return e};const s={title:"Options",slug:"/rimbu/deep/Match/Options/type"},m="type Options<T,R>",d={unversionedId:"rimbu_deep/Match/Options.type",id:"rimbu_deep/Match/Options.type",title:"Options",description:"The types of supported match input.",source:"@site/api/rimbu_deep/Match/Options.type.mdx",sourceDirName:"rimbu_deep/Match",slug:"/rimbu/deep/Match/Options/type",permalink:"/api/rimbu/deep/Match/Options/type",draft:!1,tags:[],version:"current",frontMatter:{title:"Options",slug:"/rimbu/deep/Match/Options/type"},sidebar:"defaultSidebar",previous:{title:"ObjItem",permalink:"/api/rimbu/deep/Match/ObjItem/type"},next:{title:"Match",permalink:"/api/rimbu/deep/Match/type"}},y={},b=[{value:"Definition",id:"definition",level:2}],O={toc:b};function h(e){var t,n=e,{components:i}=n,l=((e,t)=>{var n={};for(var r in e)c.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&a)for(var r of a(e))t.indexOf(r)<0&&u.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=f(f({},O),l),o(t,p({components:i,mdxType:"MDXLayout"}))),(0,r.kt)("h1",f({},{id:"type-optionstr"}),(0,r.kt)("inlineCode",{parentName:"h1"},"type Options<T,R>")),(0,r.kt)("p",null,"The types of supported match input."),(0,r.kt)("h2",f({},{id:"definition"}),"Definition"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"type Options<T, R> = Every<T, R> "),(0,r.kt)("code",null,"|"),(0,r.kt)("inlineCode",{parentName:"p"},"Some<T, R>"),(0,r.kt)("code",null,"|"),(0,r.kt)("inlineCode",{parentName:"p"},"None<T, R>"),(0,r.kt)("code",null,"|"),(0,r.kt)("inlineCode",{parentName:"p"},"Single<T, R>"),(0,r.kt)("code",null,"|"),(0,r.kt)("inlineCode",{parentName:"p"}," "),(0,r.kt)("a",f({parentName:"p"},{href:"/api/rimbu/deep/Match/Obj/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"Match.Obj")),(0,r.kt)("inlineCode",{parentName:"p"},"<T, R>;")))}h.isMDXComponent=!0}}]);