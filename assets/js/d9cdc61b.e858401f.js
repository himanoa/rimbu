"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[71200],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>N});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),d=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},o=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,o=m(e,["components","mdxType","originalType","parentName"]),k=d(a),s=r,N=k["".concat(p,".").concat(s)]||k[s]||u[s]||i;return a?n.createElement(N,l(l({ref:t},o),{},{components:a})):n.createElement(N,l({ref:t},o))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=s;var m={};for(var p in t)hasOwnProperty.call(t,p)&&(m[p]=t[p]);m.originalType=e,m[k]="string"==typeof e?e:r,l[1]=m;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},4844:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>f,contentTitle:()=>h,default:()=>y,frontMatter:()=>N,metadata:()=>c,toc:()=>v});var n=a(3905),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,o=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,k=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&o(e,a,t[a]);if(m)for(var a of m(t))d.call(t,a)&&o(e,a,t[a]);return e},u=(e,t)=>i(e,l(t)),s=(e,t)=>{var a={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&m)for(var n of m(e))t.indexOf(n)<0&&d.call(e,n)&&(a[n]=e[n]);return a};const N={title:"FromStream<T>",slug:"/rimbu/stream/custom/FromStream/class"},h="class FromStream<T>",c={unversionedId:"rimbu_stream/custom/FromStream.class",id:"rimbu_stream/custom/FromStream.class",title:"FromStream<T>",description:"undocumented",source:"@site/api/rimbu_stream/custom/FromStream.class.mdx",sourceDirName:"rimbu_stream/custom",slug:"/rimbu/stream/custom/FromStream/class",permalink:"/api/rimbu/stream/custom/FromStream/class",draft:!1,tags:[],version:"current",frontMatter:{title:"FromStream<T>",slug:"/rimbu/stream/custom/FromStream/class"},sidebar:"defaultSidebar",previous:{title:"FromIterable<T>",permalink:"/api/rimbu/stream/custom/FromIterable/class"},next:{title:"IndexedIterator<T>",permalink:"/api/rimbu/stream/custom/IndexedIterator/class"}},f={},v=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>[Symbol.iterator]</code>",id:"symboliterator",level:3},{value:"Definition",id:"definition",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>[Symbol.iterator]</code>",id:"symboliterator-1",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Overrides",id:"overrides",level:4},{value:"<code>append</code>",id:"append",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"<code>asNormal</code>",id:"asnormal",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"<code>assumeNonEmpty</code>",id:"assumenonempty",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"<code>collect</code>",id:"collect",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"<code>concat</code>",id:"concat",level:3},{value:"Definition",id:"definition-6",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"<code>contains</code>",id:"contains",level:3},{value:"Definition",id:"definition-7",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"<code>containsSlice</code>",id:"containsslice",level:3},{value:"Definition",id:"definition-8",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"<code>count</code>",id:"count",level:3},{value:"Definition",id:"definition-9",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"<code>countElement</code>",id:"countelement",level:3},{value:"Definition",id:"definition-10",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Overrides",id:"overrides-9",level:4},{value:"<code>countNotElement</code>",id:"countnotelement",level:3},{value:"Definition",id:"definition-11",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Overrides",id:"overrides-10",level:4},{value:"<code>distinctPrevious</code>",id:"distinctprevious",level:3},{value:"Definition",id:"definition-12",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Overrides",id:"overrides-11",level:4},{value:"<code>drop</code>",id:"drop",level:3},{value:"Definition",id:"definition-13",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Overrides",id:"overrides-12",level:4},{value:"<code>dropWhile</code>",id:"dropwhile",level:3},{value:"Definition",id:"definition-14",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Overrides",id:"overrides-13",level:4},{value:"<code>elementAt</code>",id:"elementat",level:3},{value:"Definition",id:"definition-15",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Overrides",id:"overrides-14",level:4},{value:"<code>equals</code>",id:"equals",level:3},{value:"Definition",id:"definition-16",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Overrides",id:"overrides-15",level:4},{value:"<code>every</code>",id:"every",level:3},{value:"Definition",id:"definition-17",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Overrides",id:"overrides-16",level:4},{value:"<code>filter</code>",id:"filter",level:3},{value:"Definition",id:"definition-18",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Overrides",id:"overrides-17",level:4},{value:"<code>filterNot</code>",id:"filternot",level:3},{value:"Definition",id:"definition-19",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Overrides",id:"overrides-18",level:4},{value:"<code>filterNotPure</code>",id:"filternotpure",level:3},{value:"Definition",id:"definition-20",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-15",level:4},{value:"Overrides",id:"overrides-19",level:4},{value:"<code>filterPure</code>",id:"filterpure",level:3},{value:"Definition",id:"definition-21",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-16",level:4},{value:"Overrides",id:"overrides-20",level:4},{value:"<code>find</code>",id:"find",level:3},{value:"Definition",id:"definition-22",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-17",level:4},{value:"Overrides",id:"overrides-21",level:4},{value:"<code>first</code>",id:"first",level:3},{value:"Definition",id:"definition-23",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-18",level:4},{value:"Overrides",id:"overrides-22",level:4},{value:"<code>flatMap</code>",id:"flatmap",level:3},{value:"Definition",id:"definition-24",level:4},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Parameters",id:"parameters-19",level:4},{value:"Overrides",id:"overrides-23",level:4},{value:"<code>flatZip</code>",id:"flatzip",level:3},{value:"Definition",id:"definition-25",level:4},{value:"Type parameters",id:"type-parameters-8",level:4},{value:"Parameters",id:"parameters-20",level:4},{value:"Overrides",id:"overrides-24",level:4},{value:"<code>fold</code>",id:"fold",level:3},{value:"Definition",id:"definition-26",level:4},{value:"Type parameters",id:"type-parameters-9",level:4},{value:"Parameters",id:"parameters-21",level:4},{value:"Overrides",id:"overrides-25",level:4},{value:"<code>foldStream</code>",id:"foldstream",level:3},{value:"Definition",id:"definition-27",level:4},{value:"Type parameters",id:"type-parameters-10",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Overrides",id:"overrides-26",level:4},{value:"<code>forEach</code>",id:"foreach",level:3},{value:"Definition",id:"definition-28",level:4},{value:"Parameters",id:"parameters-23",level:4},{value:"Overrides",id:"overrides-27",level:4},{value:"<code>forEachPure</code>",id:"foreachpure",level:3},{value:"Definition",id:"definition-29",level:4},{value:"Type parameters",id:"type-parameters-11",level:4},{value:"Parameters",id:"parameters-24",level:4},{value:"Overrides",id:"overrides-28",level:4},{value:"<code>indexed</code>",id:"indexed",level:3},{value:"Definition",id:"definition-30",level:4},{value:"Parameters",id:"parameters-25",level:4},{value:"Overrides",id:"overrides-29",level:4},{value:"<code>indexOf</code>",id:"indexof",level:3},{value:"Definition",id:"definition-31",level:4},{value:"Parameters",id:"parameters-26",level:4},{value:"Overrides",id:"overrides-30",level:4},{value:"<code>indexWhere</code>",id:"indexwhere",level:3},{value:"Definition",id:"definition-32",level:4},{value:"Parameters",id:"parameters-27",level:4},{value:"Overrides",id:"overrides-31",level:4},{value:"<code>indicesOf</code>",id:"indicesof",level:3},{value:"Definition",id:"definition-33",level:4},{value:"Parameters",id:"parameters-28",level:4},{value:"Overrides",id:"overrides-32",level:4},{value:"<code>indicesWhere</code>",id:"indiceswhere",level:3},{value:"Definition",id:"definition-34",level:4},{value:"Parameters",id:"parameters-29",level:4},{value:"Overrides",id:"overrides-33",level:4},{value:"<code>intersperse</code>",id:"intersperse",level:3},{value:"Definition",id:"definition-35",level:4},{value:"Parameters",id:"parameters-30",level:4},{value:"Overrides",id:"overrides-34",level:4},{value:"<code>join</code>",id:"join",level:3},{value:"Definition",id:"definition-36",level:4},{value:"Parameters",id:"parameters-31",level:4},{value:"Overrides",id:"overrides-35",level:4},{value:"<code>last</code>",id:"last",level:3},{value:"Definition",id:"definition-37",level:4},{value:"Type parameters",id:"type-parameters-12",level:4},{value:"Parameters",id:"parameters-32",level:4},{value:"Overrides",id:"overrides-36",level:4},{value:"<code>map</code>",id:"map",level:3},{value:"Definition",id:"definition-38",level:4},{value:"Type parameters",id:"type-parameters-13",level:4},{value:"Parameters",id:"parameters-33",level:4},{value:"Overrides",id:"overrides-37",level:4},{value:"<code>mapPure</code>",id:"mappure",level:3},{value:"Definition",id:"definition-39",level:4},{value:"Type parameters",id:"type-parameters-14",level:4},{value:"Parameters",id:"parameters-34",level:4},{value:"Overrides",id:"overrides-38",level:4},{value:"<code>max</code>",id:"max",level:3},{value:"Definition",id:"definition-40",level:4},{value:"Type parameters",id:"type-parameters-15",level:4},{value:"Parameters",id:"parameters-35",level:4},{value:"Overrides",id:"overrides-39",level:4},{value:"<code>maxBy</code>",id:"maxby",level:3},{value:"Definition",id:"definition-41",level:4},{value:"Type parameters",id:"type-parameters-16",level:4},{value:"Parameters",id:"parameters-36",level:4},{value:"Overrides",id:"overrides-40",level:4},{value:"<code>min</code>",id:"min",level:3},{value:"Definition",id:"definition-42",level:4},{value:"Type parameters",id:"type-parameters-17",level:4},{value:"Parameters",id:"parameters-37",level:4},{value:"Overrides",id:"overrides-41",level:4},{value:"<code>minBy</code>",id:"minby",level:3},{value:"Definition",id:"definition-43",level:4},{value:"Type parameters",id:"type-parameters-18",level:4},{value:"Parameters",id:"parameters-38",level:4},{value:"Overrides",id:"overrides-42",level:4},{value:"<code>mkGroup</code>",id:"mkgroup",level:3},{value:"Definition",id:"definition-44",level:4},{value:"Parameters",id:"parameters-39",level:4},{value:"Overrides",id:"overrides-43",level:4},{value:"<code>prepend</code>",id:"prepend",level:3},{value:"Definition",id:"definition-45",level:4},{value:"Parameters",id:"parameters-40",level:4},{value:"Overrides",id:"overrides-44",level:4},{value:"<code>reduce</code>",id:"reduce",level:3},{value:"Definition",id:"definition-46",level:4},{value:"Type parameters",id:"type-parameters-19",level:4},{value:"Parameters",id:"parameters-41",level:4},{value:"Overrides",id:"overrides-45",level:4},{value:"<code>reduceAll</code>",id:"reduceall",level:3},{value:"Definition",id:"definition-47",level:4},{value:"Parameters",id:"parameters-42",level:4},{value:"Overrides",id:"overrides-46",level:4},{value:"<code>reduceAllStream</code>",id:"reduceallstream",level:3},{value:"Definition",id:"definition-48",level:4},{value:"Parameters",id:"parameters-43",level:4},{value:"Overrides",id:"overrides-47",level:4},{value:"<code>reduceStream</code>",id:"reducestream",level:3},{value:"Definition",id:"definition-49",level:4},{value:"Type parameters",id:"type-parameters-20",level:4},{value:"Parameters",id:"parameters-44",level:4},{value:"Overrides",id:"overrides-48",level:4},{value:"<code>repeat</code>",id:"repeat",level:3},{value:"Definition",id:"definition-50",level:4},{value:"Parameters",id:"parameters-45",level:4},{value:"Overrides",id:"overrides-49",level:4},{value:"<code>single</code>",id:"single",level:3},{value:"Definition",id:"definition-51",level:4},{value:"Type parameters",id:"type-parameters-21",level:4},{value:"Parameters",id:"parameters-46",level:4},{value:"Overrides",id:"overrides-50",level:4},{value:"<code>some</code>",id:"some",level:3},{value:"Definition",id:"definition-52",level:4},{value:"Parameters",id:"parameters-47",level:4},{value:"Overrides",id:"overrides-51",level:4},{value:"<code>splitOn</code>",id:"spliton",level:3},{value:"Definition",id:"definition-53",level:4},{value:"Parameters",id:"parameters-48",level:4},{value:"Overrides",id:"overrides-52",level:4},{value:"<code>splitWhere</code>",id:"splitwhere",level:3},{value:"Definition",id:"definition-54",level:4},{value:"Parameters",id:"parameters-49",level:4},{value:"Overrides",id:"overrides-53",level:4},{value:"<code>stream</code>",id:"stream",level:3},{value:"Definition",id:"definition-55",level:4},{value:"Overrides",id:"overrides-54",level:4},{value:"<code>take</code>",id:"take",level:3},{value:"Definition",id:"definition-56",level:4},{value:"Parameters",id:"parameters-50",level:4},{value:"Overrides",id:"overrides-55",level:4},{value:"<code>takeWhile</code>",id:"takewhile",level:3},{value:"Definition",id:"definition-57",level:4},{value:"Parameters",id:"parameters-51",level:4},{value:"Overrides",id:"overrides-56",level:4},{value:"<code>toArray</code>",id:"toarray",level:3},{value:"Definition",id:"definition-58",level:4},{value:"Overrides",id:"overrides-57",level:4},{value:"<code>toJSON</code>",id:"tojson",level:3},{value:"Definition",id:"definition-59",level:4},{value:"Overrides",id:"overrides-58",level:4},{value:"<code>toString</code>",id:"tostring",level:3},{value:"Definition",id:"definition-60",level:4},{value:"Overrides",id:"overrides-59",level:4},{value:"<code>transform</code>",id:"transform",level:3},{value:"Definition",id:"definition-61",level:4},{value:"Type parameters",id:"type-parameters-22",level:4},{value:"Parameters",id:"parameters-52",level:4},{value:"Overrides",id:"overrides-60",level:4},{value:"<code>window</code>",id:"window",level:3},{value:"Definition",id:"definition-62",level:4},{value:"Type parameters",id:"type-parameters-23",level:4},{value:"Parameters",id:"parameters-53",level:4},{value:"Overrides",id:"overrides-61",level:4}],g={toc:v},b="wrapper";function y(e){var t=e,{components:a}=t,r=s(t,["components"]);return(0,n.kt)(b,u(k(k({},g),r),{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",k({},{id:"class-fromstreamt"}),(0,n.kt)("inlineCode",{parentName:"h1"},"class FromStream<T>")),(0,n.kt)("p",null,"undocumented"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Extends:")," ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamBase<T>"))),(0,n.kt)("h2",k({},{id:"type-parameters"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"T"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"undocumented")))),(0,n.kt)("h2",k({},{id:"properties"}),"Properties"),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"symboliterator"}),(0,n.kt)("inlineCode",{parentName:"h3"},"[Symbol.iterator]")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",k({},{id:"definition"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"[Symbol.iterator]: () => "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/FastIterator/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"FastIterator")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;")))),(0,n.kt)("h2",k({},{id:"methods"}),"Methods"),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"symboliterator-1"}),(0,n.kt)("inlineCode",{parentName:"h3"},"[Symbol.iterator]")),(0,n.kt)("p",null,"Returns a ",(0,n.kt)("inlineCode",{parentName:"p"},"FastIterator")," instance used to iterate over the values of this ",(0,n.kt)("inlineCode",{parentName:"p"},"Iterable"),".")),(0,n.kt)("h4",k({},{id:"definition-1"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"abstract [Symbol.iterator](): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/FastIterator/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"FastIterator")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"overrides"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/FastIterable/interface#%5BSymbol.iterator%5D"}),"FastIterable.[Symbol.iterator]"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#%5BSymbol.iterator%5D"}),"StreamBase.[Symbol.iterator]"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"append"}),(0,n.kt)("inlineCode",{parentName:"h3"},"append")),(0,n.kt)("p",null,"Returns the current stream succeeded by the given ",(0,n.kt)("inlineCode",{parentName:"p"},"value"))),(0,n.kt)("h4",k({},{id:"definition-2"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"append(value: OptLazy<T>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"parameters"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).append(4).toArray()\n// => [1, 2, 3, 4]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",k({},{id:"overrides-1"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#append"}),"Stream.append"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#append"}),"StreamBase.append"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"asnormal"}),(0,n.kt)("inlineCode",{parentName:"h3"},"asNormal")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",k({},{id:"definition-3"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"asNormal(): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"overrides-2"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#asNormal"}),"StreamBase.asNormal"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"assumenonempty"}),(0,n.kt)("inlineCode",{parentName:"h3"},"assumeNonEmpty")),(0,n.kt)("p",null,"Returns the stream as a non-empty instance.")),(0,n.kt)("h4",k({},{id:"definition-4"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"assumeNonEmpty(): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("admonition",k({},{title:"throws",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"RimbuError.EmptyCollectionAssumedNonEmptyError if the stream is known to be empty.")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.range({ amount: 100 }).assumeNonEmpty()\n// => type: Stream.NonEmpty<number>\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"the function does not actually check if the stream is empty, so treat with extra care  @note O(1)")),(0,n.kt)("h4",k({},{id:"overrides-3"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#assumeNonEmpty"}),"Stream.assumeNonEmpty"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#assumeNonEmpty"}),"StreamBase.assumeNonEmpty"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"collect"}),(0,n.kt)("inlineCode",{parentName:"h3"},"collect")),(0,n.kt)("p",null,"Returns a Stream containing the resulting elements from applying the given ",(0,n.kt)("inlineCode",{parentName:"p"},"collectFun")," to each element in this Stream.")),(0,n.kt)("h4",k({},{id:"definition-5"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"collect<R>(collectFun: CollectFun<T, R>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-1"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-1"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"collectFun")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"CollectFun<T, R>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).collect((v, i, skip, halt) => {\nif (i === 0) return skip;\nif (i === 1) halt();\nreturn String(v)\n}).toArray();\n// => ['1']\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",k({},{id:"overrides-4"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#collect"}),"Stream.collect"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#collect"}),"StreamBase.collect"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"concat"}),(0,n.kt)("inlineCode",{parentName:"h3"},"concat")),(0,n.kt)("p",null,"Returns a Stream containing the elements of this Stream followed by all elements produced by the ",(0,n.kt)("inlineCode",{parentName:"p"},"others")," array of StreamSources.")),(0,n.kt)("h4",k({},{id:"definition-6"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"concat(...others: ArrayNonEmpty<"),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"parameters-2"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"others")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"ArrayNonEmpty<"),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).concat([4, 5], [6, 7]).toArray()\n// [1, 2, 3, 4, 5, 6, 7]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",k({},{id:"overrides-5"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#concat"}),"Stream.concat"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#concat"}),"StreamBase.concat"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"contains"}),(0,n.kt)("inlineCode",{parentName:"h3"},"contains")),(0,n.kt)("p",null,"Returns true if the Stream contains given ",(0,n.kt)("inlineCode",{parentName:"p"},"amount")," instances of given ",(0,n.kt)("inlineCode",{parentName:"p"},"value"),", using given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," function.")),(0,n.kt)("h4",k({},{id:"definition-7"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"contains(searchValue: T, amount?: number, eq?: Eq<T>): boolean;"))),(0,n.kt)("h4",k({},{id:"parameters-3"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"searchValue")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"amount")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"eq")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Eq<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.from('marmot').contains('m')    // => true\nStream.from('marmot').contains('m', 2) // => true\nStream.from('marmot').contains('m', 3) // => false\nStream.from('marmot').contains('q')    // => false\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-6"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#contains"}),"Stream.contains"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#contains"}),"StreamBase.contains"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"containsslice"}),(0,n.kt)("inlineCode",{parentName:"h3"},"containsSlice")),(0,n.kt)("p",null,"Returns true if this stream contains the same sequence of elements as the given ",(0,n.kt)("inlineCode",{parentName:"p"},"source"),", false otherwise.")),(0,n.kt)("h4",k({},{id:"definition-8"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"containsSlice(source: "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>, eq?: Eq<any>): boolean;"))),(0,n.kt)("h4",k({},{id:"parameters-4"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"source")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/NonEmpty/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"eq")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Eq<any>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3, 4, 5).containsSlice([2, 3, 4])\n// => true\nStream.of(1, 2, 3, 4, 5).containsSlice([4, 3, 2])\n// => false\n"))),(0,n.kt)("h4",k({},{id:"overrides-7"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#containsSlice"}),"Stream.containsSlice"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#containsSlice"}),"StreamBase.containsSlice"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"count"}),(0,n.kt)("inlineCode",{parentName:"h3"},"count")),(0,n.kt)("p",null,"Returns the amount of elements in the Stream.")),(0,n.kt)("h4",k({},{id:"definition-9"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"count(): number;"))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).count() // => 3\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N) for most types of Stream  @note be careful not to use on infinite streams")),(0,n.kt)("h4",k({},{id:"overrides-8"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#count"}),"Stream.count"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#count"}),"StreamBase.count"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"countelement"}),(0,n.kt)("inlineCode",{parentName:"h3"},"countElement")),(0,n.kt)("p",null,"Returns the amount of elements that are equal according to the given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," to the given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," in the Stream.")),(0,n.kt)("h4",k({},{id:"definition-10"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"countElement(value: T, eq?: Eq<T>): number;"))),(0,n.kt)("h4",k({},{id:"parameters-5"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"eq")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Eq<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).countElement(2) // => 1\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N) for most types of Stream  @note be careful not to use on infinite streams")),(0,n.kt)("h4",k({},{id:"overrides-9"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#countElement"}),"Stream.countElement"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#countElement"}),"StreamBase.countElement"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"countnotelement"}),(0,n.kt)("inlineCode",{parentName:"h3"},"countNotElement")),(0,n.kt)("p",null,"Returns the amount of elements that are not equal according to the given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," to the given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," in the Stream.")),(0,n.kt)("h4",k({},{id:"definition-11"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"countNotElement(value: T, eq?: Eq<T>): number;"))),(0,n.kt)("h4",k({},{id:"parameters-6"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"eq")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Eq<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).countNotElement(2) // => 2\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N) for most types of Stream  @note be careful not to use on infinite streams")),(0,n.kt)("h4",k({},{id:"overrides-10"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#countNotElement"}),"Stream.countNotElement"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#countNotElement"}),"StreamBase.countNotElement"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"distinctprevious"}),(0,n.kt)("inlineCode",{parentName:"h3"},"distinctPrevious")),(0,n.kt)("p",null,"Returns a Stream containing non-repetitive elements of the source stream, where repetitive elements are compared using the optionally given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," equality function.")),(0,n.kt)("h4",k({},{id:"definition-12"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"distinctPrevious(eq?: Eq<T>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"parameters-7"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"eq")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Eq<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 1, 2, 2, 3, 1).distinctPrevious().toArray()\n// => [1, 2, 3, 1]\n"))),(0,n.kt)("h4",k({},{id:"overrides-11"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#distinctPrevious"}),"Stream.distinctPrevious"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#distinctPrevious"}),"StreamBase.distinctPrevious"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"drop"}),(0,n.kt)("inlineCode",{parentName:"h3"},"drop")),(0,n.kt)("p",null,"Returns a stream that skips the first ",(0,n.kt)("inlineCode",{parentName:"p"},"amount")," elements of this Stream and returns the rest.")),(0,n.kt)("h4",k({},{id:"definition-13"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"drop(amount: number): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"parameters-8"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"amount")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).drop(1).toArray()   // => [2, 3]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N) for most types of Stream")),(0,n.kt)("h4",k({},{id:"overrides-12"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#drop"}),"Stream.drop"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#drop"}),"StreamBase.drop"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"dropwhile"}),(0,n.kt)("inlineCode",{parentName:"h3"},"dropWhile")),(0,n.kt)("p",null,"Returns a Stream that contains the elements of this Stream starting from the first element that does not satisfy given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function.")),(0,n.kt)("h4",k({},{id:"definition-14"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"dropWhile(pred: (value: T, index: number) => boolean): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"parameters-9"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => boolean")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).dropWhile(v => v < 2).toArray()\n// => [2, 3]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-13"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#dropWhile"}),"Stream.dropWhile"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#dropWhile"}),"StreamBase.dropWhile"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"elementat"}),(0,n.kt)("inlineCode",{parentName:"h3"},"elementAt")),(0,n.kt)("p",null,"Returns the element in the Stream at the given index, or a fallback value (default undefined) otherwise.")),(0,n.kt)("h4",k({},{id:"definition-15"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"elementAt<O>(index: number, otherwise?: OptLazy<O>): T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O;"))),(0,n.kt)("h4",k({},{id:"type-parameters-2"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-10"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"index")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<O>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).elementAt(1)        // => 2\nStream.of(1, 2, 3).elementAt(5)        // => undefined\nStream.of(1, 2, 3).elementAt(5, 'a')   // => 'a'\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N) for most types of Stream")),(0,n.kt)("h4",k({},{id:"overrides-14"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#elementAt"}),"Stream.elementAt"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#elementAt"}),"StreamBase.elementAt"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"equals"}),(0,n.kt)("inlineCode",{parentName:"h3"},"equals")),(0,n.kt)("p",null,"Returns true if the sequence of elements in this stream are equal to the sequence in the ",(0,n.kt)("inlineCode",{parentName:"p"},"other")," stream according to the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," function.")),(0,n.kt)("h4",k({},{id:"definition-16"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"equals(other: "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>, eq?: Eq<T>): boolean;"))),(0,n.kt)("h4",k({},{id:"parameters-11"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"other")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"eq")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Eq<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).equals([1, 2, 3])     // => true\nStream.of(1, 2, 3, 4).equals([1, 2, 3])  // => false\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"don't use on potentially infinite streams  @note O(N)")),(0,n.kt)("h4",k({},{id:"overrides-15"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#equals"}),"Stream.equals"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#equals"}),"StreamBase.equals"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"every"}),(0,n.kt)("inlineCode",{parentName:"h3"},"every")),(0,n.kt)("p",null,"Returns true if every element of the Stream satifies given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function.")),(0,n.kt)("h4",k({},{id:"definition-17"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"every(pred: (value: T, index: number) => boolean): boolean;"))),(0,n.kt)("h4",k({},{id:"parameters-12"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => boolean")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).every((v, i) => v + i > 10)  // => false\nStream.of(1, 2, 3).every((v, i) => v + i < 10)  // => true\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-16"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#every"}),"Stream.every"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#every"}),"StreamBase.every"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"filter"}),(0,n.kt)("inlineCode",{parentName:"h3"},"filter")),(0,n.kt)("p",null,"Returns a Stream containing only those elements from this Stream for which the given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function returns true.")),(0,n.kt)("h4",k({},{id:"definition-18"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"filter(pred: (value: T, index: number, halt: () => void) => boolean): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"parameters-13"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number, halt: () => void) => boolean")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).filter((v, i) => v + i !== 3).toArray()\n// => [1, 3]\n"))),(0,n.kt)("h4",k({},{id:"overrides-17"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#filter"}),"Stream.filter"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#filter"}),"StreamBase.filter"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"filternot"}),(0,n.kt)("inlineCode",{parentName:"h3"},"filterNot")),(0,n.kt)("p",null,"Returns a Stream containing only those elements from this Stream for which the given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function returns false.")),(0,n.kt)("h4",k({},{id:"definition-19"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"filterNot(pred: (value: T, index: number, halt: () => void) => boolean): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"parameters-14"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number, halt: () => void) => boolean")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).filterNot((v, i) => v + i !== 3).toArray()\n// => [2]\n"))),(0,n.kt)("h4",k({},{id:"overrides-18"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#filterNot"}),"Stream.filterNot"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#filterNot"}),"StreamBase.filterNot"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"filternotpure"}),(0,n.kt)("inlineCode",{parentName:"h3"},"filterNotPure")),(0,n.kt)("p",null,"Returns a Stream containing only those elements from this Stream for which the given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function returns false.")),(0,n.kt)("h4",k({},{id:"definition-20"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"filterNotPure<A extends readonly unknown[]>(pred: (value: T, ...args: A) => boolean, ...args: A): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-3"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"A"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"readonly unknown[]")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-15"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, ...args: A) => boolean")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"args")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"A")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).filterNotPure(Object.is, 2).toArray()\n// => [1, 3]\n"))),(0,n.kt)("h4",k({},{id:"overrides-19"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#filterNotPure"}),"Stream.filterNotPure"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#filterNotPure"}),"StreamBase.filterNotPure"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"filterpure"}),(0,n.kt)("inlineCode",{parentName:"h3"},"filterPure")),(0,n.kt)("p",null,"Returns a Stream containing only those elements from this Stream for which the given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function returns true.")),(0,n.kt)("h4",k({},{id:"definition-21"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"filterPure<A extends readonly unknown[]>(pred: (value: T, ...args: A) => boolean, ...args: A): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-4"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"A"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"readonly unknown[]")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-16"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, ...args: A) => boolean")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"args")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"A")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).filterPure(Object.is, 2).toArray()\n// => [2]\n"))),(0,n.kt)("h4",k({},{id:"overrides-20"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#filterPure"}),"Stream.filterPure"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#filterPure"}),"StreamBase.filterPure"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"find"}),(0,n.kt)("inlineCode",{parentName:"h3"},"find")),(0,n.kt)("p",null,"Returns the first element for which the given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function returns true, or a fallback value otherwise.")),(0,n.kt)("h4",k({},{id:"definition-22"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"find<O>(pred: (value: T, index: number) => boolean, occurrance?: number, otherwise?: OptLazy<O>): T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O;"))),(0,n.kt)("h4",k({},{id:"type-parameters-5"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-17"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => boolean")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"occurrance")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<O>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"const isEven = (v: number) => v % 2 === 0\nStream.of(1, 2, 3, 4).find(isEven)           // => 2\nStream.of(1, 2, 3, 4).find(isEven, 2)        // => 4\nStream.of(1, 2, 3, 4).find(isEven, 3)        // => undefined\nStream.of(1, 2, 3, 4).find(isEven, 3, 'a')   // => 'a'\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N) for most types of Stream")),(0,n.kt)("h4",k({},{id:"overrides-21"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#find"}),"Stream.find"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#find"}),"StreamBase.find"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"first"}),(0,n.kt)("inlineCode",{parentName:"h3"},"first")),(0,n.kt)("p",null,"Returns the first element of the Stream, or a fallback value (default undefined) if the Stream is empty.")),(0,n.kt)("h4",k({},{id:"definition-23"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"first<O>(otherwise?: OptLazy<O>): T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O;"))),(0,n.kt)("h4",k({},{id:"type-parameters-6"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-18"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<O>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).first()      // => 1\nStream.empty<number>().first()  // => undefined\nStream.empty<number>().first(0) // => 0\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",k({},{id:"overrides-22"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#first"}),"Stream.first"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#first"}),"StreamBase.first"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"flatmap"}),(0,n.kt)("inlineCode",{parentName:"h3"},"flatMap")),(0,n.kt)("p",null,"Returns a Stream consisting of the concatenation of ",(0,n.kt)("inlineCode",{parentName:"p"},"flatMapFun")," applied to each element.")),(0,n.kt)("h4",k({},{id:"definition-24"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"flatMap<T2>(flatMapFun: (value: T, index: number, halt: () => void) => "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T2>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T2>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-7"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"T2"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-19"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"flatMapFun")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number, halt: () => void) => "),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T2>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).flatMap((v, i, halt) => {\nif (i >= 1) halt();\nreturn [v, i, v + i]\n}).toArray()\n// => [1, 0, 1, 2, 1, 3]\n"))),(0,n.kt)("h4",k({},{id:"overrides-23"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#flatMap"}),"Stream.flatMap"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#flatMap"}),"StreamBase.flatMap"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"flatzip"}),(0,n.kt)("inlineCode",{parentName:"h3"},"flatZip")),(0,n.kt)("p",null,"Returns a Stream consisting of the concatenation of ",(0,n.kt)("inlineCode",{parentName:"p"},"flatMapFun")," applied to each element, zipped with the element that was provided to the function.")),(0,n.kt)("h4",k({},{id:"definition-25"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"flatZip<T2>(flatMapFun: (value: T, index: number, halt: () => void) => "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T2>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<[T, T2]>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-8"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"T2"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-20"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"flatMapFun")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number, halt: () => void) => "),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T2>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).flatZip((v, i, halt) => {\nif (i >= 1) halt();\nreturn [v, i, v + i]\n}).toArray()\n// => [[1, 1], [1, 0], [1, 1], [2, 2], [2, 1], [2, 3]]\n"))),(0,n.kt)("h4",k({},{id:"overrides-24"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#flatZip"}),"Stream.flatZip"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#flatZip"}),"StreamBase.flatZip"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"fold"}),(0,n.kt)("inlineCode",{parentName:"h3"},"fold")),(0,n.kt)("p",null,"Returns the value resulting from applying the given the given ",(0,n.kt)("inlineCode",{parentName:"p"},"next")," function to a current state (initially the given ",(0,n.kt)("inlineCode",{parentName:"p"},"init")," value), and the next Stream value, and returning the new state. When all elements are processed, the resulting state is returned.")),(0,n.kt)("h4",k({},{id:"definition-26"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"fold<R>(init: OptLazy<R>, next: (current: R, value: T, index: number, halt: () => void) => R): R;"))),(0,n.kt)("h4",k({},{id:"type-parameters-9"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-21"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"init")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<R>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"next")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(current: R, value: T, index: number, halt: () => void) => R")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"console.log(Stream.empty<number>().fold(5, (current, value) => current + value))\n// => 5\nconsole.log(Stream.of(1, 2, 3).fold(5, (current, value) => current + value))\n// => 11  (= 5 + 1 + 2 + 3)\n"))),(0,n.kt)("h4",k({},{id:"overrides-25"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#fold"}),"Stream.fold"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#fold"}),"StreamBase.fold"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"foldstream"}),(0,n.kt)("inlineCode",{parentName:"h3"},"foldStream")),(0,n.kt)("p",null,"Returns a Stream containing the values resulting from applying the given the given ",(0,n.kt)("inlineCode",{parentName:"p"},"next")," function to a current state (initially the given ",(0,n.kt)("inlineCode",{parentName:"p"},"init")," value), and the next Stream value, and returning the new state.")),(0,n.kt)("h4",k({},{id:"definition-27"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"foldStream<R>(init: OptLazy<R>, next: (current: R, value: T, index: number, halt: () => void) => R): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-10"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-22"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"init")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<R>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"next")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(current: R, value: T, index: number, halt: () => void) => R")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"console.log(\nStream.empty<number>()\n.foldStream(5, (current, value) => current + value)\n.toArray()\n)\n// => []\nconsole.log(\nStream.of(1, 2, 3)\n.foldStream(5, (current, value) => current + value)\n.toArray()\n)\n// => [6, 8, 11]\n"))),(0,n.kt)("h4",k({},{id:"overrides-26"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#foldStream"}),"Stream.foldStream"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#foldStream"}),"StreamBase.foldStream"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"foreach"}),(0,n.kt)("inlineCode",{parentName:"h3"},"forEach")),(0,n.kt)("p",null,"Performs given function ",(0,n.kt)("inlineCode",{parentName:"p"},"f")," for each element of the Stream, using given ",(0,n.kt)("inlineCode",{parentName:"p"},"state")," as initial traversal state.")),(0,n.kt)("h4",k({},{id:"definition-28"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"forEach(f: (value: T, index: number, halt: () => void) => void, state?: TraverseState): void;"))),(0,n.kt)("h4",k({},{id:"parameters-23"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"f")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number, halt: () => void) => void")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"state")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"TraverseState")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).forEach((v, i, halt) => {\nconsole.log(v);\nif (i >= 1) halt();\n})\n// => 1, 2\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-27"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#forEach"}),"Stream.forEach"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#forEach"}),"StreamBase.forEach"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"foreachpure"}),(0,n.kt)("inlineCode",{parentName:"h3"},"forEachPure")),(0,n.kt)("p",null,"Performs given function ",(0,n.kt)("inlineCode",{parentName:"p"},"f")," for each element of the Stream, with the optionally given ",(0,n.kt)("inlineCode",{parentName:"p"},"args")," as extra arguments.")),(0,n.kt)("h4",k({},{id:"definition-29"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"forEachPure<A extends readonly unknown[]>(f: (value: T, ...args: A) => void, ...args: A): void;"))),(0,n.kt)("h4",k({},{id:"type-parameters-11"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"A"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"readonly unknown[]")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-24"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"f")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, ...args: A) => void")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"args")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"A")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).forEachPure(console.log, 'sheep')\n// => logs:\n// 1 sheep\n// 2 sheep\n// 3 sheep\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-28"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#forEachPure"}),"Stream.forEachPure"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#forEachPure"}),"StreamBase.forEachPure"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"indexed"}),(0,n.kt)("inlineCode",{parentName:"h3"},"indexed")),(0,n.kt)("p",null,"Returns a Stream where each element in this Stream is paired with its index")),(0,n.kt)("h4",k({},{id:"definition-30"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"indexed(startIndex?: number): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<[number, T]>;"))),(0,n.kt)("h4",k({},{id:"parameters-25"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"startIndex")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).indexed().toArray()\n// => [[0, 1], [1, 2], [2, 3]]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",k({},{id:"overrides-29"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#indexed"}),"Stream.indexed"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#indexed"}),"StreamBase.indexed"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"indexof"}),(0,n.kt)("inlineCode",{parentName:"h3"},"indexOf")),(0,n.kt)("p",null,"Returns the index of the ",(0,n.kt)("inlineCode",{parentName:"p"},"occurrance")," instance of given ",(0,n.kt)("inlineCode",{parentName:"p"},"searchValue")," in the Stream, using given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," function, or undefined if no such value is found.")),(0,n.kt)("h4",k({},{id:"definition-31"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"indexOf(searchValue: T, occurrance?: number, eq?: Eq<T>): number "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"))),(0,n.kt)("h4",k({},{id:"parameters-26"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"searchValue")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"occurrance")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"eq")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Eq<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"const source = Stream.from('marmot')\nsource.indexOf('m')     // => 0\nsource.indexOf('m', 2)  // => 3\nsource.indexOf('m', 3)  // => undefined\nsource.indexOf('q')     // => undefined\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-30"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#indexOf"}),"Stream.indexOf"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#indexOf"}),"StreamBase.indexOf"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"indexwhere"}),(0,n.kt)("inlineCode",{parentName:"h3"},"indexWhere")),(0,n.kt)("p",null,"Returns the index of the given ",(0,n.kt)("inlineCode",{parentName:"p"},"occurrance")," instance of the element in the Stream that satisfies given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function, or undefined if no such instance is found.")),(0,n.kt)("h4",k({},{id:"definition-32"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"indexWhere(pred: (value: T, index: number) => boolean, occurrance?: number): number "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"))),(0,n.kt)("h4",k({},{id:"parameters-27"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => boolean")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"occurrance")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).indexWhere((v, i) => v + i > 2)      // => 1\nStream.of(1, 2, 3).indexWhere((v, i) => v + i > 2, 2)   // => 2\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-31"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#indexWhere"}),"Stream.indexWhere"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#indexWhere"}),"StreamBase.indexWhere"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"indicesof"}),(0,n.kt)("inlineCode",{parentName:"h3"},"indicesOf")),(0,n.kt)("p",null,"Returns a Stream containing the indicies of the occurrance of the given ",(0,n.kt)("inlineCode",{parentName:"p"},"searchValue"),", according to given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," function.")),(0,n.kt)("h4",k({},{id:"definition-33"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"indicesOf(searchValue: T, eq?: Eq<T>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<number>;"))),(0,n.kt)("h4",k({},{id:"parameters-28"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"searchValue")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"eq")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Eq<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.from('marmot').indicesOf('m').toArray()\n// => [0, 3]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-32"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#indicesOf"}),"Stream.indicesOf"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#indicesOf"}),"StreamBase.indicesOf"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"indiceswhere"}),(0,n.kt)("inlineCode",{parentName:"h3"},"indicesWhere")),(0,n.kt)("p",null,"Returns a Stream containing the indices of the elements for which the given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function returns true.")),(0,n.kt)("h4",k({},{id:"definition-34"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"indicesWhere(pred: (value: T) => boolean): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<number>;"))),(0,n.kt)("h4",k({},{id:"parameters-29"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T) => boolean")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).indicesWhere((v, i) => v + i !== 3).toArray()\n// => [0, 2]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-33"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#indicesWhere"}),"Stream.indicesWhere"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#indicesWhere"}),"StreamBase.indicesWhere"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"intersperse"}),(0,n.kt)("inlineCode",{parentName:"h3"},"intersperse")),(0,n.kt)("p",null,"Returns a Stream with all elements from the given ",(0,n.kt)("inlineCode",{parentName:"p"},"sep")," StreamSource between two elements of this Stream.")),(0,n.kt)("h4",k({},{id:"definition-35"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"intersperse(sep: "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"parameters-30"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"sep")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).intersperse(\"ab\").toArray()\n// => [1, 'a', 'b', 2, 'a', 'b', 3]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",k({},{id:"overrides-34"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#intersperse"}),"Stream.intersperse"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#intersperse"}),"StreamBase.intersperse"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"join"}),(0,n.kt)("inlineCode",{parentName:"h3"},"join")),(0,n.kt)("p",null,"Returns a string resulting from converting each element to string with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.valueToString"),", interspersed with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.sep"),", starting with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.start")," and ending with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.end"),".")),(0,n.kt)("h4",k({},{id:"definition-36"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"join({ sep, start, end, valueToString, ifEmpty, }?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"sep?: string "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"start?: string "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"end?: string "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"valueToString?: StringConstructor "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"ifEmpty?: undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): string;"))),(0,n.kt)("h4",k({},{id:"parameters-31"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{ sep, start, end, valueToString, ifEmpty, }")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"sep?: string "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"start?: string "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"end?: string "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"valueToString?: StringConstructor "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"td"}," undefined;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"ifEmpty?: undefined;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).join({ start: '<', sep: ', ', end: '>' })\n// => '<1, 2, 3>'\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-35"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#join"}),"Stream.join"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#join"}),"StreamBase.join"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"last"}),(0,n.kt)("inlineCode",{parentName:"h3"},"last")),(0,n.kt)("p",null,"Returns the last element of the Stream, or a fallback value (default undefined) if the Stream is empty.")),(0,n.kt)("h4",k({},{id:"definition-37"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"last<O>(otherwise?: OptLazy<O>): T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O;"))),(0,n.kt)("h4",k({},{id:"type-parameters-12"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-32"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<O>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).last()      // => 3\nStream.empty<number>().last()  // => undefined\nStream.empty<number>().last(0) // => 0\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N) for most types of Stream")),(0,n.kt)("h4",k({},{id:"overrides-36"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#last"}),"Stream.last"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#last"}),"StreamBase.last"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"map"}),(0,n.kt)("inlineCode",{parentName:"h3"},"map")),(0,n.kt)("p",null,"Returns a Stream where ",(0,n.kt)("inlineCode",{parentName:"p"},"mapFun")," is applied to each element.")),(0,n.kt)("h4",k({},{id:"definition-38"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"map<T2>(mapFun: (value: T, index: number) => T2): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T2>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-13"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"T2"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-33"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"mapFun")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => T2")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).map((v, i) => `[${i}]: ${v}`).toArray()\n// => ['[0]: 1', '[1]: 2', '[2]: 3']\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",k({},{id:"overrides-37"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#map"}),"Stream.map"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#map"}),"StreamBase.map"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"mappure"}),(0,n.kt)("inlineCode",{parentName:"h3"},"mapPure")),(0,n.kt)("p",null,"Returns a Stream where the given ",(0,n.kt)("inlineCode",{parentName:"p"},"mapFun")," is applied to each value in the stream, with optionally as extra arguments the given ",(0,n.kt)("inlineCode",{parentName:"p"},"args"),".")),(0,n.kt)("h4",k({},{id:"definition-39"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"mapPure<T2, A extends readonly unknown[]>(mapFun: (value: T, ...args: A) => T2, ...args: A): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T2>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-14"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"T2"),(0,n.kt)("td",k({parentName:"tr"},{align:null})),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"A"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"readonly unknown[]")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-34"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"mapFun")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, ...args: A) => T2")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"args")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"A")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"is mostly aimed to increase performance so that an extra function is not required  @note can be used on function that really expect 1 argument, since the normal map will also pass more arguments")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),'const s = Stream.of({ a: 1 }, { a: 2, c: { d: true } })\nconst s2 = s.mapPure(JSON.stringify, [\'a\'], 5)\n// when stream is evaluated, will call JSON.stringify on each stream element with the given extra arguments\nconsole.log(s2.toArray())\n// => ["{\\n \\"a\\": 1\\n}", "{\\n \\"a\\": 2\\n}"]\n'))),(0,n.kt)("h4",k({},{id:"overrides-38"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#mapPure"}),"Stream.mapPure"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#mapPure"}),"StreamBase.mapPure"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"max"}),(0,n.kt)("inlineCode",{parentName:"h3"},"max")),(0,n.kt)("p",null,"Returns the maximum element of the Stream according to a default compare function, or the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"otherwise")," fallback value if the Stream is empty.")),(0,n.kt)("h4",k({},{id:"definition-40"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"max<O>(otherwise?: OptLazy<O>): T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O;"))),(0,n.kt)("h4",k({},{id:"type-parameters-15"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-35"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<O>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(5, 1, 3).max()         // => 1\nStream.empty<number>().max()     // => undefined\nStream.empty<number>().max('a')  // => 'a'\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-39"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#max"}),"Stream.max"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#max"}),"StreamBase.max"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"maxby"}),(0,n.kt)("inlineCode",{parentName:"h3"},"maxBy")),(0,n.kt)("p",null,"Returns the maximum element of the Stream according to the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"compare")," function, or the provided `otherwise fallback value if the Stream is empty.")),(0,n.kt)("h4",k({},{id:"definition-41"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"maxBy<O>(compare: (v1: T, v2: T) => number, otherwise?: OptLazy<O>): T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O;"))),(0,n.kt)("h4",k({},{id:"type-parameters-16"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-36"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"compare")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(v1: T, v2: T) => number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<O>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"function compareLength(a: string, b: string): number { return b.length - a.length };\nStream.of('abc', 'a', 'ab').maxBy(compareLength)   // => 'abc'\nStream.empty<string>().maxBy(compareLength)        // => undefined\nStream.empty<string>().maxBy(compareLength, 'a')   // => 'a'\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-40"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#maxBy"}),"Stream.maxBy"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#maxBy"}),"StreamBase.maxBy"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"min"}),(0,n.kt)("inlineCode",{parentName:"h3"},"min")),(0,n.kt)("p",null,"Returns the mimimum element of the Stream according to a default compare function, or the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"otherwise")," fallback value if the Stream is empty.")),(0,n.kt)("h4",k({},{id:"definition-42"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"min<O>(otherwise?: OptLazy<O>): T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O;"))),(0,n.kt)("h4",k({},{id:"type-parameters-17"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-37"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<O>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(5, 1, 3).min()         // => 1\nStream.empty<number>().min()     // => undefined\nStream.empty<number>().min('a')  // => 'a'\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-41"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#min"}),"Stream.min"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#min"}),"StreamBase.min"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"minby"}),(0,n.kt)("inlineCode",{parentName:"h3"},"minBy")),(0,n.kt)("p",null,"Returns the mimimum element of the Stream according to the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"compare")," function, or the provided ",(0,n.kt)("inlineCode",{parentName:"p"},"otherwise")," fallback value if the Stream is empty.")),(0,n.kt)("h4",k({},{id:"definition-43"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"minBy<O>(compare: (v1: T, v2: T) => number, otherwise?: OptLazy<O>): T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O;"))),(0,n.kt)("h4",k({},{id:"type-parameters-18"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-38"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"compare")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(v1: T, v2: T) => number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<O>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"function compareLength(a: string, b: string): number { return b.length - a.length };\nStream.of('abc', 'a', 'ab').minBy(compareLength)   // => 'a'\nStream.empty<string>().minBy(compareLength)        // => undefined\nStream.empty<string>().minBy(compareLength, 'a')   // => 'a'\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-42"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#minBy"}),"Stream.minBy"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#minBy"}),"StreamBase.minBy"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"mkgroup"}),(0,n.kt)("inlineCode",{parentName:"h3"},"mkGroup")),(0,n.kt)("p",null,"Returns a Stream starting with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.sep"),", then returning the elements of this Stream interspersed with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.sep"),", and ending with ",(0,n.kt)("inlineCode",{parentName:"p"},"options.end"),".")),(0,n.kt)("h4",k({},{id:"definition-44"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"mkGroup({ sep, start, end, }?: {"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"sep?: "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"start?: "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"end?: "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"}): any;"))),(0,n.kt)("h4",k({},{id:"parameters-39"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{ sep, start, end, }")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"{"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"sep?: "),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"start?: "),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>;"),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"end?: "),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/stream/StreamSource/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"StreamSource")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>;"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"td"},"}")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).mkGroup({ start: '<<', sep: '-', end: '>>' }).toArray()\n// => ['<', '<', 1, '-', 2, '-', 3, '>', '>']\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-43"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#mkGroup"}),"Stream.mkGroup"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#mkGroup"}),"StreamBase.mkGroup"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"prepend"}),(0,n.kt)("inlineCode",{parentName:"h3"},"prepend")),(0,n.kt)("p",null,"Returns the current stream preceded by the given ",(0,n.kt)("inlineCode",{parentName:"p"},"value"))),(0,n.kt)("h4",k({},{id:"definition-45"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"prepend(value: OptLazy<T>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/NonEmpty/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"parameters-40"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).prepend(0).toArray()\n// => [0, 1, 2, 3]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",k({},{id:"overrides-44"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#prepend"}),"Stream.prepend"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#prepend"}),"StreamBase.prepend"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"reduce"}),(0,n.kt)("inlineCode",{parentName:"h3"},"reduce")),(0,n.kt)("p",null,"Applies the given ",(0,n.kt)("inlineCode",{parentName:"p"},"reducer")," to each element in the Stream, and returns the final result.")),(0,n.kt)("h4",k({},{id:"definition-46"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"reduce<O>(reducer: Reducer<T, O>): O;"))),(0,n.kt)("h4",k({},{id:"type-parameters-19"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-41"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"reducer")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Reducer<T, O>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"console.log(Stream.of(1, 2, 4).reduce(Reducer.sum))\n// => 7\nconsole.log(Stream.of(1, 2, 4).reduce(Reducer.product))\n// => 8\n"))),(0,n.kt)("h4",k({},{id:"overrides-45"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#reduce"}),"Stream.reduce"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#reduce"}),"StreamBase.reduce"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"reduceall"}),(0,n.kt)("inlineCode",{parentName:"h3"},"reduceAll")),(0,n.kt)("p",null,"Returns a tuple where each tuple element corresponds to result of applying all Stream elements to the corresponding ",(0,n.kt)("inlineCode",{parentName:"p"},"Reducer")," instance of the given ",(0,n.kt)("inlineCode",{parentName:"p"},"reducers"),".")),(0,n.kt)("h4",k({},{id:"definition-47"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"reduceAll(...reducers: any): any;"))),(0,n.kt)("h4",k({},{id:"parameters-42"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"reducers")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"any")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"all reducers are processed in parallel, thus only one traversal is needed")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"console.log(Stream.of(1, 2, 4).reduceAll(Reducer.sum, Reducer.product))\n// => [7, 8]\n"))),(0,n.kt)("h4",k({},{id:"overrides-46"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#reduceAll"}),"Stream.reduceAll"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#reduceAll"}),"StreamBase.reduceAll"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"reduceallstream"}),(0,n.kt)("inlineCode",{parentName:"h3"},"reduceAllStream")),(0,n.kt)("p",null,"Returns a Stream of tuples where each tuple element corresponds to result of applying all Stream elements to the corresponding ",(0,n.kt)("inlineCode",{parentName:"p"},"Reducer")," instance of the given ",(0,n.kt)("inlineCode",{parentName:"p"},"reducers"),". Returns one element per input Stream element.")),(0,n.kt)("h4",k({},{id:"definition-48"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"reduceAllStream(...reducers: any): any;"))),(0,n.kt)("h4",k({},{id:"parameters-43"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"reducers")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"any")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"all reducers are processed in parallel, thus only one traversal is needed")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"console.log(\nStream.of(1, 2, 4)\n.reduceAllStream(Reducer.sum, Reducer.product)\n.toArray()\n)\n// => [[1, 1], [3, 2], [7, 8]]\n"))),(0,n.kt)("h4",k({},{id:"overrides-47"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#reduceAllStream"}),"Stream.reduceAllStream"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#reduceAllStream"}),"StreamBase.reduceAllStream"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"reducestream"}),(0,n.kt)("inlineCode",{parentName:"h3"},"reduceStream")),(0,n.kt)("p",null,"Returns a Stream where the given ",(0,n.kt)("inlineCode",{parentName:"p"},"reducer")," is applied to each element in the Stream.")),(0,n.kt)("h4",k({},{id:"definition-49"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"reduceStream<O>(reducer: Reducer<T, O>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<O>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-20"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-44"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"reducer")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Reducer<T, O>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"console.log(\nStream.of(1, 2, 4)\n.reduceStream(Reducer.sum)\n.toArray()\n)\n// => [1, 3, 7]\nconsole.log(\nStream.of(1, 2, 4)\n.reduce(Reducer.product)\n.toArray()\n)\n// => [1, 2, 8]\n"))),(0,n.kt)("h4",k({},{id:"overrides-48"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#reduceStream"}),"Stream.reduceStream"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#reduceStream"}),"StreamBase.reduceStream"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"repeat"}),(0,n.kt)("inlineCode",{parentName:"h3"},"repeat")),(0,n.kt)("p",null,"Returns a Stream that returns the elements from this Stream given ",(0,n.kt)("inlineCode",{parentName:"p"},"amount")," of times.")),(0,n.kt)("h4",k({},{id:"definition-50"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"repeat(amount?: number): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"parameters-45"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"amount")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).repeat()              // => Stream(1, 2, 3, 1, 2, 3, 1, 2, ...)\nStream.of(1, 2, 3).repeat(1).toArray()   // => [1, 2, 3]\nStream.of(1, 2, 3).repeat(3).toArray()   // => [1, 2, 3, 1, 2, 3, 1, 2, 3]\nStream.of(1, 2, 3).repeat(-3).toArray()  // => [1, 2, 3]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"amount = undefined means that the Stream is repeated indefintely  @note amount = 1 means that the Stream is not repeated  @note amount < 1 will be normalized to amount = 1  @note O(1)")),(0,n.kt)("h4",k({},{id:"overrides-49"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#repeat"}),"Stream.repeat"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#repeat"}),"StreamBase.repeat"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"single"}),(0,n.kt)("inlineCode",{parentName:"h3"},"single")),(0,n.kt)("p",null,"Returns the first element of the Stream if it only has one element, or a fallback value if the Stream does not have exactly one value.")),(0,n.kt)("h4",k({},{id:"definition-51"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"single<O>(otherwise?: OptLazy<O>): T "),(0,n.kt)("code",null,"|"),(0,n.kt)("inlineCode",{parentName:"p"}," O;"))),(0,n.kt)("h4",k({},{id:"type-parameters-21"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"O"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-46"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"otherwise")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"OptLazy<O>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.empty<number>().single()  // => undefined\nStream.of(1, 2, 3).single()      // => undefined\nStream.of(1).single()            // => 1\nStream.of(1, 2, 3).single(0)     // => 0\n"))),(0,n.kt)("h4",k({},{id:"overrides-50"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#single"}),"Stream.single"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#single"}),"StreamBase.single"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"some"}),(0,n.kt)("inlineCode",{parentName:"h3"},"some")),(0,n.kt)("p",null,"Returns true if any element of the Stream satifies given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function.")),(0,n.kt)("h4",k({},{id:"definition-52"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"some(pred: (value: T, index: number) => boolean): boolean;"))),(0,n.kt)("h4",k({},{id:"parameters-47"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => boolean")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).some((v, i) => v + i > 10) // => false\nStream.of(1, 2, 3).some((v, i) => v + i > 1)  // => true\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-51"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#some"}),"Stream.some"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#some"}),"StreamBase.some"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"spliton"}),(0,n.kt)("inlineCode",{parentName:"h3"},"splitOn")),(0,n.kt)("p",null,"Returns a Stream of arrays of Stream elements, where each array is filled with elements of this Stream up to the next element that equals given ",(0,n.kt)("inlineCode",{parentName:"p"},"sepElem")," according to the given ",(0,n.kt)("inlineCode",{parentName:"p"},"eq")," function.")),(0,n.kt)("h4",k({},{id:"definition-53"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"splitOn(sepElem: T, eq?: Eq<T>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T[]>;"))),(0,n.kt)("h4",k({},{id:"parameters-48"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"sepElem")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"eq")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Eq<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.from('marmot').splitOn('m').toArray()  // => [[], ['a', 'r'], ['o', 't']]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",k({},{id:"overrides-52"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#splitOn"}),"Stream.splitOn"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#splitOn"}),"StreamBase.splitOn"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"splitwhere"}),(0,n.kt)("inlineCode",{parentName:"h3"},"splitWhere")),(0,n.kt)("p",null,"Returns a Stream of arrays of Stream elements, where each array is filled with elements of this Stream up to the next element that satisfies give function ",(0,n.kt)("inlineCode",{parentName:"p"},"pred"),".")),(0,n.kt)("h4",k({},{id:"definition-54"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"splitWhere(pred: (value: T, index: number) => boolean): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T[]>;"))),(0,n.kt)("h4",k({},{id:"parameters-49"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => boolean")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3, 4).splitWhere(v => v == 3).toArray()  // => [[1, 2], [4]]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("h4",k({},{id:"overrides-53"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#splitWhere"}),"Stream.splitWhere"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#splitWhere"}),"StreamBase.splitWhere"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"stream"}),(0,n.kt)("inlineCode",{parentName:"h3"},"stream")),(0,n.kt)("p",null,"Returns a stream of elements of type T.")),(0,n.kt)("h4",k({},{id:"definition-55"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"stream(): this;"))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).stream()\n// => returns itself\n"))),(0,n.kt)("h4",k({},{id:"overrides-54"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#stream"}),"Stream.stream"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#stream"}),"StreamBase.stream"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"take"}),(0,n.kt)("inlineCode",{parentName:"h3"},"take")),(0,n.kt)("p",null,"Returns a stream that contains the elements of this Stream up to a maximum of ",(0,n.kt)("inlineCode",{parentName:"p"},"amount")," elements.")),(0,n.kt)("h4",k({},{id:"definition-56"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"take(amount: number): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"parameters-50"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"amount")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).take(2).toArray()   // => [1, 2]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N) for most types of Stream")),(0,n.kt)("h4",k({},{id:"overrides-55"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#take"}),"Stream.take"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#take"}),"StreamBase.take"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"takewhile"}),(0,n.kt)("inlineCode",{parentName:"h3"},"takeWhile")),(0,n.kt)("p",null,"Returns a Stream that contains the elements of this Stream up to the first element that does not satisfy given ",(0,n.kt)("inlineCode",{parentName:"p"},"pred")," function.")),(0,n.kt)("h4",k({},{id:"definition-57"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"takeWhile(pred: (value: T, index: number) => boolean): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,n.kt)("h4",k({},{id:"parameters-51"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"pred")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"(value: T, index: number) => boolean")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).takeWhile(v => v < 3).toArray()\n// => [1, 2]\n"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(N)")),(0,n.kt)("h4",k({},{id:"overrides-56"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#takeWhile"}),"Stream.takeWhile"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#takeWhile"}),"StreamBase.takeWhile"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"toarray"}),(0,n.kt)("inlineCode",{parentName:"h3"},"toArray")),(0,n.kt)("p",null,"Returns an Array containing all elements in the Stream.")),(0,n.kt)("h4",k({},{id:"definition-58"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"toArray(): T[];"))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).toArray()   // => [1, 2, 3]\n"))),(0,n.kt)("h4",k({},{id:"overrides-57"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#toArray"}),"Stream.toArray"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#toArray"}),"StreamBase.toArray"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"tojson"}),(0,n.kt)("inlineCode",{parentName:"h3"},"toJSON")),(0,n.kt)("p",null,"Returns a JSON representation of the Stream.  ")),(0,n.kt)("h4",k({},{id:"definition-59"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"toJSON(): ToJSON<T[], 'Stream'>;"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"take care not to call on infinite Streams")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).toJSON()   // => { dataType: 'Stream', value: [1, 2, 3] }\n"))),(0,n.kt)("h4",k({},{id:"overrides-58"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#toJSON"}),"Stream.toJSON"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#toJSON"}),"StreamBase.toJSON"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"tostring"}),(0,n.kt)("inlineCode",{parentName:"h3"},"toString")),(0,n.kt)("p",null,"Returns a string representation of the Stream.  ")),(0,n.kt)("h4",k({},{id:"definition-60"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"toString(): string;"))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"to avoid issues with potentially infinite stream, this method does not list the Stream elements. To do this, use ",(0,n.kt)("inlineCode",{parentName:"p"},"join"),".")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3).toString()   // => 'Stream(...<potentially empty>)'\n"))),(0,n.kt)("h4",k({},{id:"overrides-59"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#toString"}),"Stream.toString"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#toString"}),"StreamBase.toString"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"transform"}),(0,n.kt)("inlineCode",{parentName:"h3"},"transform")),(0,n.kt)("p",null,"Returns a Stream consisting of the concatenation of StreamSource elements resulting from applying the given ",(0,n.kt)("inlineCode",{parentName:"p"},"reducer")," to each element.")),(0,n.kt)("h4",k({},{id:"definition-61"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"transform<R>(transformer: Transformer<T, R>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-22"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-52"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"transformer")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Transformer<T, R>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"O(1)")),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"Stream.of(1, 2, 3, 4, 5, 6)\n.transform(Transformer.window(3))\n.toArray()\n// => [[1, 2, 3], [4, 5, 6]]\n"))),(0,n.kt)("h4",k({},{id:"overrides-60"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#transform"}),"Stream.transform"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#transform"}),"StreamBase.transform"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"window"}),(0,n.kt)("inlineCode",{parentName:"h3"},"window")),(0,n.kt)("p",null,"Returns a Stream containing ",(0,n.kt)("inlineCode",{parentName:"p"},"windows")," of ",(0,n.kt)("inlineCode",{parentName:"p"},"windowSize")," consecutive elements of the source stream, with each window starting ",(0,n.kt)("inlineCode",{parentName:"p"},"skipAmount")," elements after the previous one.")),(0,n.kt)("h4",k({},{id:"definition-62"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"window<R>(windowSize: number, skipAmount?: number, collector?: Reducer<T, R>): "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Stream")),(0,n.kt)("inlineCode",{parentName:"p"},"<R>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-23"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"R"),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("h4",k({},{id:"parameters-53"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"windowSize")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"skipAmount")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"collector")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"Reducer<T, R>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"console.log(Stream.of(1, 2, 3, 4, 5, 6, 7).window(3).toArray())\n// => [[1, 2, 3], [4, 5, 6]]\nconsole.log(Stream.of(1, 2, 3, 4, 5).window(3, 1).toArray())\n// => [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\nconsole.log(Stream.of(1, 2, 3, 4).window(2, 2, Reducer.toJSSet()).toArray())\n// => [Set(1, 2), Set(3, 4)]\n"))),(0,n.kt)("h4",k({},{id:"overrides-61"}),"Overrides"),(0,n.kt)("p",null,(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/Stream/interface#window"}),"Stream.window"),", ",(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/stream/custom/StreamBase/class#window"}),"StreamBase.window"))))}y.isMDXComponent=!0}}]);