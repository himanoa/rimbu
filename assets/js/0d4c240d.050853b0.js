"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[85978],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),p=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(m.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),s=p(n),u=r,h=s["".concat(m,".").concat(u)]||s[u]||c[u]||l;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o[s]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},40727:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>k,default:()=>y,frontMatter:()=>h,metadata:()=>N,toc:()=>C});var a=n(3905),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))m.call(t,n)&&d(e,n,t[n]);if(o)for(var n of o(t))p.call(t,n)&&d(e,n,t[n]);return e},c=(e,t)=>l(e,i(t)),u=(e,t)=>{var n={};for(var a in e)m.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&p.call(e,a)&&(n[a]=e[a]);return n};const h={title:"RemoteChannel (namespace)",slug:"/rimbu/channel/RemoteChannel/namespace"},k="namespace RemoteChannel",N={unversionedId:"rimbu_channel/RemoteChannel/index",id:"rimbu_channel/RemoteChannel/index",title:"RemoteChannel (namespace)",description:"A RemoteChannel is a channel that communicates through a message port of the RemoteChannel.SimpleMessagePort type. This makes it usable for cross-environment channel communication, e.g. cross threads or even cross network. Like CrossChannel, RemoteChannel does not receive its own sent messages, but requires another end to communicate.",source:"@site/api/rimbu_channel/RemoteChannel/index.mdx",sourceDirName:"rimbu_channel/RemoteChannel",slug:"/rimbu/channel/RemoteChannel/namespace",permalink:"/api/rimbu/channel/RemoteChannel/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"RemoteChannel (namespace)",slug:"/rimbu/channel/RemoteChannel/namespace"},sidebar:"defaultSidebar",previous:{title:"Mutex",permalink:"/api/rimbu/channel/Mutex/interface"},next:{title:"RemoteChannel.Constructors",permalink:"/api/rimbu/channel/RemoteChannel/Constructors/interface"}},f={},C=[{value:"Interfaces",id:"interfaces",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>createCross</code>",id:"createcross",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>createRead</code>",id:"createread",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>createWrite</code>",id:"createwrite",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-2",level:4}],g={toc:C},b="wrapper";function y(e){var t=e,{components:n}=t,r=u(t,["components"]);return(0,a.kt)(b,c(s(s({},g),r),{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",s({},{id:"namespace-remotechannel"}),(0,a.kt)("inlineCode",{parentName:"h1"},"namespace RemoteChannel")),(0,a.kt)("p",null,"A RemoteChannel is a channel that communicates through a message port of the ",(0,a.kt)("inlineCode",{parentName:"p"},"RemoteChannel.SimpleMessagePort")," type. This makes it usable for cross-environment channel communication, e.g. cross threads or even cross network. Like ",(0,a.kt)("inlineCode",{parentName:"p"},"CrossChannel"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"RemoteChannel")," does not receive its own sent messages, but requires another end to communicate."),(0,a.kt)("h2",s({},{id:"interfaces"}),"Interfaces"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/Constructors/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.Constructors"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"Defines the static ",(0,a.kt)("inlineCode",{parentName:"td"},"RemoteChannel")," API.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/CrossConfig/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.CrossConfig"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"Interface defining the cross-channel configuration for a RemoteChannel.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/ReadConfig/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.ReadConfig"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"Interface defining the read configuration for a RemoteChannel.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"Interface used to perform low-level message communication between processes. Compatible with browser, Node, and Worker contexts.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/WriteConfig/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.WriteConfig"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"Interface defining the write configuration for a RemoteChannel.")))),(0,a.kt)("h2",s({},{id:"static-methods"}),"Static Methods"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"createcross"}),(0,a.kt)("inlineCode",{parentName:"h3"},"createCross")),(0,a.kt)("p",null,"Resolves to a new cross-channel RemoteChannel using the given configuration.")),(0,a.kt)("h4",s({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"createCross<TSend = void, TReceive = TSend>(port: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort")),(0,a.kt)("inlineCode",{parentName:"p"},", config: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/CrossConfig/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.CrossConfig")),(0,a.kt)("inlineCode",{parentName:"p"},"): Promise<"),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/channel/CrossChannel/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"CrossChannel")),(0,a.kt)("inlineCode",{parentName:"p"},"<TSend, TReceive>>;"))),(0,a.kt)("h4",s({},{id:"type-parameters"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Default"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),"TSend"),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"void")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the send message type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),"TReceive"),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"TSend")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the receive message type")))),(0,a.kt)("h4",s({},{id:"parameters"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"port")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"config")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/CrossConfig/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.CrossConfig"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the channel configuration"))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"createread"}),(0,a.kt)("inlineCode",{parentName:"h3"},"createRead")),(0,a.kt)("p",null,"Resolves to a new read-only RemoteChannel using the given configuration.")),(0,a.kt)("h4",s({},{id:"definition-1"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"createRead<T = void>(port: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort")),(0,a.kt)("inlineCode",{parentName:"p"},", config: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/ReadConfig/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.ReadConfig")),(0,a.kt)("inlineCode",{parentName:"p"},"): Promise<"),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/channel/Channel/Read/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Channel.Read")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>>;"))),(0,a.kt)("h4",s({},{id:"type-parameters-1"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Default"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),"T"),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"void")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the message type")))),(0,a.kt)("h4",s({},{id:"parameters-1"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"port")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"config")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/ReadConfig/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.ReadConfig"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the channel configuration"))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",s({},{id:"createwrite"}),(0,a.kt)("inlineCode",{parentName:"h3"},"createWrite")),(0,a.kt)("p",null,"Resolves to a new write-only RemoteChannel using the given configuration.")),(0,a.kt)("h4",s({},{id:"definition-2"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"createWrite<T = void>(port: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort")),(0,a.kt)("inlineCode",{parentName:"p"},", config: "),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/channel/RemoteChannel/WriteConfig/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.WriteConfig")),(0,a.kt)("inlineCode",{parentName:"p"},"): Promise<"),(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/channel/Channel/Write/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"Channel.Write")),(0,a.kt)("inlineCode",{parentName:"p"},"<T>>;"))),(0,a.kt)("h4",s({},{id:"type-parameters-2"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Default"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),"T"),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"void")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the message type")))),(0,a.kt)("h4",s({},{id:"parameters-2"}),"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"port")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/SimpleMessagePort/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.SimpleMessagePort"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"config")),(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/channel/RemoteChannel/WriteConfig/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RemoteChannel.WriteConfig"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"the channel configuration"))))))}y.isMDXComponent=!0}}]);