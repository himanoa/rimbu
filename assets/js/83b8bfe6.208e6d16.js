"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[89178],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=u(n),s=r,f=m["".concat(o,".").concat(s)]||m[s]||d[s]||i;return n?a.createElement(f,l(l({ref:t},c),{},{components:n})):a.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=s;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[m]="string"==typeof e?e:r,l[1]=p;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},72394:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>y,default:()=>N,frontMatter:()=>f,metadata:()=>k,toc:()=>v});var a=n(3905),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,m=(e,t)=>{for(var n in t||(t={}))o.call(t,n)&&c(e,n,t[n]);if(p)for(var n of p(t))u.call(t,n)&&c(e,n,t[n]);return e},d=(e,t)=>i(e,l(t)),s=(e,t)=>{var n={};for(var a in e)o.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&p)for(var a of p(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n};const f={title:"BiMap.Context<UK,UV,Tp>",slug:"/rimbu/bimap/BiMap/Context/interface"},y="interface BiMap.Context<UK,UV,Tp>",k={unversionedId:"rimbu_bimap/BiMap/Context.interface",id:"rimbu_bimap/BiMap/Context.interface",title:"BiMap.Context<UK,UV,Tp>",description:"The BiMap's Context instance that serves as a factory for all related immutable instances and builders.",source:"@site/api/rimbu_bimap/BiMap/Context.interface.mdx",sourceDirName:"rimbu_bimap/BiMap",slug:"/rimbu/bimap/BiMap/Context/interface",permalink:"/api/rimbu/bimap/BiMap/Context/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"BiMap.Context<UK,UV,Tp>",slug:"/rimbu/bimap/BiMap/Context/interface"},sidebar:"defaultSidebar",previous:{title:"BiMap.Builder<K,V>",permalink:"/api/rimbu/bimap/BiMap/Builder/interface"},next:{title:"BiMap.NonEmpty<K,V>",permalink:"/api/rimbu/bimap/BiMap/NonEmpty/interface"}},b={},v=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>_types</code>",id:"_types",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>keyValueContext</code>",id:"keyvaluecontext",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>typeTag</code>",id:"typetag",level:3},{value:"Definition",id:"definition-2",level:4},{value:"<code>valueKeyContext</code>",id:"valuekeycontext",level:3},{value:"Definition",id:"definition-3",level:4}],g={toc:v},h="wrapper";function N(e){var t=e,{components:n}=t,r=s(t,["components"]);return(0,a.kt)(h,d(m(m({},g),r),{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",m({},{id:"interface-bimapcontextukuvtp"}),(0,a.kt)("inlineCode",{parentName:"h1"},"interface BiMap.Context<UK,UV,Tp>")),(0,a.kt)("p",null,"The BiMap's Context instance that serves as a factory for all related immutable instances and builders."),(0,a.kt)("h2",m({},{id:"type-parameters"}),"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Constraints"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Default"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"UK"),(0,a.kt)("td",m({parentName:"tr"},{align:null})),(0,a.kt)("td",m({parentName:"tr"},{align:null})),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"the upper type limit for key types for which this context can create instances")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"UV"),(0,a.kt)("td",m({parentName:"tr"},{align:null})),(0,a.kt)("td",m({parentName:"tr"},{align:null})),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"the upper type limit for value types for which this context can create instances")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"Tp"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("a",m({parentName:"td"},{href:"/api/rimbu/bimap/BiMap/Types/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"BiMap.Types"))),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("a",m({parentName:"td"},{href:"/api/rimbu/bimap/BiMap/Types/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"BiMap.Types"))),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"undocumented")))),(0,a.kt)("h2",m({},{id:"properties"}),"Properties"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"_types"}),(0,a.kt)("inlineCode",{parentName:"h3"},"_types")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly _types: Tp;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"keyvaluecontext"}),(0,a.kt)("inlineCode",{parentName:"h3"},"keyValueContext")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition-1"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly keyValueContext: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map/RMap/Context/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RMap.Context")),(0,a.kt)("inlineCode",{parentName:"p"},"<UK>;")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"typetag"}),(0,a.kt)("inlineCode",{parentName:"h3"},"typeTag")),(0,a.kt)("p",null,"A string tag defining the specific collection type")),(0,a.kt)("h4",m({},{id:"definition-2"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly typeTag: 'BiMap';"))),(0,a.kt)("admonition",m({},{title:"example",type:"note"}),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",m({parentName:"pre"},{className:"language-ts"}),"BiMap.defaultContext().typeTag   // => 'BiMap'\n")))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h3",m({},{id:"valuekeycontext"}),(0,a.kt)("inlineCode",{parentName:"h3"},"valueKeyContext")),(0,a.kt)("p",null,"undocumented")),(0,a.kt)("h4",m({},{id:"definition-3"}),"Definition"),(0,a.kt)("code",null,(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readonly valueKeyContext: "),(0,a.kt)("a",m({parentName:"p"},{href:"/api/rimbu/collection-types/map/RMap/Context/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"RMap.Context")),(0,a.kt)("inlineCode",{parentName:"p"},"<UV>;")))))}N.isMDXComponent=!0}}]);