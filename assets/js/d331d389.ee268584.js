"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[43018],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(p,".").concat(f)]||d[f]||s[f]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},47317:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>y,default:()=>x,frontMatter:()=>m,metadata:()=>k,toc:()=>b});var r=n(3905),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&c(e,n,t[n]);if(l)for(var n of l(t))u.call(t,n)&&c(e,n,t[n]);return e},s=(e,t)=>o(e,i(t)),f=(e,t)=>{var n={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&u.call(e,r)&&(n[r]=e[r]);return n};const m={title:"SortedMultiMapHashValue.Context<UK,UV>",slug:"/rimbu/core/SortedMultiMapHashValue/Context/interface"},y="interface SortedMultiMapHashValue.Context<UK,UV>",k={unversionedId:"rimbu_core/SortedMultiMapHashValue/Context.interface",id:"rimbu_core/SortedMultiMapHashValue/Context.interface",title:"SortedMultiMapHashValue.Context<UK,UV>",description:"A context instance for an SortedMultiMapHashValue that acts as a factory for every instance of this type of collection.",source:"@site/api/rimbu_core/SortedMultiMapHashValue/Context.interface.mdx",sourceDirName:"rimbu_core/SortedMultiMapHashValue",slug:"/rimbu/core/SortedMultiMapHashValue/Context/interface",permalink:"/api/rimbu/core/SortedMultiMapHashValue/Context/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"SortedMultiMapHashValue.Context<UK,UV>",slug:"/rimbu/core/SortedMultiMapHashValue/Context/interface"},sidebar:"defaultSidebar",previous:{title:"SortedMultiMapHashValue.Builder<K,V>",permalink:"/api/rimbu/core/SortedMultiMapHashValue/Builder/interface"},next:{title:"SortedMultiMapHashValue.NonEmpty<K,V>",permalink:"/api/rimbu/core/SortedMultiMapHashValue/NonEmpty/interface"}},h={},b=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>keyMapContext</code>",id:"keymapcontext",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>keyMapValuesContext</code>",id:"keymapvaluescontext",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>typeTag</code>",id:"typetag",level:3},{value:"Definition",id:"definition-2",level:4}],v={toc:b},M="wrapper";function x(e){var t=e,{components:n}=t,a=f(t,["components"]);return(0,r.kt)(M,s(d(d({},v),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",d({},{id:"interface-sortedmultimaphashvaluecontextukuv"}),(0,r.kt)("inlineCode",{parentName:"h1"},"interface SortedMultiMapHashValue.Context<UK,UV>")),(0,r.kt)("p",null,"A context instance for an ",(0,r.kt)("inlineCode",{parentName:"p"},"SortedMultiMapHashValue")," that acts as a factory for every instance of this type of collection."),(0,r.kt)("h2",d({},{id:"type-parameters"}),"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),"UK"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"the upper key type bound for which the context can be used")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),"UV"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"the upper value type bound for which the context can be used")))),(0,r.kt)("h2",d({},{id:"properties"}),"Properties"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("h3",d({},{id:"keymapcontext"}),(0,r.kt)("inlineCode",{parentName:"h3"},"keyMapContext")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"SortedMap")," context used to create SortedMaps to the key to value maps.")),(0,r.kt)("h4",d({},{id:"definition"}),"Definition"),(0,r.kt)("code",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"readonly keyMapContext: "),(0,r.kt)("a",d({parentName:"p"},{href:"/api/rimbu/core/SortedMap/Context/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"SortedMap.Context")),(0,r.kt)("inlineCode",{parentName:"p"},"<UK>;")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("h3",d({},{id:"keymapvaluescontext"}),(0,r.kt)("inlineCode",{parentName:"h3"},"keyMapValuesContext")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"HashSet")," context used to create HashSets for the value sets.")),(0,r.kt)("h4",d({},{id:"definition-1"}),"Definition"),(0,r.kt)("code",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"readonly keyMapValuesContext: "),(0,r.kt)("a",d({parentName:"p"},{href:"/api/rimbu/core/HashSet/Context/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"HashSet.Context")),(0,r.kt)("inlineCode",{parentName:"p"},"<UV>;")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("h3",d({},{id:"typetag"}),(0,r.kt)("inlineCode",{parentName:"h3"},"typeTag")),(0,r.kt)("p",null,"undocumented")),(0,r.kt)("h4",d({},{id:"definition-2"}),"Definition"),(0,r.kt)("code",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"readonly typeTag: 'SortedMultiMapHashValue';")))))}x.isMDXComponent=!0}}]);