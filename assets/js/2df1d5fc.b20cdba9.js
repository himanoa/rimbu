"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[12683],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,y=u["".concat(l,".").concat(d)]||u[d]||c[d]||i;return n?r.createElement(y,o(o({ref:t},m),{},{components:n})):r.createElement(y,o({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},56644:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>d,default:()=>N,frontMatter:()=>u,metadata:()=>y,toc:()=>k});var r=n(3905),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,c=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&m(e,n,t[n]);if(s)for(var n of s(t))p.call(t,n)&&m(e,n,t[n]);return e};const u={title:"AsyncTransformer (namespace)",slug:"/rimbu/stream/async/AsyncTransformer/namespace"},d="namespace AsyncTransformer",y={unversionedId:"rimbu_stream/async/AsyncTransformer/index",id:"rimbu_stream/async/AsyncTransformer/index",title:"AsyncTransformer (namespace)",description:"An AsyncReducer that produces instances of AsyncStreamSource.",source:"@site/api/rimbu_stream/async/AsyncTransformer/index.mdx",sourceDirName:"rimbu_stream/async/AsyncTransformer",slug:"/rimbu/stream/async/AsyncTransformer/namespace",permalink:"/api/rimbu/stream/async/AsyncTransformer/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"AsyncTransformer (namespace)",slug:"/rimbu/stream/async/AsyncTransformer/namespace"},sidebar:"defaultSidebar",previous:{title:"AsyncStreamable<T>",permalink:"/api/rimbu/stream/async/AsyncStreamable/interface"},next:{title:"NonEmpty",permalink:"/api/rimbu/stream/async/AsyncTransformer/NonEmpty/type"}},f={},k=[{value:"Functions",id:"functions",level:2},{value:"<code>distinctPrevious</code>",id:"distinctprevious",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters",level:5},{value:"Parameters",id:"parameters",level:4},{value:"Constants",id:"constants",level:2}],b={toc:k};function N(e){var t,n=e,{components:a}=n,m=((e,t)=>{var n={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&s)for(var r of s(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=c(c({},b),m),i(t,o({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("h1",c({},{id:"namespace-asynctransformer"}),(0,r.kt)("inlineCode",{parentName:"h1"},"namespace AsyncTransformer")),(0,r.kt)("p",null,"An AsyncReducer that produces instances of ",(0,r.kt)("inlineCode",{parentName:"p"},"AsyncStreamSource"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Companion type:")," ",(0,r.kt)("a",c({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncTransformer/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncTransformer<T,R>"))),(0,r.kt)("h2",c({},{id:"functions"}),"Functions"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("h3",c({},{id:"distinctprevious"}),(0,r.kt)("inlineCode",{parentName:"h3"},"distinctPrevious")),(0,r.kt)("p",null,"Returns an async transformer that returns only those elements from the input that are different to previous element according to the optionally given ",(0,r.kt)("inlineCode",{parentName:"p"},"eq")," function.")),(0,r.kt)("h4",c({},{id:"definition"}),"Definition"),(0,r.kt)("code",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function distinctPrevious<T>(eq?: "),(0,r.kt)("a",c({parentName:"p"},{href:"/api/rimbu/common/Eq/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"Eq")),(0,r.kt)("inlineCode",{parentName:"p"},"<T>): "),(0,r.kt)("a",c({parentName:"p"},{href:"/api/rimbu/stream/async/AsyncTransformer/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"AsyncTransformer")),(0,r.kt)("inlineCode",{parentName:"p"},"<T>;"))),(0,r.kt)("h5",c({},{id:"type-parameters"}),"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"T"),(0,r.kt)("td",c({parentName:"tr"},{align:null}))))),(0,r.kt)("h4",c({},{id:"parameters"}),"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Type"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"eq")),(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("a",c({parentName:"td"},{href:"/api/rimbu/common/Eq/type"}),(0,r.kt)("inlineCode",{parentName:"a"},"Eq")),(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"(default: ",(0,r.kt)("inlineCode",{parentName:"td"},"Eq.objectIs"),") the equality testing function")))),(0,r.kt)("admonition",c({},{title:"example",type:"note"}),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",c({parentName:"pre"},{className:"language-ts"}),"await AsyncStream.of(1, 1, 2, 3, 2, 2)\n.transform(AsyncTransformer.distinctPrevious())\n.toArray()\n// => [1, 2, 3, 2]\n")))),(0,r.kt)("h2",c({},{id:"constants"}),"Constants"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"window"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Returns an async transformer that produces windows/collections of ",(0,r.kt)("inlineCode",{parentName:"td"},"windowSize")," size, each window starting ",(0,r.kt)("inlineCode",{parentName:"td"},"skipAmount")," of elements after the previous, and optionally collected by a custom reducer.")))))}N.isMDXComponent=!0}}]);