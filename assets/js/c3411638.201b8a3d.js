"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[7789],{3905:(e,n,r)=>{r.d(n,{Zo:()=>l,kt:()=>y});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=t.createContext({}),p=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},l=function(e){var n=p(e.components);return t.createElement(u.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(r),y=o,d=m["".concat(u,".").concat(y)]||m[y]||s[y]||a;return r?t.createElement(d,c(c({ref:n},l),{},{components:r})):t.createElement(d,c({ref:n},l))}));function y(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=m;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=r[p];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},90267:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>f,contentTitle:()=>y,default:()=>v,frontMatter:()=>m,metadata:()=>d,toc:()=>b});var t=r(3905),o=Object.defineProperty,a=Object.defineProperties,c=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,l=(e,n,r)=>n in e?o(e,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[n]=r,s=(e,n)=>{for(var r in n||(n={}))u.call(n,r)&&l(e,r,n[r]);if(i)for(var r of i(n))p.call(n,r)&&l(e,r,n[r]);return e};const m={title:"AsyncReducer",slug:"/rimbu/common/AsyncReducer/type"},y="type AsyncReducer<I,O>",d={unversionedId:"rimbu_common/AsyncReducer.type",id:"rimbu_common/AsyncReducer.type",title:"AsyncReducer",description:"An AsyncReducer is a stand-alone asynchronous calculation that takes input values of type I, and, when requested, produces an output value of type O.",source:"@site/api/rimbu_common/AsyncReducer.type.mdx",sourceDirName:"rimbu_common",slug:"/rimbu/common/AsyncReducer/type",permalink:"/api/rimbu/common/AsyncReducer/type",draft:!1,tags:[],version:"current",frontMatter:{title:"AsyncReducer",slug:"/rimbu/common/AsyncReducer/type"},sidebar:"defaultSidebar",previous:{title:"sum",permalink:"/api/rimbu/common/AsyncReducer/sum/var"},next:{title:"CollectFun (namespace)",permalink:"/api/rimbu/common/CollectFun/namespace"}},f={},b=[{value:"Definition",id:"definition",level:2}],O={toc:b};function v(e){var n,r=e,{components:o}=r,l=((e,n)=>{var r={};for(var t in e)u.call(e,t)&&n.indexOf(t)<0&&(r[t]=e[t]);if(null!=e&&i)for(var t of i(e))n.indexOf(t)<0&&p.call(e,t)&&(r[t]=e[t]);return r})(r,["components"]);return(0,t.kt)("wrapper",(n=s(s({},O),l),a(n,c({components:o,mdxType:"MDXLayout"}))),(0,t.kt)("h1",s({},{id:"type-asyncreducerio"}),(0,t.kt)("inlineCode",{parentName:"h1"},"type AsyncReducer<I,O>")),(0,t.kt)("p",null,"An ",(0,t.kt)("inlineCode",{parentName:"p"},"AsyncReducer")," is a stand-alone asynchronous calculation that takes input values of type I, and, when requested, produces an output value of type O."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Companion namespace:")," ",(0,t.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/AsyncReducer/namespace"}),"AsyncReducer")),(0,t.kt)("h2",s({},{id:"definition"}),"Definition"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"export declare type AsyncReducer<I, O = I> = "),(0,t.kt)("a",s({parentName:"p"},{href:"/api/rimbu/common/AsyncReducer/Impl/interface"}),(0,t.kt)("inlineCode",{parentName:"a"},"AsyncReducer.Impl")),(0,t.kt)("inlineCode",{parentName:"p"},"<I, O, unknown>;")))}v.isMDXComponent=!0}}]);