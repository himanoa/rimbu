"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[71732],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return f}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function u(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),l=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):u(u({},t),e)),a},c=function(e){var t=l(e.components);return r.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=l(a),f=n,d=s["".concat(o,".").concat(f)]||s[f]||m[f]||i;return a?r.createElement(d,u(u({ref:t},c),{},{components:a})):r.createElement(d,u({ref:t},c))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,u=new Array(i);u[0]=s;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:n,u[1]=p;for(var l=2;l<i;l++)u[l]=a[l];return r.createElement.apply(null,u)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"},64366:function(e,t,a){a.r(t),a.d(t,{assets:function(){return b},contentTitle:function(){return f},default:function(){return O},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return y}});var r=a(3905),n=Object.defineProperty,i=Object.defineProperties,u=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,c=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,m=(e,t)=>{for(var a in t||(t={}))o.call(t,a)&&c(e,a,t[a]);if(p)for(var a of p(t))l.call(t,a)&&c(e,a,t[a]);return e};const s={title:"VariantMultiMapBase (namespace)",slug:"/rimbu/multimap/custom/VariantMultiMapBase/namespace"},f="namespace VariantMultiMapBase",d={unversionedId:"rimbu_multimap/custom/VariantMultiMapBase/index",id:"rimbu_multimap/custom/VariantMultiMapBase/index",title:"VariantMultiMapBase (namespace)",description:"undocumented",source:"@site/api/rimbu_multimap/custom/VariantMultiMapBase/index.mdx",sourceDirName:"rimbu_multimap/custom/VariantMultiMapBase",slug:"/rimbu/multimap/custom/VariantMultiMapBase/namespace",permalink:"/api/rimbu/multimap/custom/VariantMultiMapBase/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"VariantMultiMapBase (namespace)",slug:"/rimbu/multimap/custom/VariantMultiMapBase/namespace"},sidebar:"defaultSidebar",previous:{title:"SortedMultiMapSortedValueCreators",permalink:"/api/rimbu/multimap/custom/SortedMultiMapSortedValueCreators/interface"},next:{title:"VariantMultiMapBase.NonEmpty<K,V,Tp>",permalink:"/api/rimbu/multimap/custom/VariantMultiMapBase/NonEmpty/interface"}},b={},y=[{value:"Interfaces",id:"interfaces",level:2}],M={toc:y};function O(e){var t,a=e,{components:n}=a,c=((e,t)=>{var a={};for(var r in e)o.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&p)for(var r of p(e))t.indexOf(r)<0&&l.call(e,r)&&(a[r]=e[r]);return a})(a,["components"]);return(0,r.kt)("wrapper",(t=m(m({},M),c),i(t,u({components:n,mdxType:"MDXLayout"}))),(0,r.kt)("h1",m({},{id:"namespace-variantmultimapbase"}),(0,r.kt)("inlineCode",{parentName:"h1"},"namespace VariantMultiMapBase")),(0,r.kt)("p",null,"undocumented"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Companion interface:")," ",(0,r.kt)("a",m({parentName:"p"},{href:"/api/rimbu/multimap/custom/VariantMultiMapBase/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"VariantMultiMapBase<K,V,Tp>"))),(0,r.kt)("h2",m({},{id:"interfaces"}),"Interfaces"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",m({parentName:"tr"},{align:null}),(0,r.kt)("a",m({parentName:"td"},{href:"/api/rimbu/multimap/custom/VariantMultiMapBase/NonEmpty/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"VariantMultiMapBase.NonEmpty<K,V,Tp>"))),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"undocumented")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",m({parentName:"tr"},{align:null}),(0,r.kt)("a",m({parentName:"td"},{href:"/api/rimbu/multimap/custom/VariantMultiMapBase/Types/interface"}),(0,r.kt)("inlineCode",{parentName:"a"},"VariantMultiMapBase.Types"))),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))))}O.isMDXComponent=!0}}]);