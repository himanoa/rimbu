"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[61933],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),l=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),s=l(r),u=n,h=s["".concat(p,".").concat(u)]||s[u]||m[u]||i;return r?a.createElement(h,o(o({ref:t},c),{},{components:r})):a.createElement(h,o({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=u;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d[s]="string"==typeof e?e:n,o[1]=d;for(var l=2;l<i;l++)o[l]=r[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},79609:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>O,contentTitle:()=>f,default:()=>v,frontMatter:()=>h,metadata:()=>b,toc:()=>y});var a=r(3905),n=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,s=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&c(e,r,t[r]);if(d)for(var r of d(t))l.call(t,r)&&c(e,r,t[r]);return e},m=(e,t)=>i(e,o(t)),u=(e,t)=>{var r={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&d)for(var a of d(e))t.indexOf(a)<0&&l.call(e,a)&&(r[a]=e[a]);return r};const h={title:"OrderedHashSet (namespace)",slug:"/rimbu/core/OrderedHashSet/namespace"},f="namespace OrderedHashSet",b={unversionedId:"rimbu_core/OrderedHashSet/index",id:"rimbu_core/OrderedHashSet/index",title:"OrderedHashSet (namespace)",description:"A type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the Set documentation and the OrderedHashSet API documentation",source:"@site/api/rimbu_core/OrderedHashSet/index.mdx",sourceDirName:"rimbu_core/OrderedHashSet",slug:"/rimbu/core/OrderedHashSet/namespace",permalink:"/api/rimbu/core/OrderedHashSet/namespace",draft:!1,tags:[],version:"current",frontMatter:{title:"OrderedHashSet (namespace)",slug:"/rimbu/core/OrderedHashSet/namespace"},sidebar:"defaultSidebar",previous:{title:"OrderedHashMap",permalink:"/api/rimbu/core/OrderedHashMap/var"},next:{title:"OrderedHashSet.Builder<T>",permalink:"/api/rimbu/core/OrderedHashSet/Builder/interface"}},O={},y=[{value:"Interfaces",id:"interfaces",level:2}],k={toc:y},S="wrapper";function v(e){var t=e,{components:r}=t,n=u(t,["components"]);return(0,a.kt)(S,m(s(s({},k),n),{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",s({},{id:"namespace-orderedhashset"}),(0,a.kt)("inlineCode",{parentName:"h1"},"namespace OrderedHashSet")),(0,a.kt)("p",null,"A type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the ",(0,a.kt)("a",s({parentName:"p"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,a.kt)("a",s({parentName:"p"},{href:"https://rimbu.org/api/rimbu/ordered/set/OrderedHashSet/interface"}),"OrderedHashSet API documentation")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Companion interface:")," ",(0,a.kt)("a",s({parentName:"p"},{href:"/api/rimbu/core/OrderedHashSet/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"OrderedHashSet<T>"))),(0,a.kt)("h2",s({},{id:"interfaces"}),"Interfaces"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/core/OrderedHashSet/Builder/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"OrderedHashSet.Builder<T>"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"A mutable ",(0,a.kt)("inlineCode",{parentName:"td"},"OrderedHashSet")," builder used to efficiently create new immutable instances. See the ",(0,a.kt)("a",s({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,a.kt)("a",s({parentName:"td"},{href:"https://rimbu.org/api/rimbu/ordered/set/OrderedHashSet/Builder/interface"}),"OrderedHashSet.Builder API documentation"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/core/OrderedHashSet/Context/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"OrderedHashSet.Context<UT>"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"A context instance for an ",(0,a.kt)("inlineCode",{parentName:"td"},"OrderedHashSet")," that acts as a factory for every instance of this type of collection.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/core/OrderedHashSet/NonEmpty/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"OrderedHashSet.NonEmpty<T>"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"A non-empty type-invariant immutable Ordered HashSet of value type T. In the Set, there are no duplicate values. See the ",(0,a.kt)("a",s({parentName:"td"},{href:"https://rimbu.org/docs/collections/set"}),"Set documentation")," and the ",(0,a.kt)("a",s({parentName:"td"},{href:"https://rimbu.org/api/rimbu/ordered/set/OrderedHashSet/interface"}),"OrderedHashSet API documentation"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),(0,a.kt)("a",s({parentName:"td"},{href:"/api/rimbu/core/OrderedHashSet/Types/interface"}),(0,a.kt)("inlineCode",{parentName:"a"},"OrderedHashSet.Types"))),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"Utility interface that provides higher-kinded types for this collection.")))))}v.isMDXComponent=!0}}]);