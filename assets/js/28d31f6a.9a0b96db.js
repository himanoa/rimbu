"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[69021],{3905:(e,t,i)=>{i.d(t,{Zo:()=>m,kt:()=>s});var n=i(67294);function l(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function u(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){l(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,n,l=function(e,t){if(null==e)return{};var i,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(l[i]=e[i]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(l[i]=e[i])}return l}var p=n.createContext({}),r=function(e){var t=n.useContext(p),i=t;return e&&(i="function"==typeof e?e(t):u(u({},t),e)),i},m=function(e){var t=r(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var i=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=r(i),c=l,s=d["".concat(p,".").concat(c)]||d[c]||k[c]||a;return i?n.createElement(s,u(u({ref:t},m),{},{components:i})):n.createElement(s,u({ref:t},m))}));function s(e,t){var i=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=i.length,u=new Array(a);u[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:l,u[1]=o;for(var r=2;r<a;r++)u[r]=i[r];return n.createElement.apply(null,u)}return n.createElement.apply(null,i)}c.displayName="MDXCreateElement"},36047:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>y,default:()=>N,frontMatter:()=>s,metadata:()=>f,toc:()=>v});var n=i(3905),l=Object.defineProperty,a=Object.defineProperties,u=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,m=(e,t,i)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,d=(e,t)=>{for(var i in t||(t={}))p.call(t,i)&&m(e,i,t[i]);if(o)for(var i of o(t))r.call(t,i)&&m(e,i,t[i]);return e},k=(e,t)=>a(e,u(t)),c=(e,t)=>{var i={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(i[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&r.call(e,n)&&(i[n]=e[n]);return i};const s={title:"BiMultiMapBase.Types",slug:"/rimbu/bimultimap/custom/BiMultiMapBase/Types/interface"},y="interface BiMultiMapBase.Types",f={unversionedId:"rimbu_bimultimap/custom/BiMultiMapBase/Types.interface",id:"rimbu_bimultimap/custom/BiMultiMapBase/Types.interface",title:"BiMultiMapBase.Types",description:"Utility interface that provides higher-kinded types for this collection.",source:"@site/api/rimbu_bimultimap/custom/BiMultiMapBase/Types.interface.mdx",sourceDirName:"rimbu_bimultimap/custom/BiMultiMapBase",slug:"/rimbu/bimultimap/custom/BiMultiMapBase/Types/interface",permalink:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Types/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"BiMultiMapBase.Types",slug:"/rimbu/bimultimap/custom/BiMultiMapBase/Types/interface"},sidebar:"defaultSidebar",previous:{title:"BiMultiMapBase.NonEmpty<K,V,Tp>",permalink:"/api/rimbu/bimultimap/custom/BiMultiMapBase/NonEmpty/interface"},next:{title:"BiMultiMapBase<K,V,Tp>",permalink:"/api/rimbu/bimultimap/custom/BiMultiMapBase/interface"}},h={},v=[{value:"Properties",id:"properties",level:2},{value:"<code>builder</code>",id:"builder",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>context</code>",id:"context",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>keyMultiMapValues</code>",id:"keymultimapvalues",level:3},{value:"Definition",id:"definition-2",level:4},{value:"<code>keyValueMultiMap</code>",id:"keyvaluemultimap",level:3},{value:"Definition",id:"definition-3",level:4},{value:"<code>keyValueMultiMapContext</code>",id:"keyvaluemultimapcontext",level:3},{value:"Definition",id:"definition-4",level:4},{value:"<code>keyValueMultiMapNonEmpty</code>",id:"keyvaluemultimapnonempty",level:3},{value:"Definition",id:"definition-5",level:4},{value:"<code>nonEmpty</code>",id:"nonempty",level:3},{value:"Definition",id:"definition-6",level:4},{value:"<code>normal</code>",id:"normal",level:3},{value:"Definition",id:"definition-7",level:4},{value:"<code>valueKeyMultiMap</code>",id:"valuekeymultimap",level:3},{value:"Definition",id:"definition-8",level:4},{value:"<code>valueKeyMultiMapContext</code>",id:"valuekeymultimapcontext",level:3},{value:"Definition",id:"definition-9",level:4},{value:"<code>valueKeyMultiMapNonEmpty</code>",id:"valuekeymultimapnonempty",level:3},{value:"Definition",id:"definition-10",level:4},{value:"<code>valueMultiMapValues</code>",id:"valuemultimapvalues",level:3},{value:"Definition",id:"definition-11",level:4}],M={toc:v},b="wrapper";function N(e){var t=e,{components:i}=t,l=c(t,["components"]);return(0,n.kt)(b,k(d(d({},M),l),{components:i,mdxType:"MDXLayout"}),(0,n.kt)("h1",d({},{id:"interface-bimultimapbasetypes"}),(0,n.kt)("inlineCode",{parentName:"h1"},"interface BiMultiMapBase.Types")),(0,n.kt)("p",null,"Utility interface that provides higher-kinded types for this collection."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Implemented by:")," ",(0,n.kt)("a",d({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/ContextTypesImpl/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"ContextTypesImpl"))),(0,n.kt)("h2",d({},{id:"properties"}),"Properties"),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",d({},{id:"builder"}),(0,n.kt)("inlineCode",{parentName:"h3"},"builder")),(0,n.kt)("p",null,"The 'builder' collection type (higher-kinded type).")),(0,n.kt)("h4",d({},{id:"definition"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly builder: "),(0,n.kt)("a",d({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Builder/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"BiMultiMapBase.Builder")),(0,n.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",d({},{id:"context"}),(0,n.kt)("inlineCode",{parentName:"h3"},"context")),(0,n.kt)("p",null,"The collection context type (higher-kinded type).")),(0,n.kt)("h4",d({},{id:"definition-1"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly context: "),(0,n.kt)("a",d({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/Context/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"BiMultiMapBase.Context")),(0,n.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",d({},{id:"keymultimapvalues"}),(0,n.kt)("inlineCode",{parentName:"h3"},"keyMultiMapValues")),(0,n.kt)("p",null,"The value set collection type (higher-kinded type).")),(0,n.kt)("h4",d({},{id:"definition-2"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly keyMultiMapValues: RSet<this['_V']>;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",d({},{id:"keyvaluemultimap"}),(0,n.kt)("inlineCode",{parentName:"h3"},"keyValueMultiMap")),(0,n.kt)("p",null,"The key to value multimap type (higher-kinded type).")),(0,n.kt)("h4",d({},{id:"definition-3"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly keyValueMultiMap: MultiMap<this['_K'], this['_V']>;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",d({},{id:"keyvaluemultimapcontext"}),(0,n.kt)("inlineCode",{parentName:"h3"},"keyValueMultiMapContext")),(0,n.kt)("p",null,"The key to value multimap context type (higher-kinded type).")),(0,n.kt)("h4",d({},{id:"definition-4"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly keyValueMultiMapContext: MultiMap.Context<this['_K'], this['_V']>;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",d({},{id:"keyvaluemultimapnonempty"}),(0,n.kt)("inlineCode",{parentName:"h3"},"keyValueMultiMapNonEmpty")),(0,n.kt)("p",null,"The non-empty key to value multimap type (higher-kinded type).")),(0,n.kt)("h4",d({},{id:"definition-5"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly keyValueMultiMapNonEmpty: MultiMap.NonEmpty<this['_K'], this['_V']>;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",d({},{id:"nonempty"}),(0,n.kt)("inlineCode",{parentName:"h3"},"nonEmpty")),(0,n.kt)("p",null,"The 'non-empty' collection type (higher-kinded type).")),(0,n.kt)("h4",d({},{id:"definition-6"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly nonEmpty: "),(0,n.kt)("a",d({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/NonEmpty/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"BiMultiMapBase.NonEmpty")),(0,n.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",d({},{id:"normal"}),(0,n.kt)("inlineCode",{parentName:"h3"},"normal")),(0,n.kt)("p",null,"The 'normal' collection type (higher-kinded type).")),(0,n.kt)("h4",d({},{id:"definition-7"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly normal: "),(0,n.kt)("a",d({parentName:"p"},{href:"/api/rimbu/bimultimap/custom/BiMultiMapBase/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"BiMultiMapBase")),(0,n.kt)("inlineCode",{parentName:"p"},"<this['_K'], this['_V']>;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",d({},{id:"valuekeymultimap"}),(0,n.kt)("inlineCode",{parentName:"h3"},"valueKeyMultiMap")),(0,n.kt)("p",null,"The value to key multimap type (higher-kinded type).")),(0,n.kt)("h4",d({},{id:"definition-8"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly valueKeyMultiMap: MultiMap<this['_V'], this['_K']>;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",d({},{id:"valuekeymultimapcontext"}),(0,n.kt)("inlineCode",{parentName:"h3"},"valueKeyMultiMapContext")),(0,n.kt)("p",null,"The value to key multimap context type (higher-kinded type).")),(0,n.kt)("h4",d({},{id:"definition-9"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly valueKeyMultiMapContext: MultiMap.Context<this['_V'], this['_K']>;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",d({},{id:"valuekeymultimapnonempty"}),(0,n.kt)("inlineCode",{parentName:"h3"},"valueKeyMultiMapNonEmpty")),(0,n.kt)("p",null,"The non-empty value to key multimap type (higher-kinded type).")),(0,n.kt)("h4",d({},{id:"definition-10"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly valueKeyMultiMapNonEmpty: MultiMap.NonEmpty<this['_V'], this['_K']>;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",d({},{id:"valuemultimapvalues"}),(0,n.kt)("inlineCode",{parentName:"h3"},"valueMultiMapValues")),(0,n.kt)("p",null,"The key set collection type (higher-kinded type).")),(0,n.kt)("h4",d({},{id:"definition-11"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly valueMultiMapValues: RSet<this['_K']>;")))))}N.isMDXComponent=!0}}]);