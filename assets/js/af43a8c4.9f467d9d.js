"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[9115],{3905:(e,t,a)=>{a.d(t,{Zo:()=>b,kt:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),p=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},b=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),d=p(a),c=r,s=d["".concat(m,".").concat(c)]||d[c]||u[c]||l;return a?n.createElement(s,o(o({ref:t},b),{},{components:a})):n.createElement(s,o({ref:t},b))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=d;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},98251:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>f,frontMatter:()=>d,metadata:()=>s,toc:()=>k});var n=a(3905),r=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,b=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,u=(e,t)=>{for(var a in t||(t={}))m.call(t,a)&&b(e,a,t[a]);if(i)for(var a of i(t))p.call(t,a)&&b(e,a,t[a]);return e};const d={title:"@rimbu/table",slug:"/rimbu/table"},c="package @rimbu/table",s={unversionedId:"rimbu_table/index",id:"rimbu_table/index",title:"@rimbu/table",description:"The @rimbu/table package provides implementations for tables (2-dimensional maps).",source:"@site/api/rimbu_table/index.mdx",sourceDirName:"rimbu_table",slug:"/rimbu/table",permalink:"/api/rimbu/table",draft:!1,tags:[],version:"current",frontMatter:{title:"@rimbu/table",slug:"/rimbu/table"},sidebar:"defaultSidebar",previous:{title:"fromStreamSource",permalink:"/api/rimbu/stream/fromStreamSource/var"},next:{title:"HashTableHashColumn (namespace)",permalink:"/api/rimbu/table/HashTableHashColumn/namespace"}},h={},k=[{value:"Interfaces",id:"interfaces",level:2},{value:"Namespaces",id:"namespaces",level:2}],y={toc:k};function f(e){var t,a=e,{components:r}=a,b=((e,t)=>{var a={};for(var n in e)m.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&p.call(e,n)&&(a[n]=e[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(t=u(u({},y),b),l(t,o({components:r,mdxType:"MDXLayout"}))),(0,n.kt)("h1",u({},{id:"package-rimbutable"}),(0,n.kt)("inlineCode",{parentName:"h1"},"package @rimbu/table")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"@rimbu/table")," package provides implementations for tables (2-dimensional maps)."),(0,n.kt)("p",null," See the ",(0,n.kt)("a",u({parentName:"p"},{href:"/docs/collections/table"}),"Rimbu docs Table page")," for more information."),(0,n.kt)("p",null," For convenience, this package also exports everything from the following sub-packages:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"./table/hash-row"}),(0,n.kt)("inlineCode",{parentName:"a"},"@rimbu/table/hash-row"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"./table/sorted-row"}),(0,n.kt)("inlineCode",{parentName:"a"},"@rimbu/table/sorted-row")))),(0,n.kt)("h2",u({},{id:"interfaces"}),"Interfaces"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/table/HashTableHashColumn/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"HashTableHashColumn<R,C,V>"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/hash-row/HashTableHashColumn/interface"}),"HashTableHashColumn API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/table/HashTableSortedColumn/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"HashTableSortedColumn<R,C,V>"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/hash-row/HashTableSortedColumn/interface"}),"HashTableSortedColumn API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/table/SortedTableHashColumn/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"SortedTableHashColumn<R,C,V>"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/sorted-row/SortedTableHashColumn/interface"}),"SortedTableHashColumn API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/table/SortedTableSortedColumn/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"SortedTableSortedColumn<R,C,V>"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/sorted-row/SortedTableSortedColumn/interface"}),"SortedTableSortedColumn API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/table/Table/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"Table<R,C,V>"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/Table/interface"}),"Table API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/table/VariantTable/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"VariantTable<R,C,V>"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-variant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/VariantTable/interface"}),"VariantTable API documentation"))))),(0,n.kt)("h2",u({},{id:"namespaces"}),"Namespaces"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/table/HashTableHashColumn/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"HashTableHashColumn"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/hash-row/HashTableHashColumn/interface"}),"HashTableHashColumn API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/table/HashTableSortedColumn/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"HashTableSortedColumn"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/hash-row/HashTableSortedColumn/interface"}),"HashTableSortedColumn API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/table/SortedTableHashColumn/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"SortedTableHashColumn"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/sorted-row/SortedTableHashColumn/interface"}),"SortedTableHashColumn API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/table/SortedTableSortedColumn/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"SortedTableSortedColumn"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/sorted-row/SortedTableSortedColumn/interface"}),"SortedTableSortedColumn API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/table/Table/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"Table"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-invariant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/Table/interface"}),"Table API documentation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),(0,n.kt)("a",u({parentName:"td"},{href:"/api/rimbu/table/VariantTable/namespace"}),(0,n.kt)("inlineCode",{parentName:"a"},"VariantTable"))),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"A type-variant immutable Table of row key type R, column key type C, and value type V. In the Table, a combination of a row and column key has exactly one value. See the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/docs/collections/table"}),"Table documentation")," and the ",(0,n.kt)("a",u({parentName:"td"},{href:"https://rimbu.org/api/rimbu/table/VariantTable/interface"}),"VariantTable API documentation"))))))}f.isMDXComponent=!0}}]);