"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[18140],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=d(r),s=a,f=m["".concat(l,".").concat(s)]||m[s]||c[s]||i;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=s;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[m]="string"==typeof e?e:a,o[1]=p;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},15338:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>b,contentTitle:()=>k,default:()=>x,frontMatter:()=>f,metadata:()=>y,toc:()=>O});var n=r(3905),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,m=(e,t)=>{for(var r in t||(t={}))l.call(t,r)&&u(e,r,t[r]);if(p)for(var r of p(t))d.call(t,r)&&u(e,r,t[r]);return e},c=(e,t)=>i(e,o(t)),s=(e,t)=>{var r={};for(var n in e)l.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&p)for(var n of p(e))t.indexOf(n)<0&&d.call(e,n)&&(r[n]=e[n]);return r};const f={title:"OrderedMapBase.Context<UK,Tp>",slug:"/rimbu/ordered/map-custom/OrderedMapBase/Context/interface"},k="interface OrderedMapBase.Context<UK,Tp>",y={unversionedId:"rimbu_ordered/map-custom/OrderedMapBase/Context.interface",id:"rimbu_ordered/map-custom/OrderedMapBase/Context.interface",title:"OrderedMapBase.Context<UK,Tp>",description:"undocumented",source:"@site/api/rimbu_ordered/map-custom/OrderedMapBase/Context.interface.mdx",sourceDirName:"rimbu_ordered/map-custom/OrderedMapBase",slug:"/rimbu/ordered/map-custom/OrderedMapBase/Context/interface",permalink:"/api/rimbu/ordered/map-custom/OrderedMapBase/Context/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"OrderedMapBase.Context<UK,Tp>",slug:"/rimbu/ordered/map-custom/OrderedMapBase/Context/interface"},sidebar:"defaultSidebar",previous:{title:"OrderedMapBase.Builder<K,V,Tp>",permalink:"/api/rimbu/ordered/map-custom/OrderedMapBase/Builder/interface"},next:{title:"OrderedMapBase.NonEmpty<K,V,Tp>",permalink:"/api/rimbu/ordered/map-custom/OrderedMapBase/NonEmpty/interface"}},b={},O=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>listContext</code>",id:"listcontext",level:3},{value:"Definition",id:"definition",level:4},{value:"<code>mapContext</code>",id:"mapcontext",level:3},{value:"Definition",id:"definition-1",level:4},{value:"<code>typeTag</code>",id:"typetag",level:3},{value:"Definition",id:"definition-2",level:4}],v={toc:O},g="wrapper";function x(e){var t=e,{components:r}=t,a=s(t,["components"]);return(0,n.kt)(g,c(m(m({},v),a),{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",m({},{id:"interface-orderedmapbasecontextuktp"}),(0,n.kt)("inlineCode",{parentName:"h1"},"interface OrderedMapBase.Context<UK,Tp>")),(0,n.kt)("p",null,"undocumented"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Implemented by:")," ",(0,n.kt)("a",m({parentName:"p"},{href:"/api/rimbu/ordered/map-custom/OrderedMapContextImpl/class"}),(0,n.kt)("inlineCode",{parentName:"a"},"OrderedMapContextImpl<UK,Tp>"))),(0,n.kt)("h2",m({},{id:"type-parameters"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Default"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"UK"),(0,n.kt)("td",m({parentName:"tr"},{align:null})),(0,n.kt)("td",m({parentName:"tr"},{align:null})),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"undocumented")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Tp"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),(0,n.kt)("a",m({parentName:"td"},{href:"/api/rimbu/ordered/map-custom/OrderedMapBase/Types/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"OrderedMapBase.Types"))),(0,n.kt)("td",m({parentName:"tr"},{align:null}),(0,n.kt)("a",m({parentName:"td"},{href:"/api/rimbu/ordered/map-custom/OrderedMapBase/Types/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"OrderedMapBase.Types"))),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"undocumented")))),(0,n.kt)("h2",m({},{id:"properties"}),"Properties"),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",m({},{id:"listcontext"}),(0,n.kt)("inlineCode",{parentName:"h3"},"listContext")),(0,n.kt)("p",null,"The List context used to create Lists to keep value insertion order.")),(0,n.kt)("h4",m({},{id:"definition"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly listContext: List.Context;")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",m({},{id:"mapcontext"}),(0,n.kt)("inlineCode",{parentName:"h3"},"mapContext")),(0,n.kt)("p",null,"The Map context used to create the wrapped Map instances.")),(0,n.kt)("h4",m({},{id:"definition-1"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly mapContext: WithElem<Tp, UK>['sourceContext'];")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",m({},{id:"typetag"}),(0,n.kt)("inlineCode",{parentName:"h3"},"typeTag")),(0,n.kt)("p",null,"undocumented")),(0,n.kt)("h4",m({},{id:"definition-2"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readonly typeTag: 'OrderedMap';")))))}x.isMDXComponent=!0}}]);