"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[37427],{3905:(t,e,r)=>{r.d(e,{Zo:()=>c,kt:()=>b});var n=r(67294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var u=n.createContext({}),p=function(t){var e=n.useContext(u),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},c=function(t){var e=p(t.components);return n.createElement(u.Provider,{value:e},t.children)},m="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},f=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,u=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),m=p(r),f=a,b=m["".concat(u,".").concat(f)]||m[f]||s[f]||i;return r?n.createElement(b,l(l({ref:e},c),{},{components:r})):n.createElement(b,l({ref:e},c))}));function b(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,l=new Array(i);l[0]=f;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=t,o[m]="string"==typeof t?t:a,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},14507:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>v,contentTitle:()=>y,default:()=>k,frontMatter:()=>b,metadata:()=>d,toc:()=>h});var n=r(3905),a=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(t,e,r)=>e in t?a(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,m=(t,e)=>{for(var r in e||(e={}))u.call(e,r)&&c(t,r,e[r]);if(o)for(var r of o(e))p.call(e,r)&&c(t,r,e[r]);return t},s=(t,e)=>i(t,l(e)),f=(t,e)=>{var r={};for(var n in t)u.call(t,n)&&e.indexOf(n)<0&&(r[n]=t[n]);if(null!=t&&o)for(var n of o(t))e.indexOf(n)<0&&p.call(t,n)&&(r[n]=t[n]);return r};const b={title:"VariantMultiSet<T>",slug:"/rimbu/multiset/VariantMultiSet/interface"},y="interface VariantMultiSet<T>",d={unversionedId:"rimbu_multiset/VariantMultiSet.interface",id:"rimbu_multiset/VariantMultiSet.interface",title:"VariantMultiSet<T>",description:"A type-variant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the MultiSet documentation and the VariantMultiSet API documentation",source:"@site/api/rimbu_multiset/VariantMultiSet.interface.mdx",sourceDirName:"rimbu_multiset",slug:"/rimbu/multiset/VariantMultiSet/interface",permalink:"/api/rimbu/multiset/VariantMultiSet/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"VariantMultiSet<T>",slug:"/rimbu/multiset/VariantMultiSet/interface"},sidebar:"defaultSidebar",previous:{title:"VariantMultiSet.Types",permalink:"/api/rimbu/multiset/VariantMultiSet/Types/interface"},next:{title:"@rimbu/multiset/custom",permalink:"/api/rimbu/multiset/custom"}},v={},h=[{value:"Type parameters",id:"type-parameters",level:2}],O={toc:h},g="wrapper";function k(t){var e=t,{components:r}=e,a=f(e,["components"]);return(0,n.kt)(g,s(m(m({},O),a),{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",m({},{id:"interface-variantmultisett"}),(0,n.kt)("inlineCode",{parentName:"h1"},"interface VariantMultiSet<T>")),(0,n.kt)("p",null,"A type-variant immutable MultiSet of value type T. In the MultiSet, each value can occur multiple times. See the ",(0,n.kt)("a",m({parentName:"p"},{href:"https://rimbu.org/docs/collections/multiset"}),"MultiSet documentation")," and the ",(0,n.kt)("a",m({parentName:"p"},{href:"https://rimbu.org/api/rimbu/multiset/VariantMultiSet/interface"}),"VariantMultiSet API documentation")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Companion namespace:")," ",(0,n.kt)("a",m({parentName:"p"},{href:"/api/rimbu/multiset/VariantMultiSet/namespace"}),"VariantMultiSet")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Implemented by:")," ",(0,n.kt)("a",m({parentName:"p"},{href:"/api/rimbu/multiset/VariantMultiSet/NonEmpty/interface"}),(0,n.kt)("inlineCode",{parentName:"a"},"VariantMultiSet.NonEmpty<T>"))),(0,n.kt)("h2",m({},{id:"type-parameters"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"T"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"the value type")))),(0,n.kt)("admonition",m({},{title:"note",type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"Type-variance means that both the value type can be widened in a type-safe way without casting.  @note As a consequence of being variant, the type does not contain methods that (can) add new elements to the collection.")))}k.isMDXComponent=!0}}]);