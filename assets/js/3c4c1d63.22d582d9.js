"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[10629],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>b});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,p=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(r),b=o,y=d["".concat(c,".").concat(b)]||d[b]||m[b]||p;return r?n.createElement(y,a(a({ref:t},l),{},{components:r})):n.createElement(y,a({ref:t},l))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var p=r.length,a=new Array(p);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var u=2;u<p;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},46553:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>f,contentTitle:()=>b,default:()=>C,frontMatter:()=>d,metadata:()=>y,toc:()=>s});var n=r(3905),o=Object.defineProperty,p=Object.defineProperties,a=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,l=(e,t,r)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,m=(e,t)=>{for(var r in t||(t={}))c.call(t,r)&&l(e,r,t[r]);if(i)for(var r of i(t))u.call(t,r)&&l(e,r,t[r]);return e};const d={title:"CompoundForObj",slug:"/rimbu/deep/Match/CompoundForObj/type"},b="type CompoundForObj<T,C,P,R>",y={unversionedId:"rimbu_deep/Match/CompoundForObj.type",id:"rimbu_deep/Match/CompoundForObj.type",title:"CompoundForObj",description:"Compount matcher for objects, can only be an array staring with a compound type keyword.",source:"@site/api/rimbu_deep/Match/CompoundForObj.type.mdx",sourceDirName:"rimbu_deep/Match",slug:"/rimbu/deep/Match/CompoundForObj/type",permalink:"/api/rimbu/deep/Match/CompoundForObj/type",draft:!1,tags:[],version:"current",frontMatter:{title:"CompoundForObj",slug:"/rimbu/deep/Match/CompoundForObj/type"},sidebar:"defaultSidebar",previous:{title:"CompoundForArr",permalink:"/api/rimbu/deep/Match/CompoundForArr/type"},next:{title:"CompoundType",permalink:"/api/rimbu/deep/Match/CompoundType/type"}},f={},s=[{value:"Definition",id:"definition",level:2}],O={toc:s};function C(e){var t,r=e,{components:o}=r,l=((e,t)=>{var r={};for(var n in e)c.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&u.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=m(m({},O),l),p(t,a({components:o,mdxType:"MDXLayout"}))),(0,n.kt)("h1",m({},{id:"type-compoundforobjtcpr"}),(0,n.kt)("inlineCode",{parentName:"h1"},"type CompoundForObj<T,C,P,R>")),(0,n.kt)("p",null,"Compount matcher for objects, can only be an array staring with a compound type keyword."),(0,n.kt)("h2",m({},{id:"definition"}),"Definition"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"type CompoundForObj<T, C, P, R> = ["),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("a",m({parentName:"p"},{href:"/api/rimbu/deep/Match/CompoundType/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Match.CompoundType")),(0,n.kt)("inlineCode",{parentName:"p"},","),(0,n.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"..."),(0,n.kt)("a",m({parentName:"p"},{href:"/api/rimbu/deep/Match/Entry/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Match.Entry")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, C, P, R>[]"),(0,n.kt)("br",null),"\xa0","\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"];")))}C.isMDXComponent=!0}}]);