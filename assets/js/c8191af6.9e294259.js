"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[29838],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>N});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),d=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=d(e.components);return n.createElement(m.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),k=d(a),h=r,N=k["".concat(m,".").concat(h)]||k[h]||u[h]||l;return a?n.createElement(N,i(i({ref:t},o),{},{components:a})):n.createElement(N,i({ref:t},o))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=h;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p[k]="string"==typeof e?e:r,i[1]=p;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},67569:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>y,contentTitle:()=>s,default:()=>v,frontMatter:()=>N,metadata:()=>c,toc:()=>b});var n=a(3905),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,o=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,k=(e,t)=>{for(var a in t||(t={}))m.call(t,a)&&o(e,a,t[a]);if(p)for(var a of p(t))d.call(t,a)&&o(e,a,t[a]);return e},u=(e,t)=>l(e,i(t)),h=(e,t)=>{var a={};for(var n in e)m.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&p)for(var n of p(e))t.indexOf(n)<0&&d.call(e,n)&&(a[n]=e[n]);return a};const N={title:"WithType<T>",slug:"/rimbu/deep/WithType/interface"},s="interface WithType<T>",c={unversionedId:"rimbu_deep/WithType.interface",id:"rimbu_deep/WithType.interface",title:"WithType<T>",description:"Typed and curried Deep API, used in situations where the target type is known but the value will be applied later.",source:"@site/api/rimbu_deep/WithType.interface.mdx",sourceDirName:"rimbu_deep",slug:"/rimbu/deep/WithType/interface",permalink:"/api/rimbu/deep/WithType/interface",draft:!1,tags:[],version:"current",frontMatter:{title:"WithType<T>",slug:"/rimbu/deep/WithType/interface"},sidebar:"defaultSidebar",previous:{title:"Tuple",permalink:"/api/rimbu/deep/Tuple/type"},next:{title:"@rimbu/graph",permalink:"/api/rimbu/graph"}},y={},b=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>getAtWith</code>",id:"getatwith",level:3},{value:"Definition",id:"definition",level:4},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"<code>matchAtWith</code>",id:"matchatwith",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>matchWith</code>",id:"matchwith",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"<code>patchAtWith</code>",id:"patchatwith",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"<code>patchWith</code>",id:"patchwith",level:3},{value:"Definition",id:"definition-4",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"<code>selectAtWith</code>",id:"selectatwith",level:3},{value:"Definition",id:"definition-5",level:4},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"<code>selectWith</code>",id:"selectwith",level:3},{value:"Definition",id:"definition-6",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-6",level:4}],g={toc:b},f="wrapper";function v(e){var t=e,{components:a}=t,r=h(t,["components"]);return(0,n.kt)(f,u(k(k({},g),r),{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",k({},{id:"interface-withtypet"}),(0,n.kt)("inlineCode",{parentName:"h1"},"interface WithType<T>")),(0,n.kt)("p",null,"Typed and curried Deep API, used in situations where the target type is known but the value will be applied later."),(0,n.kt)("h2",k({},{id:"type-parameters"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"T"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"the target type")))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"const s = { a: 1, b: { c: 'a', d: true }};\nconst upd = Deep.withType<typeof s>().patchWith([{ a: (v) => v + 1 }]);\nupd(s);\n// => { a: 2, b: { c: 'a', d: true }}\n"))),(0,n.kt)("h2",k({},{id:"methods"}),"Methods"),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"getatwith"}),(0,n.kt)("inlineCode",{parentName:"h3"},"getAtWith")),(0,n.kt)("p",null,"Returns a function that given an object returns the value at the given ",(0,n.kt)("inlineCode",{parentName:"p"},"path"),".")),(0,n.kt)("h4",k({},{id:"definition"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"getAtWith<P extends "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Path/Get/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Get")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>>(path: P): (source: T) => "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Result")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, P>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-1"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"P"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Path/Get/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Get")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"a Path in object type T")))),(0,n.kt)("h4",k({},{id:"parameters"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"path")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"P")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"the path into the object")))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"const value = { a: { b: { c: 5 } } }\nconst getValue = Deep.withType<typeof value>().getAtWith('a.b.c');\ngetValue(value);\n// => 5\n")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"matchatwith"}),(0,n.kt)("inlineCode",{parentName:"h3"},"matchAtWith")),(0,n.kt)("p",null,"Returns a function that matches a given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," with the given ",(0,n.kt)("inlineCode",{parentName:"p"},"matcher")," at the given string ",(0,n.kt)("inlineCode",{parentName:"p"},"path"),".")),(0,n.kt)("h4",k({},{id:"definition-1"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"matchAtWith<P extends "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Path/Get/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Get")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>>(path: P, matcher: "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Match/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Match")),(0,n.kt)("inlineCode",{parentName:"p"},"<"),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Result")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, P>>): (source: T) => boolean;"))),(0,n.kt)("h4",k({},{id:"type-parameters-2"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"P"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Path/Get/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Get")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"the string literal path type in the object")))),(0,n.kt)("h4",k({},{id:"parameters-1"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"path")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"P")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"the string path in the object")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"matcher")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Match/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Match")),(0,n.kt)("inlineCode",{parentName:"td"},"<"),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Path/Result/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Result")),(0,n.kt)("inlineCode",{parentName:"td"},"<T, P>>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"a matcher object that matches input values.")))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"const items = [{ a: { b:  1, c: 'a' } }, { a: { b: 2, c: 'b' } }];\nitems.filter(Deep.matchAtWith('a.b', 2));\n// => [{ a: 2, b: 'b' }]\n")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"matchwith"}),(0,n.kt)("inlineCode",{parentName:"h3"},"matchWith")),(0,n.kt)("p",null,"Returns a function that matches a given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," with the given ",(0,n.kt)("inlineCode",{parentName:"p"},"matcher"),".")),(0,n.kt)("h4",k({},{id:"definition-2"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"matchWith(matcher: "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Match/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Match")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>): (source: T) => boolean;"))),(0,n.kt)("h4",k({},{id:"parameters-2"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"matcher")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Match/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Match")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"a matcher object that matches input values.")))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"const value = { a: 1, b: 'a' };\nconst m = Deep.withType<typeof value>().matchWith({ a: 1 });\nm(value);\n// => true\n")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"patchatwith"}),(0,n.kt)("inlineCode",{parentName:"h3"},"patchAtWith")),(0,n.kt)("p",null,"Returns a function that patches a given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," with the given ",(0,n.kt)("inlineCode",{parentName:"p"},"patchItems")," at the given ",(0,n.kt)("inlineCode",{parentName:"p"},"path"),".")),(0,n.kt)("h4",k({},{id:"definition-3"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"patchAtWith<P extends "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Path/Set/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Set")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>, TT = T>(path: P, patchItem: "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Patch/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Patch")),(0,n.kt)("inlineCode",{parentName:"p"},"<"),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Result")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, P>, "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Result")),(0,n.kt)("inlineCode",{parentName:"p"},"<TT, P>>): (source: T) => T;"))),(0,n.kt)("h4",k({},{id:"type-parameters-3"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Default"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"P"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Path/Set/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Set")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null})),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"the string literal path type in the object")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"TT"),(0,n.kt)("td",k({parentName:"tr"},{align:null})),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"utility type")))),(0,n.kt)("h4",k({},{id:"parameters-3"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"path")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"P")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"the string path in the object")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"patchItem")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Patch/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Patch")),(0,n.kt)("inlineCode",{parentName:"td"},"<"),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Path/Result/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Result")),(0,n.kt)("inlineCode",{parentName:"td"},"<T, P>, "),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Path/Result/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Result")),(0,n.kt)("inlineCode",{parentName:"td"},"<TT, P>>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"the ",(0,n.kt)("inlineCode",{parentName:"td"},"Patch")," definition to update the given value with")))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"const value = { a: { b: 1, c: 'a' } };\nconst upd = Deep.withType<typeof value>().patchAtWith('a', [{ b: (v) => v + 1 }])\nupd(value);\n// => { a: { b: 2, c: 'a' } }\n")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"patchwith"}),(0,n.kt)("inlineCode",{parentName:"h3"},"patchWith")),(0,n.kt)("p",null,"Returns a function that patches a given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," with the given ",(0,n.kt)("inlineCode",{parentName:"p"},"patchItems"),".")),(0,n.kt)("h4",k({},{id:"definition-4"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"patchWith<TE extends T = T, TT = T>(patchItem: "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Patch/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Patch")),(0,n.kt)("inlineCode",{parentName:"p"},"<TT, TE>): (source: TE) => T;"))),(0,n.kt)("h4",k({},{id:"type-parameters-4"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Default"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"TE"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",k({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"TT"),(0,n.kt)("td",k({parentName:"tr"},{align:null})),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"utility type")))),(0,n.kt)("h4",k({},{id:"parameters-4"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"patchItem")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Patch/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Patch")),(0,n.kt)("inlineCode",{parentName:"td"},"<TT, TE>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"the ",(0,n.kt)("inlineCode",{parentName:"td"},"Patch")," definition to update the given value with")))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"const value = { a: 1, b: 'a' };\nconst upd = Deep.withType<typeof value>().patch([{ a: v => v + 1 }]);\nupd(value);\n// => { a: 2, b: 'a' }\n")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"selectatwith"}),(0,n.kt)("inlineCode",{parentName:"h3"},"selectAtWith")),(0,n.kt)("p",null,"Returns a function that selects a certain shape from a given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," with the given ",(0,n.kt)("inlineCode",{parentName:"p"},"selector")," at the given string ",(0,n.kt)("inlineCode",{parentName:"p"},"path"),".")),(0,n.kt)("h4",k({},{id:"definition-5"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"selectAtWith<P extends "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Path/Get/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Get")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>, SL extends "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Selector/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Selector")),(0,n.kt)("inlineCode",{parentName:"p"},"<"),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Result")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, P>>>(path: P, selector: "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Selector/Shape/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Selector.Shape")),(0,n.kt)("inlineCode",{parentName:"p"},"<SL>): (source: T) => "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Selector/Result/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Selector.Result")),(0,n.kt)("inlineCode",{parentName:"p"},"<"),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Path/Result/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Result")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, P>, SL>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-5"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"P"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Path/Get/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Get")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"the string literal path type in the object")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"SL"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Selector/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Selector")),(0,n.kt)("inlineCode",{parentName:"td"},"<"),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Path/Result/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Path.Result")),(0,n.kt)("inlineCode",{parentName:"td"},"<T, P>>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"the selector shape type")))),(0,n.kt)("h4",k({},{id:"parameters-5"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"path")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"P")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"the string path in the object")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"selector")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Selector/Shape/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Selector.Shape")),(0,n.kt)("inlineCode",{parentName:"td"},"<SL>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"a shape indicating the selection from the source values")))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"const value = { a: { b: 1, c: 'a' } };\nconst sel = Deep.withType<typeof value>().selectAtWith('a', { q: 'b' });\nsel(value);\n// => { q: 1 }\n")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",k({},{id:"selectwith"}),(0,n.kt)("inlineCode",{parentName:"h3"},"selectWith")),(0,n.kt)("p",null,"Returns a function that selects a certain shape from a given ",(0,n.kt)("inlineCode",{parentName:"p"},"value")," with the given ",(0,n.kt)("inlineCode",{parentName:"p"},"selector"),".")),(0,n.kt)("h4",k({},{id:"definition-6"}),"Definition"),(0,n.kt)("code",null,(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"selectWith<SL extends "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Selector/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Selector")),(0,n.kt)("inlineCode",{parentName:"p"},"<T>>(selector: "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Selector/Shape/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Selector.Shape")),(0,n.kt)("inlineCode",{parentName:"p"},"<SL>): (source: T) => "),(0,n.kt)("a",k({parentName:"p"},{href:"/api/rimbu/deep/Selector/Result/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Selector.Result")),(0,n.kt)("inlineCode",{parentName:"p"},"<T, SL>;"))),(0,n.kt)("h4",k({},{id:"type-parameters-6"}),"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Constraints"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),"SL"),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Selector/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Selector")),(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"the selector shape type")))),(0,n.kt)("h4",k({},{id:"parameters-6"}),"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",k({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"selector")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),(0,n.kt)("a",k({parentName:"td"},{href:"/api/rimbu/deep/Selector/Shape/type"}),(0,n.kt)("inlineCode",{parentName:"a"},"Selector.Shape")),(0,n.kt)("inlineCode",{parentName:"td"},"<SL>")),(0,n.kt)("td",k({parentName:"tr"},{align:null}),"a shape indicating the selection from the source values")))),(0,n.kt)("admonition",k({},{title:"example",type:"note"}),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",k({parentName:"pre"},{className:"language-ts"}),"const value = { a: { b: 1, c: 'a' } };\nconst sel = Deep.withType<typeof value>().selectWith({ q: 'a.b' });\nsel(value);\n// => { q: 1 }\n")))))}v.isMDXComponent=!0}}]);