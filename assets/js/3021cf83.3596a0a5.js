"use strict";(self.webpackChunkrimbu_docs=self.webpackChunkrimbu_docs||[]).push([[32538],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},73203:function(e,t,n){n.d(t,{r:function(){return d}});var r=n(67294),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;const u={previewwindow:"console",view:"split",editorsize:"60",codemirror:"1",moduleview:"1"};function d(e){const t=(n=((e,t)=>{for(var n in t||(t={}))s.call(t,n)&&c(e,n,t[n]);if(l)for(var n of l(t))p.call(t,n)&&c(e,n,t[n]);return e})({},u),o={module:`/src/${e.path}`},a(n,i(o)));var n,o;const d=function(e){let t="",n="";for(const r in e)t+=`${n}${r}=${e[r]}`,n="&";return""===t?"":`?${t}`}(t),m=`https://codesandbox.io/embed/github/vitoke/rimbu-sandbox/tree/main${d}`,f=`https://codesandbox.io/s/github/vitoke/rimbu-sandbox/tree/main${d}`;return r.createElement(r.Fragment,null,r.createElement("a",{target:"_blank",className:"button button--secondary",href:f,style:{marginBottom:10}},"Open file below in new window with full type-check"),r.createElement("iframe",{src:m,className:"codesandbox-iframe",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}))}},25124:function(e,t,n){n.r(t),n.d(t,{assets:function(){return y},contentTitle:function(){return f},default:function(){return h},frontMatter:function(){return m},metadata:function(){return b},toc:function(){return g}});var r=n(3905),o=n(73203),a=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&u(e,n,t[n]);if(s)for(var n of s(t))c.call(t,n)&&u(e,n,t[n]);return e};const m={id:"getting-started",sidebar_position:2,title:"Getting Started",slug:"./getting-started"},f=void 0,b={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"CodeSandbox",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/docs/getting-started",draft:!1,editUrl:"https://github.com/rimbu-org/rimbu/edit/master/website/docs/getting-started.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"getting-started",sidebar_position:2,title:"Getting Started",slug:"./getting-started"},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/docs/"},next:{title:"Basic Concepts",permalink:"/docs/basic-concepts"}},y={},g=[{value:"CodeSandbox",id:"codesandbox",level:2},{value:"Installation",id:"installation",level:2},{value:"Yarn/NPM",id:"yarnnpm",level:3},{value:"Deno",id:"deno",level:3}],k={toc:g};function h(e){var t,n=e,{components:a}=n,u=((e,t)=>{var n={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&s)for(var r of s(e))t.indexOf(r)<0&&c.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=d(d({},k),u),i(t,l({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("h2",d({},{id:"codesandbox"}),"CodeSandbox"),(0,r.kt)("p",null,"This documentation site makes a lot of use of CodeSandbox TypeScript examples, where you can use the Rimbu library live in a browser environment. Try it out to quickly browse through many examples:"),(0,r.kt)(o.r,{path:"index.ts",mdxType:"SandBox"}),(0,r.kt)("h2",d({},{id:"installation"}),"Installation"),(0,r.kt)("h3",d({},{id:"yarnnpm"}),"Yarn/NPM"),(0,r.kt)("p",null,"To install the library in your own project:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"npm install @rimbu/core"))),(0,r.kt)("p",null,"or"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"yarn add @rimbu/core"))),(0,r.kt)("p",null,"Import into and use immutable goodness in your code:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-ts"}),"import { List, Stream } from '@rimbu/core';\n\nconst list = List.from(Stream.range({ start: 2, amount: 64 }));\nconsole.log(list.toString());\n")),(0,r.kt)("h3",d({},{id:"deno"}),"Deno"),(0,r.kt)("p",null,"For Deno, the following approach is recommended:"),(0,r.kt)("p",null,"In the root folder of your project, create or edit a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"import_map.json")," with the following contents (where you should replace ",(0,r.kt)("inlineCode",{parentName:"p"},"x.y.z")," with the desired version of Rimbu):"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "imports": {\n    "@rimbu/": "https://deno.land/x/rimbu@x.y.z/"\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note: The trailing slashes are important!")),(0,r.kt)("p",null,"In this way you can use relative imports from Rimbu in your code, like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-ts"}),"import { List } from '@rimbu/core/mod.ts';\nimport { HashMap } from '@rimbu/hashed/mod.ts';\n")),(0,r.kt)("p",null,"Note that for sub-packages, due to conversion limitations it is needed to import the ",(0,r.kt)("inlineCode",{parentName:"p"},"index.ts")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"mod.ts"),", like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-ts"}),"import { HashMap } from '@rimbu/hashed/map/index.ts';\n")),(0,r.kt)("p",null,"To run your script (let's assume the entry point is in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/main.ts"),"):"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"deno run --import-map import_map.json src/main.ts")),(0,r.kt)("p",null,"Because Rimbu uses advanced types, this may slow down the type checking part when running your code. If you're able to rely on your code editor to provide type errors, you can skip the Deno type check using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--no-check")," flag:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"deno run --import-map import_map.json --no-check src/main.ts")))}h.isMDXComponent=!0}}]);